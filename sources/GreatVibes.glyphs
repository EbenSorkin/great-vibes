{
.appVersion = "1271";
copyright = "Â©2004-2020 Robert E. Leuschke";
customParameters = (
{
name = panose;
value = (
2,
0,
5,
7,
8,
0,
0,
2,
0,
2
);
},
{
name = unicodeRanges;
value = (
0
);
},
{
name = fsType;
value = (
2
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
threequarters,
brokenbar,
minus,
multiply,
RS,
US,
onequarter,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
Z.stroke,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
z.alt,
z.stroke,
braceleft,
bar,
braceright,
asciitilde,
DEL,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
notequal,
AE,
infinity,
plusminus,
lessequal,
greaterequal,
yen,
mu,
partialdiff,
pi,
integral,
ordfeminine,
ordmasculine,
summation,
Omega,
ae,
questiondown,
exclamdown,
logicalnot,
radical,
florin,
approxequal,
Delta,
guillemotleft,
guillemotright,
ellipsis,
nonbreakingspace,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
Euro,
ydieresis,
Ydieresis,
fraction,
currency,
guilsinglleft,
guilsinglright,
daggerdbl,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
apple,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
periodcentered,
Eth,
Lslash,
lslash,
Scaron,
scaron,
Yacute,
yacute,
Thorn,
thorn,
Zcaron,
zcaron,
uni00AD,
section,
eth,
divide,
oslash,
Oslash,
z.alt.caron,
robbie,
lozenge,
Lcaron,
Sacute,
Aogonek,
commaaccent,
Scommaaccent,
Tcaron,
Zacute,
Zdotaccent,
aogonek,
lcaron,
sacute,
scommaaccent,
tcaron,
zacute,
z.alt.acute,
zdotaccent,
z.alt_dotaccent,
Racute,
Abreve,
Lacute,
Cacute,
Ccaron,
Eogonek,
Ecaron,
Dcaron,
Dcroat,
Nacute,
Ncaron,
Ohungarumlaut,
Rcaron,
Uring,
Uhungarumlaut,
Tcommaaccent,
racute,
abreve,
lacute,
cacute,
ccaron,
eogonek,
ecaron,
dcaron,
dcroat,
nacute,
ncaron,
ohungarumlaut,
rcaron,
uring,
uhungarumlaut,
tcommaaccent,
Hbar,
Hcircumflex,
Idotaccent,
Scedilla,
Gbreve,
Jcircumflex,
hbar,
hcircumflex,
scedilla,
gbreve,
jcircumflex,
dotlessj,
Cdotaccent,
Ccircumflex,
Gdotaccent,
Gcircumflex,
Ubreve,
Scircumflex,
ccircumflex,
cdotaccent,
gdotaccent,
gcircumflex,
ubreve,
scircumflex,
kgreenlandic,
Rcommaaccent,
Itilde,
Lcommaaccent,
Emacron,
Gcommaaccent,
Tbar,
rcommaaccent,
itilde,
lcommaaccent,
emacron,
gcommaaccent,
tbar,
Eng,
Amacron,
eng,
Iogonek,
Edotaccent,
Imacron,
Ncommaaccent,
uogonek,
Omacron,
Kcommaaccent,
Uogonek,
Utilde,
utilde,
Umacron,
amacron,
iogonek,
edotaccent,
imacron,
ncommaaccent,
omacron,
kcommaaccent,
umacron,
afii00208,
uni1E02,
uni1E03,
uni1E0A,
Wgrave,
Wacute,
uni1E0B,
Ygrave,
uni1E1E,
uni1E1F,
uni1E40,
uni1E41,
uni1E56,
wgrave,
uni1E57,
wacute,
uni1E60,
ygrave,
Wdieresis,
wdieresis,
uni1E61,
Wcircumflex,
uni1E6A,
Ycircumflex,
wcircumflex,
uni1E6B,
ycircumflex,
A.001,
B.001,
C.001,
D.001,
E.001,
F.001,
G.001,
H.001,
I.001,
J.001,
K.001,
L.001,
M.001,
N.001,
O.001,
P.001,
Q.001,
R.001,
S.001,
T.001,
U.001,
V.001,
W.001,
X.001,
Y.001,
Z.001,
Z.001.stroke,
r.001,
r.002,
P_r.001,
ffi,
fl,
ffl,
t_t,
b.alt,
d.alt,
e.001,
f.alt,
g.001,
h.alt,
h.001,
k.001,
k.alt,
l.001,
p.001,
s.alt,
t.001,
y.001,
C.alt,
apostrophe,
t_h,
e_n,
e_m,
z.stroke.acute,
z.stroke.caron,
z.stroke_dotaccent,
Z.stroke_acute,
Z.stroke_caron,
Z.stroke_dotaccent,
T_h,
z_z,
zero.superior,
onesuperior,
twosuperior,
threesuperior,
four.superior,
five.superior,
six.superior,
seven.superior,
eight.superior,
nine.superior,
zero.inferior,
one.inferior,
two.inferior,
three.inferior,
four.inferior,
five.inferior,
six.inferior,
seven.inferior,
eight.inferior,
nine.inferior,
threeeighths,
zero.onum,
one.onum,
two.onum,
three.onum,
four.onum,
five.onum,
six.onum,
seven.onum,
eight.onum,
nine.onum,
onehalf,
twothirds,
product,
fi
);
}
);
date = "2020-07-07 08:32:10 +0000";
designer = "Robert E. Leuschke";
designerURL = www.typesetit.com;
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = GreatVibes;
features = (
{
code = "script latn;\012sub b by b.alt;\012sub d by d.alt;\012sub f by f.alt;\012sub k by k.alt;\012sub s by s.alt;\012sub z by z.alt;\012";
name = calt;
},
{
code = "script latn;\012sub P r by P_r.001;\012sub T h by T_h;\012sub e m by e_m;\012sub e n by e_n;\012sub t h by t_h;\012sub t t by t_t;\012";
name = clig;
},
{
code = "script latn;\012sub one slash two by onehalf;\012sub one slash four by onequarter;\012sub two slash three by twothirds;\012sub three slash four by threequarters;\012";
name = frac;
},
{
code = "script latn;\012sub f f i by ffi;\012sub f f l by ffl;\012sub f l by fl;\012sub z z by z_z;\012";
name = liga;
},
{
code = "script latn;\012sub zero by zero.onum;\012sub one by one.onum;\012sub two by two.onum;\012sub three by three.onum;\012sub four by four.onum;\012sub five by five.onum;\012sub six by six.onum;\012sub seven by seven.onum;\012sub eight by eight.onum;\012sub nine by nine.onum;\012language AFK ;\012sub zero by zero.onum;\012sub one by one.onum;\012sub two by two.onum;\012sub three by three.onum;\012sub four by four.onum;\012sub five by five.onum;\012sub six by six.onum;\012sub seven by seven.onum;\012sub eight by eight.onum;\012sub nine by nine.onum;\012language DEU ;\012sub zero by zero.onum;\012sub one by one.onum;\012sub two by two.onum;\012sub three by three.onum;\012sub four by four.onum;\012sub five by five.onum;\012sub six by six.onum;\012sub seven by seven.onum;\012sub eight by eight.onum;\012sub nine by nine.onum;\012language NLD ;\012sub zero by zero.onum;\012sub one by one.onum;\012sub two by two.onum;\012sub three by three.onum;\012sub four by four.onum;\012sub five by five.onum;\012sub six by six.onum;\012sub seven by seven.onum;\012sub eight by eight.onum;\012sub nine by nine.onum;\012language ROM ;\012sub zero by zero.onum;\012sub one by one.onum;\012sub two by two.onum;\012sub three by three.onum;\012sub four by four.onum;\012sub five by five.onum;\012sub six by six.onum;\012sub seven by seven.onum;\012sub eight by eight.onum;\012sub nine by nine.onum;\012language TRK ;\012sub zero by zero.onum;\012sub one by one.onum;\012sub two by two.onum;\012sub three by three.onum;\012sub four by four.onum;\012sub five by five.onum;\012sub six by six.onum;\012sub seven by seven.onum;\012sub eight by eight.onum;\012sub nine by nine.onum;\012";
name = onum;
},
{
code = "script latn;\012sub A by A.001;\012sub B by B.001;\012sub C by C.001;\012sub D by D.001;\012sub E by E.001;\012sub F by F.001;\012sub G by G.001;\012sub H by H.001;\012sub I by I.001;\012sub J by J.001;\012sub K by K.001;\012sub L by L.001;\012sub M by M.001;\012sub N by N.001;\012sub O by O.001;\012sub P by P.001;\012sub Q by Q.001;\012sub R by R.001;\012sub S by S.001;\012sub T by T.001;\012sub U by U.001;\012sub V by V.001;\012sub W by W.001;\012sub X by X.001;\012sub Y by Y.001;\012sub Z by Z.001;\012sub Z.stroke by Z.001.stroke;\012sub e.001 by e.001;\012sub g.001 by g.001;\012sub h.001 by h.001;\012sub k.001 by k.001;\012sub l.001 by l.001;\012sub p.001 by p.001;\012sub t.001 by t.001;\012sub y.001 by y.001;\012";
name = ss01;
},
{
code = "script latn;\012sub b by b.alt;\012sub d by d.alt;\012sub e by e.001;\012sub f by f.alt;\012sub g by g.001;\012sub h by h.alt;\012sub k by k.alt;\012sub l by l.001;\012sub p by p.001;\012sub s by s.alt;\012sub t by t.001;\012sub y by y.001;\012";
name = ss02;
}
);
fontMaster = (
{
ascender = 1100;
capHeight = 858;
custom = Script;
customParameters = (
{
name = typoAscender;
value = 627;
},
{
name = typoDescender;
value = -287;
},
{
name = typoLineGap;
value = 69;
},
{
name = winAscent;
value = 985;
},
{
name = winDescent;
value = 400;
},
{
name = hheaAscender;
value = 969;
},
{
name = hheaDescender;
value = -398;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 2 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0123 2 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0123 97 79 62 44 27 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0124 367 300 234 167 100 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 275 207 161 115 69 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 230 207 161 115 69 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 3 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
20,
20,
24,
57,
15,
0,
6,
177,
30,
406,
31
);
}
);
descender = -400;
id = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
weightValue = 400;
widthValue = 5;
xHeight = 335;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1000;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 0;
}
);
note = .null;
},
{
glyphname = CR;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 259;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 259;
}
);
note = space;
unicode = 0020;
},
{
glyphname = threequarters;
layers = (
{
components = (
{
name = four.inferior;
transform = "{1, 0, 0, 1, 296, 0}";
},
{
name = fraction;
},
{
name = threesuperior;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 622;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"428 749 LINE",
"376 749 LINE",
"286 327 LINE",
"334 322 LINE",
"334 322 LINE"
);
},
{
closed = 1;
nodes = (
"311 216 LINE",
"264 220 LINE",
"168 -231 LINE",
"220 -231 LINE",
"220 -231 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 485;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = minus;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"362 208 LINE",
"362 229 LINE",
"361 230 LINE",
"108 230 LINE",
"107 229 LINE",
"107 208 LINE",
"108 207 LINE",
"361 207 LINE",
"361 207 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
7 2 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
5 2 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 373;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"260 285 LINE",
"260 288 OFFCURVE",
"252 306 OFFCURVE",
"249 306 QCURVE",
"175 226 LINE",
"133 311 LINE",
"130 310 OFFCURVE",
"115 294 OFFCURVE",
"114 291 QCURVE",
"157 207 LINE",
"83 127 LINE",
"83 125 OFFCURVE",
"92 107 OFFCURVE",
"94 106 QCURVE",
"168 186 LINE",
"210 101 LINE",
"213 102 OFFCURVE",
"228 118 OFFCURVE",
"229 121 QCURVE",
"186 205 LINE",
"186 205 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 4 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 4 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 304;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = RS;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 500;
}
);
note = RS;
},
{
glyphname = US;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 500;
}
);
note = US;
},
{
glyphname = onequarter;
layers = (
{
components = (
{
name = fraction;
},
{
name = onesuperior;
},
{
name = four.inferior;
transform = "{1, 0, 0, 1, 296, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 622;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = exclam;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"538 617 LINE",
"533 619 LINE",
"523 619 OFFCURVE",
"499 620 OFFCURVE",
"475 618 OFFCURVE",
"455 609 OFFCURVE",
"450 599 QCURVE SMOOTH",
"196 115 LINE",
"195 108 LINE",
"205 107 LINE",
"212 117 OFFCURVE",
"247 170 OFFCURVE",
"296 241 OFFCURVE",
"353 326 OFFCURVE",
"411 412 OFFCURVE",
"466 494 OFFCURVE",
"510 561 OFFCURVE",
"538 605 OFFCURVE",
"540 611 QCURVE",
"540 611 LINE"
);
},
{
closed = 1;
nodes = (
"205 44 OFFCURVE",
"185 68 OFFCURVE",
"168 68 QCURVE SMOOTH",
"151 68 OFFCURVE",
"122 44 OFFCURVE",
"120 27 QCURVE SMOOTH",
"117 10 OFFCURVE",
"137 -14 OFFCURVE",
"154 -14 QCURVE SMOOTH",
"171 -14 OFFCURVE",
"199 10 OFFCURVE",
"202 27 QCURVE",
"202 27 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
28 22 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 350;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"328 657 OFFCURVE",
"308 657 QCURVE SMOOTH",
"294 657 OFFCURVE",
"277 639 OFFCURVE",
"279 625 QCURVE",
"287 459 LINE",
"297 459 LINE",
"300 470 OFFCURVE",
"313 521 OFFCURVE",
"325 576 OFFCURVE",
"333 626 OFFCURVE",
"331 637 QCURVE",
"331 637 LINE"
);
},
{
closed = 1;
nodes = (
"219 657 OFFCURVE",
"200 657 QCURVE SMOOTH",
"187 657 OFFCURVE",
"169 637 OFFCURVE",
"170 624 QCURVE SMOOTH",
"179 459 LINE",
"189 459 LINE",
"192 471 OFFCURVE",
"205 521 OFFCURVE",
"217 577 OFFCURVE",
"224 627 OFFCURVE",
"222 638 QCURVE",
"222 638 LINE"
);
}
);
width = 318;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"719 465 LINE",
"571 465 LINE",
"710 696 LINE",
"656 696 LINE",
"517 465 LINE",
"377 465 LINE",
"517 696 LINE",
"462 696 LINE",
"324 465 LINE",
"154 465 LINE",
"125 417 LINE",
"295 417 LINE",
"211 276 LINE",
"55 276 LINE",
"25 229 LINE",
"183 229 LINE",
"45 0 LINE",
"98 0 LINE",
"237 229 LINE",
"375 229 LINE",
"238 0 LINE",
"291 0 LINE",
"430 229 LINE",
"591 229 LINE",
"620 276 LINE",
"459 276 LINE",
"542 417 LINE",
"691 417 LINE",
"691 417 LINE"
);
},
{
closed = 1;
nodes = (
"488 417 LINE",
"404 276 LINE",
"264 276 LINE",
"349 417 LINE",
"349 417 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
18 2 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 6 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 6 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 6 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 746;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"475 515 OFFCURVE",
"442 565 OFFCURVE",
"401 572 QCURVE",
"434 633 LINE",
"402 627 LINE",
"374 575 LINE",
"340 575 OFFCURVE",
"264 557 OFFCURVE",
"199 519 OFFCURVE",
"157 460 OFFCURVE",
"157 420 QCURVE SMOOTH",
"157 384 OFFCURVE",
"195 320 OFFCURVE",
"217 293 QCURVE",
"68 21 LINE",
"38 27 OFFCURVE",
"-18 54 OFFCURVE",
"-40 77 QCURVE",
"-49 77 LINE",
"-52 74 OFFCURVE",
"-66 58 OFFCURVE",
"-67 53 QCURVE",
"-58 41 OFFCURVE",
"-28 23 OFFCURVE",
"6 11 OFFCURVE",
"42 3 OFFCURVE",
"56 0 QCURVE",
"21 -61 LINE",
"55 -55 LINE",
"83 -2 LINE",
"124 -2 OFFCURVE",
"215 23 OFFCURVE",
"290 71 OFFCURVE",
"339 144 OFFCURVE",
"339 192 QCURVE SMOOTH",
"339 234 OFFCURVE",
"296 308 OFFCURVE",
"272 340 QCURVE",
"389 552 LINE",
"410 547 OFFCURVE",
"447 522 OFFCURVE",
"452 492 QCURVE",
"450 498 OFFCURVE",
"429 509 OFFCURVE",
"421 509 QCURVE SMOOTH",
"401 509 OFFCURVE",
"377 485 OFFCURVE",
"376 467 QCURVE SMOOTH",
"375 448 OFFCURVE",
"401 421 OFFCURVE",
"420 421 QCURVE SMOOTH",
"444 421 OFFCURVE",
"475 461 OFFCURVE",
"475 487 QCURVE",
"475 487 LINE"
);
},
{
closed = 1;
nodes = (
"256 362 LINE",
"243 383 OFFCURVE",
"220 420 OFFCURVE",
"220 446 QCURVE SMOOTH",
"220 471 OFFCURVE",
"244 512 OFFCURVE",
"281 541 OFFCURVE",
"327 557 OFFCURVE",
"350 557 QCURVE SMOOTH",
"354 557 OFFCURVE",
"360 556 OFFCURVE",
"364 556 QCURVE",
"364 556 LINE"
);
},
{
closed = 1;
nodes = (
"276 139 OFFCURVE",
"243 81 OFFCURVE",
"191 40 OFFCURVE",
"126 18 OFFCURVE",
"94 18 QCURVE",
"235 272 LINE",
"251 251 OFFCURVE",
"276 201 OFFCURVE",
"276 174 QCURVE",
"276 174 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
66 3 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 3 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 4 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
50 43 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
51 43 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 62 21 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
65 43 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
10 66 26 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
69 43 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 3 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 449;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"620 661 LINE",
"620 665 OFFCURVE",
"613 668 OFFCURVE",
"604 668 OFFCURVE",
"595 666 OFFCURVE",
"594 665 QCURVE SMOOTH",
"589 662 OFFCURVE",
"544 612 OFFCURVE",
"487 549 OFFCURVE",
"430 489 OFFCURVE",
"413 476 QCURVE SMOOTH",
"386 454 OFFCURVE",
"332 421 OFFCURVE",
"285 406 OFFCURVE",
"248 413 OFFCURVE",
"238 432 QCURVE",
"255 448 OFFCURVE",
"295 505 OFFCURVE",
"328 571 OFFCURVE",
"348 639 OFFCURVE",
"344 695 OFFCURVE",
"310 731 OFFCURVE",
"273 732 QCURVE SMOOTH",
"248 732 OFFCURVE",
"193 706 OFFCURVE",
"142 659 OFFCURVE",
"98 598 OFFCURVE",
"83 564 QCURVE SMOOTH",
"69 531 OFFCURVE",
"59 466 OFFCURVE",
"70 414 OFFCURVE",
"103 382 OFFCURVE",
"132 381 QCURVE SMOOTH",
"155 380 OFFCURVE",
"199 399 OFFCURVE",
"219 415 QCURVE",
"239 394 OFFCURVE",
"290 388 OFFCURVE",
"347 408 OFFCURVE",
"408 448 OFFCURVE",
"437 473 QCURVE",
"322 331 OFFCURVE",
"93 54 OFFCURVE",
"-33 -79 QCURVE",
"-32 -84 LINE",
"5 -84 LINE",
"5 -84 LINE"
);
},
{
closed = 1;
nodes = (
"465 322 OFFCURVE",
"410 295 OFFCURVE",
"359 249 OFFCURVE",
"315 187 OFFCURVE",
"300 153 QCURVE SMOOTH",
"286 120 OFFCURVE",
"276 55 OFFCURVE",
"287 4 OFFCURVE",
"320 -28 OFFCURVE",
"349 -29 QCURVE SMOOTH",
"384 -30 OFFCURVE",
"457 21 OFFCURVE",
"517 98 OFFCURVE",
"559 188 OFFCURVE",
"567 267 OFFCURVE",
"534 320 OFFCURVE",
"490 321 QCURVE",
"490 321 LINE"
);
},
{
closed = 1;
nodes = (
"310 693 OFFCURVE",
"321 663 OFFCURVE",
"317 622 OFFCURVE",
"302 573 OFFCURVE",
"283 528 OFFCURVE",
"262 490 OFFCURVE",
"255 480 QCURVE",
"257 484 OFFCURVE",
"257 491 QCURVE SMOOTH",
"257 504 OFFCURVE",
"240 521 OFFCURVE",
"227 521 QCURVE SMOOTH",
"209 521 OFFCURVE",
"193 495 OFFCURVE",
"193 478 QCURVE SMOOTH",
"191 455 OFFCURVE",
"208 429 QCURVE",
"190 414 OFFCURVE",
"155 400 OFFCURVE",
"140 405 QCURVE SMOOTH",
"126 409 OFFCURVE",
"116 437 OFFCURVE",
"120 481 OFFCURVE",
"138 536 OFFCURVE",
"152 567 QCURVE SMOOTH",
"166 597 OFFCURVE",
"202 649 OFFCURVE",
"240 685 OFFCURVE",
"278 702 OFFCURVE",
"294 698 QCURVE",
"294 698 LINE"
);
},
{
closed = 1;
nodes = (
"511 141 OFFCURVE",
"483 84 OFFCURVE",
"472 70 QCURVE SMOOTH",
"463 59 OFFCURVE",
"438 29 OFFCURVE",
"408 3 OFFCURVE",
"374 -11 OFFCURVE",
"357 -6 QCURVE SMOOTH",
"343 -2 OFFCURVE",
"333 26 OFFCURVE",
"337 70 OFFCURVE",
"355 126 OFFCURVE",
"369 157 QCURVE SMOOTH",
"383 187 OFFCURVE",
"419 238 OFFCURVE",
"457 275 OFFCURVE",
"495 292 OFFCURVE",
"512 287 QCURVE SMOOTH",
"525 283 OFFCURVE",
"537 261 OFFCURVE",
"537 230 OFFCURVE",
"529 192 OFFCURVE",
"522 173 QCURVE",
"522 173 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
84 3 78 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 84 21 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
86 78 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
23 2 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
108 2 53 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
81 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 2 98 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 10 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 13 24 13 40 13 56 13 72 13 88 13 104 13 120 13 136 13 152 13 168 13 184 13 200 13 216 13 232 13 248 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 13 24 13 40 13 56 13 72 13 88 13 104 13 120 13 136 13 152 13 168 13 184 13 200 13 216 13 232 13 248 13 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 13 24 13 40 13 56 13 72 13 88 13 104 13 120 13 136 13 152 13 168 13 184 13 200 13 216 13 232 13 248 13 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
86 10 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 621;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"726 428 OFFCURVE",
"715 420 OFFCURVE",
"720 412 QCURVE SMOOTH",
"733 392 OFFCURVE",
"723 358 OFFCURVE",
"691 329 OFFCURVE",
"643 307 OFFCURVE",
"594 291 OFFCURVE",
"551 283 OFFCURVE",
"539 283 QCURVE SMOOTH",
"362 283 LINE SMOOTH",
"286 283 OFFCURVE",
"193 235 OFFCURVE",
"168 163 OFFCURVE",
"216 80 OFFCURVE",
"282 45 QCURVE SMOOTH",
"286 43 OFFCURVE",
"291 47 OFFCURVE",
"291 55 OFFCURVE",
"286 64 OFFCURVE",
"282 66 QCURVE SMOOTH",
"244 86 OFFCURVE",
"212 135 OFFCURVE",
"216 158 QCURVE SMOOTH",
"221 186 OFFCURVE",
"268 225 OFFCURVE",
"332 244 OFFCURVE",
"405 245 OFFCURVE",
"465 227 OFFCURVE",
"504 191 OFFCURVE",
"503 163 QCURVE SMOOTH",
"501 133 OFFCURVE",
"465 65 OFFCURVE",
"402 7 OFFCURVE",
"314 -32 OFFCURVE",
"261 -32 QCURVE SMOOTH",
"203 -32 OFFCURVE",
"132 24 OFFCURVE",
"105 110 OFFCURVE",
"118 212 OFFCURVE",
"168 304 OFFCURVE",
"255 372 OFFCURVE",
"314 381 QCURVE",
"330 365 OFFCURVE",
"382 337 OFFCURVE",
"415 337 QCURVE SMOOTH",
"441 337 OFFCURVE",
"465 355 OFFCURVE",
"464 378 OFFCURVE",
"440 398 OFFCURVE",
"418 400 QCURVE SMOOTH",
"395 402 OFFCURVE",
"351 398 OFFCURVE",
"335 398 QCURVE",
"323 422 OFFCURVE",
"330 478 OFFCURVE",
"355 532 OFFCURVE",
"391 579 OFFCURVE",
"408 594 QCURVE SMOOTH",
"459 638 OFFCURVE",
"563 677 OFFCURVE",
"603 676 QCURVE SMOOTH",
"616 676 OFFCURVE",
"643 669 OFFCURVE",
"663 656 OFFCURVE",
"673 633 OFFCURVE",
"670 616 QCURVE",
"668 623 OFFCURVE",
"646 634 OFFCURVE",
"637 634 QCURVE SMOOTH",
"617 635 OFFCURVE",
"590 609 OFFCURVE",
"589 589 QCURVE SMOOTH",
"588 569 OFFCURVE",
"616 541 OFFCURVE",
"636 541 QCURVE SMOOTH",
"662 541 OFFCURVE",
"697 586 OFFCURVE",
"697 615 QCURVE SMOOTH",
"697 640 OFFCURVE",
"675 674 OFFCURVE",
"640 694 OFFCURVE",
"598 703 OFFCURVE",
"577 703 QCURVE SMOOTH",
"530 704 OFFCURVE",
"425 676 OFFCURVE",
"335 620 OFFCURVE",
"274 538 OFFCURVE",
"273 485 QCURVE SMOOTH",
"273 462 OFFCURVE",
"287 414 OFFCURVE",
"301 395 QCURVE",
"211 385 OFFCURVE",
"86 313 OFFCURVE",
"17 215 OFFCURVE",
"7 106 OFFCURVE",
"58 15 OFFCURVE",
"171 -45 OFFCURVE",
"261 -45 QCURVE SMOOTH",
"316 -45 OFFCURVE",
"412 -14 OFFCURVE",
"488 37 OFFCURVE",
"539 101 OFFCURVE",
"559 167 OFFCURVE",
"545 229 OFFCURVE",
"518 251 QCURVE",
"568 250 OFFCURVE",
"664 277 OFFCURVE",
"730 324 OFFCURVE",
"754 386 OFFCURVE",
"731 420 QCURVE",
"731 420 LINE"
);
},
{
closed = 1;
nodes = (
"430 382 OFFCURVE",
"447 373 OFFCURVE",
"449 362 OFFCURVE",
"433 354 OFFCURVE",
"415 354 QCURVE SMOOTH",
"367 354 OFFCURVE",
"343 384 QCURVE",
"361 385 OFFCURVE",
"397 385 OFFCURVE",
"417 383 QCURVE",
"417 383 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
44 4 32 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
122 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
75 1 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 2 49 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
41 35 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 1 111 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
116 1 65 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
44 35 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
111 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
111 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
114 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 606;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"188 524 OFFCURVE",
"169 559 OFFCURVE",
"147 559 QCURVE SMOOTH",
"130 559 OFFCURVE",
"102 535 OFFCURVE",
"99 518 QCURVE SMOOTH",
"96 501 OFFCURVE",
"116 476 OFFCURVE",
"133 476 QCURVE SMOOTH",
"147 476 OFFCURVE",
"162 486 QCURVE",
"157 452 OFFCURVE",
"113 409 OFFCURVE",
"85 399 QCURVE SMOOTH",
"76 396 OFFCURVE",
"78 385 OFFCURVE",
"88 388 QCURVE SMOOTH",
"104 393 OFFCURVE",
"139 413 OFFCURVE",
"169 441 OFFCURVE",
"188 480 OFFCURVE",
"188 504 QCURVE",
"188 504 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
19 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 13 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 158;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"410 733 OFFCURVE",
"257 634 OFFCURVE",
"137 511 OFFCURVE",
"56 379 OFFCURVE",
"41 324 QCURVE SMOOTH",
"19 238 OFFCURVE",
"32 92 OFFCURVE",
"88 -12 OFFCURVE",
"177 -65 OFFCURVE",
"230 -59 QCURVE SMOOTH",
"255 -56 OFFCURVE",
"256 -35 OFFCURVE",
"237 -37 QCURVE SMOOTH",
"181 -44 OFFCURVE",
"110 18 OFFCURVE",
"79 126 OFFCURVE",
"86 264 OFFCURVE",
"109 333 QCURVE SMOOTH",
"118 362 OFFCURVE",
"151 436 OFFCURVE",
"199 515 OFFCURVE",
"262 594 OFFCURVE",
"342 664 OFFCURVE",
"439 719 OFFCURVE",
"496 734 QCURVE SMOOTH",
"507 737 OFFCURVE",
"519 747 OFFCURVE",
"520 754 OFFCURVE",
"508 758 OFFCURVE",
"496 755 QCURVE",
"496 755 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
17 1 20 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 350;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"514 466 OFFCURVE",
"501 612 OFFCURVE",
"445 716 OFFCURVE",
"356 769 OFFCURVE",
"303 763 QCURVE SMOOTH",
"278 760 OFFCURVE",
"277 739 OFFCURVE",
"297 741 QCURVE SMOOTH",
"352 747 OFFCURVE",
"423 685 OFFCURVE",
"454 578 OFFCURVE",
"446 440 OFFCURVE",
"424 371 QCURVE SMOOTH",
"415 342 OFFCURVE",
"382 268 OFFCURVE",
"334 189 OFFCURVE",
"271 110 OFFCURVE",
"191 40 OFFCURVE",
"95 -15 OFFCURVE",
"38 -30 QCURVE SMOOTH",
"27 -33 OFFCURVE",
"14 -43 OFFCURVE",
"13 -50 OFFCURVE",
"25 -54 OFFCURVE",
"37 -51 QCURVE SMOOTH",
"123 -29 OFFCURVE",
"276 70 OFFCURVE",
"397 193 OFFCURVE",
"478 325 OFFCURVE",
"492 380 QCURVE",
"492 380 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
25 1 22 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 518;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"392 389 LINE",
"256 389 LINE",
"341 481 LINE SMOOTH",
"351 491 OFFCURVE",
"357 511 OFFCURVE",
"353 523 OFFCURVE",
"341 525 OFFCURVE",
"334 517 QCURVE SMOOTH",
"218 400 LINE",
"204 426 OFFCURVE",
"176 483 OFFCURVE",
"159 515 QCURVE SMOOTH",
"153 527 OFFCURVE",
"137 537 OFFCURVE",
"125 535 OFFCURVE",
"120 524 OFFCURVE",
"125 514 QCURVE SMOOTH",
"141 481 OFFCURVE",
"169 418 OFFCURVE",
"182 389 QCURVE",
"37 389 LINE SMOOTH",
"23 389 OFFCURVE",
"15 375 OFFCURVE",
"18 358 OFFCURVE",
"29 344 OFFCURVE",
"36 344 QCURVE SMOOTH",
"168 349 LINE",
"68 248 LINE SMOOTH",
"58 238 OFFCURVE",
"61 222 OFFCURVE",
"74 212 OFFCURVE",
"92 211 OFFCURVE",
"97 216 QCURVE SMOOTH",
"206 335 LINE",
"223 298 OFFCURVE",
"248 241 OFFCURVE",
"256 223 QCURVE SMOOTH",
"262 211 OFFCURVE",
"278 211 OFFCURVE",
"291 223 OFFCURVE",
"297 241 OFFCURVE",
"294 247 QCURVE SMOOTH",
"280 274 OFFCURVE",
"254 326 OFFCURVE",
"241 352 QCURVE",
"373 357 LINE SMOOTH",
"386 357 OFFCURVE",
"403 367 OFFCURVE",
"409 379 OFFCURVE",
"402 389 OFFCURVE",
"392 389 QCURVE",
"392 389 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 431;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"429 239 OFFCURVE",
"360 238 OFFCURVE",
"331 239 QCURVE",
"334 254 OFFCURVE",
"342 294 OFFCURVE",
"350 336 OFFCURVE",
"358 374 OFFCURVE",
"361 388 QCURVE SMOOTH",
"363 398 OFFCURVE",
"357 406 OFFCURVE",
"346 404 OFFCURVE",
"335 393 OFFCURVE",
"333 384 QCURVE SMOOTH",
"329 369 OFFCURVE",
"319 330 OFFCURVE",
"310 290 OFFCURVE",
"301 253 OFFCURVE",
"298 239 QCURVE",
"278 239 OFFCURVE",
"236 240 OFFCURVE",
"198 241 OFFCURVE",
"167 242 OFFCURVE",
"159 242 QCURVE SMOOTH",
"148 242 OFFCURVE",
"137 226 OFFCURVE",
"135 208 OFFCURVE",
"141 193 OFFCURVE",
"147 194 QCURVE SMOOTH",
"158 195 OFFCURVE",
"191 197 OFFCURVE",
"230 199 OFFCURVE",
"270 201 OFFCURVE",
"288 203 QCURVE",
"283 183 OFFCURVE",
"273 142 OFFCURVE",
"263 106 OFFCURVE",
"256 77 OFFCURVE",
"254 68 QCURVE SMOOTH",
"251 57 OFFCURVE",
"265 50 OFFCURVE",
"284 53 OFFCURVE",
"301 63 OFFCURVE",
"302 68 QCURVE SMOOTH",
"304 91 OFFCURVE",
"319 168 OFFCURVE",
"325 205 QCURVE",
"357 207 OFFCURVE",
"429 211 OFFCURVE",
"458 211 QCURVE SMOOTH",
"468 211 OFFCURVE",
"478 219 OFFCURVE",
"478 229 OFFCURVE",
"469 238 OFFCURVE",
"461 238 QCURVE",
"461 238 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
36 2 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 458;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"114 40 OFFCURVE",
"92 68 OFFCURVE",
"70 68 QCURVE SMOOTH",
"53 68 OFFCURVE",
"24 44 OFFCURVE",
"22 27 QCURVE SMOOTH",
"19 10 OFFCURVE",
"39 -14 OFFCURVE",
"56 -14 QCURVE SMOOTH",
"71 -14 OFFCURVE",
"84 -4 QCURVE",
"80 -38 OFFCURVE",
"36 -82 OFFCURVE",
"8 -91 QCURVE SMOOTH",
"-2 -94 OFFCURVE",
"1 -106 OFFCURVE",
"10 -102 QCURVE SMOOTH",
"26 -97 OFFCURVE",
"62 -76 OFFCURVE",
"93 -45 OFFCURVE",
"114 -5 OFFCURVE",
"114 20 QCURVE",
"114 20 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
19 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 13 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 153;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"398 211 OFFCURVE",
"406 219 OFFCURVE",
"404 229 OFFCURVE",
"393 238 OFFCURVE",
"384 238 QCURVE SMOOTH",
"297 240 OFFCURVE",
"195 242 OFFCURVE",
"164 242 QCURVE SMOOTH",
"153 242 OFFCURVE",
"146 226 OFFCURVE",
"149 208 OFFCURVE",
"159 193 OFFCURVE",
"164 194 QCURVE SMOOTH",
"209 199 OFFCURVE",
"319 211 OFFCURVE",
"388 211 QCURVE",
"388 211 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
11 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 406;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"188 44 OFFCURVE",
"168 68 OFFCURVE",
"151 68 QCURVE SMOOTH",
"134 68 OFFCURVE",
"105 44 OFFCURVE",
"103 27 QCURVE SMOOTH",
"100 10 OFFCURVE",
"120 -14 OFFCURVE",
"137 -14 QCURVE SMOOTH",
"154 -14 OFFCURVE",
"182 10 OFFCURVE",
"185 27 QCURVE",
"185 27 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 208;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"629 713 OFFCURVE",
"490 537 OFFCURVE",
"358 370 OFFCURVE",
"235 218 OFFCURVE",
"132 95 OFFCURVE",
"52 5 OFFCURVE",
"27 -17 QCURVE SMOOTH",
"12 -30 OFFCURVE",
"24 -46 OFFCURVE",
"44 -33 QCURVE SMOOTH",
"67 -18 OFFCURVE",
"138 53 OFFCURVE",
"226 152 OFFCURVE",
"327 272 OFFCURVE",
"432 400 OFFCURVE",
"537 531 OFFCURVE",
"633 650 OFFCURVE",
"717 752 OFFCURVE",
"748 788 QCURVE SMOOTH",
"757 798 OFFCURVE",
"750 812 OFFCURVE",
"730 816 OFFCURVE",
"706 810 OFFCURVE",
"698 800 QCURVE",
"698 800 LINE"
);
}
);
width = 548;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"505 491 OFFCURVE",
"495 532 OFFCURVE",
"473 562 OFFCURVE",
"438 579 OFFCURVE",
"412 579 QCURVE SMOOTH",
"370 579 OFFCURVE",
"284 532 OFFCURVE",
"204 455 OFFCURVE",
"134 357 OFFCURVE",
"82 255 OFFCURVE",
"52 157 OFFCURVE",
"52 119 QCURVE SMOOTH",
"52 93 OFFCURVE",
"65 46 OFFCURVE",
"92 10 OFFCURVE",
"133 -11 OFFCURVE",
"161 -11 QCURVE SMOOTH",
"206 -11 OFFCURVE",
"292 38 OFFCURVE",
"369 118 OFFCURVE",
"433 220 OFFCURVE",
"479 327 OFFCURVE",
"505 429 OFFCURVE",
"505 468 QCURVE",
"505 468 LINE"
);
},
{
closed = 1;
nodes = (
"467 457 OFFCURVE",
"442 363 OFFCURVE",
"400 257 OFFCURVE",
"342 149 OFFCURVE",
"277 63 OFFCURVE",
"207 9 OFFCURVE",
"173 9 QCURVE SMOOTH",
"138 9 OFFCURVE",
"112 53 OFFCURVE",
"112 84 QCURVE SMOOTH",
"112 112 OFFCURVE",
"138 205 OFFCURVE",
"183 311 OFFCURVE",
"243 418 OFFCURVE",
"310 505 OFFCURVE",
"380 560 OFFCURVE",
"413 560 QCURVE SMOOTH",
"445 560 OFFCURVE",
"467 515 OFFCURVE",
"467 487 QCURVE",
"467 487 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
34 3 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 3 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 24 26 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 34 21 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
37 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
19 1 27 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 502;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"426 563 LINE",
"426 568 LINE",
"422 570 OFFCURVE",
"420 569 QCURVE",
"389 566 LINE SMOOTH",
"376 564 OFFCURVE",
"352 542 OFFCURVE",
"344 533 QCURVE SMOOTH",
"301 488 OFFCURVE",
"212 417 OFFCURVE",
"161 379 QCURVE",
"159 373 LINE",
"163 365 LINE",
"167 365 LINE",
"212 392 OFFCURVE",
"292 453 OFFCURVE",
"330 488 QCURVE",
"262 367 OFFCURVE",
"129 127 OFFCURVE",
"60 6 QCURVE",
"61 0 LINE",
"63 0 OFFCURVE",
"68 -2 OFFCURVE",
"70 -2 QCURVE SMOOTH",
"79 -1 OFFCURVE",
"114 0 OFFCURVE",
"122 5 QCURVE",
"421 553 LINE",
"421 553 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 378;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"503 534 OFFCURVE",
"450 576 OFFCURVE",
"412 576 QCURVE SMOOTH",
"374 576 OFFCURVE",
"308 543 OFFCURVE",
"254 490 OFFCURVE",
"214 425 OFFCURVE",
"202 392 QCURVE",
"204 386 LINE",
"216 386 LINE",
"220 390 LINE",
"229 414 OFFCURVE",
"262 469 OFFCURVE",
"305 515 OFFCURVE",
"356 545 OFFCURVE",
"385 545 QCURVE SMOOTH",
"407 545 OFFCURVE",
"433 524 OFFCURVE",
"433 501 QCURVE SMOOTH",
"433 472 OFFCURVE",
"398 402 OFFCURVE",
"343 327 OFFCURVE",
"273 251 OFFCURVE",
"204 182 OFFCURVE",
"141 125 OFFCURVE",
"121 107 QCURVE",
"116 109 OFFCURVE",
"104 109 OFFCURVE",
"99 108 QCURVE",
"97 107 OFFCURVE",
"66 75 OFFCURVE",
"31 36 OFFCURVE",
"2 3 OFFCURVE",
"1 0 QCURVE",
"14 -8 LINE",
"84 47 LINE",
"93 43 OFFCURVE",
"136 24 OFFCURVE",
"184 4 OFFCURVE",
"229 -12 OFFCURVE",
"240 -12 QCURVE SMOOTH",
"260 -12 OFFCURVE",
"305 14 OFFCURVE",
"349 52 OFFCURVE",
"386 92 OFFCURVE",
"398 107 QCURVE",
"398 111 LINE",
"391 117 LINE",
"386 115 OFFCURVE",
"365 92 OFFCURVE",
"336 66 OFFCURVE",
"299 44 OFFCURVE",
"278 44 QCURVE SMOOTH",
"269 44 OFFCURVE",
"231 58 OFFCURVE",
"189 77 OFFCURVE",
"151 96 OFFCURVE",
"141 101 QCURVE",
"160 117 OFFCURVE",
"228 172 OFFCURVE",
"309 241 OFFCURVE",
"392 319 OFFCURVE",
"460 396 OFFCURVE",
"503 466 OFFCURVE",
"503 493 QCURVE",
"503 493 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
46 3 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 46 26 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
12 24 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 2 49 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 488;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"486 550 OFFCURVE",
"440 578 OFFCURVE",
"410 578 QCURVE SMOOTH",
"382 578 OFFCURVE",
"331 559 OFFCURVE",
"285 528 OFFCURVE",
"245 489 OFFCURVE",
"228 468 QCURVE",
"228 463 LINE",
"235 457 LINE",
"240 457 LINE",
"252 470 OFFCURVE",
"283 502 OFFCURVE",
"319 528 OFFCURVE",
"358 546 OFFCURVE",
"378 546 QCURVE SMOOTH",
"396 546 OFFCURVE",
"417 529 OFFCURVE",
"417 510 QCURVE SMOOTH",
"417 474 OFFCURVE",
"366 410 OFFCURVE",
"293 357 OFFCURVE",
"214 319 OFFCURVE",
"187 308 QCURVE",
"183 303 LINE",
"184 294 LINE",
"191 291 LINE",
"208 296 OFFCURVE",
"244 305 OFFCURVE",
"261 305 QCURVE SMOOTH",
"290 305 OFFCURVE",
"331 274 OFFCURVE",
"331 243 QCURVE SMOOTH",
"331 203 OFFCURVE",
"285 121 OFFCURVE",
"215 54 OFFCURVE",
"131 11 OFFCURVE",
"92 11 QCURVE SMOOTH",
"76 11 OFFCURVE",
"36 19 OFFCURVE",
"22 26 QCURVE",
"17 24 LINE",
"10 18 LINE",
"10 13 LINE",
"30 -1 OFFCURVE",
"80 -11 OFFCURVE",
"103 -11 QCURVE SMOOTH",
"146 -11 OFFCURVE",
"249 31 OFFCURVE",
"339 100 OFFCURVE",
"399 189 OFFCURVE",
"399 235 QCURVE SMOOTH",
"399 262 OFFCURVE",
"373 297 OFFCURVE",
"334 318 OFFCURVE",
"286 327 OFFCURVE",
"264 327 QCURVE",
"293 337 OFFCURVE",
"370 371 OFFCURVE",
"439 418 OFFCURVE",
"486 478 OFFCURVE",
"486 516 QCURVE",
"486 516 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 10 21 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
24 1 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 2 46 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 458;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"485 562 LINE",
"484 569 LINE",
"477 572 LINE",
"457 568 OFFCURVE",
"429 565 OFFCURVE",
"407 558 OFFCURVE",
"386 542 OFFCURVE",
"374 526 QCURVE SMOOTH",
"342 483 OFFCURVE",
"274 403 OFFCURVE",
"239 363 QCURVE SMOOTH",
"203 322 OFFCURVE",
"116 239 OFFCURVE",
"83 197 QCURVE SMOOTH",
"81 195 OFFCURVE",
"80 192 OFFCURVE",
"79 190 QCURVE",
"79 182 LINE",
"322 188 LINE",
"320 184 OFFCURVE",
"303 154 OFFCURVE",
"281 113 OFFCURVE",
"256 67 OFFCURVE",
"236 27 OFFCURVE",
"222 0 OFFCURVE",
"222 -2 QCURVE SMOOTH",
"222 -6 LINE",
"227 -7 LINE SMOOTH",
"230 -7 OFFCURVE",
"249 -4 OFFCURVE",
"271 1 OFFCURVE",
"289 6 OFFCURVE",
"291 8 QCURVE SMOOTH",
"295 12 OFFCURVE",
"322 64 OFFCURVE",
"353 126 OFFCURVE",
"380 182 OFFCURVE",
"385 191 QCURVE",
"414 192 LINE",
"421 197 LINE",
"426 208 LINE",
"420 212 LINE",
"396 212 LINE",
"399 216 OFFCURVE",
"420 258 OFFCURVE",
"444 304 OFFCURVE",
"463 343 OFFCURVE",
"463 345 QCURVE SMOOTH",
"462 351 LINE",
"456 354 LINE",
"442 353 OFFCURVE",
"406 349 OFFCURVE",
"399 335 QCURVE SMOOTH",
"334 209 LINE",
"117 205 LINE",
"125 212 OFFCURVE",
"186 266 OFFCURVE",
"268 340 OFFCURVE",
"359 424 OFFCURVE",
"436 499 OFFCURVE",
"486 554 OFFCURVE",
"485 562 QCURVE",
"485 562 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
23 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 464;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"507 576 LINE",
"503 578 LINE",
"480 561 OFFCURVE",
"420 556 OFFCURVE",
"357 560 OFFCURVE",
"296 563 OFFCURVE",
"273 554 QCURVE",
"270 551 OFFCURVE",
"245 512 OFFCURVE",
"211 454 OFFCURVE",
"172 388 OFFCURVE",
"139 328 OFFCURVE",
"115 283 OFFCURVE",
"113 276 QCURVE",
"113 270 LINE",
"119 268 LINE",
"135 276 OFFCURVE",
"166 295 OFFCURVE",
"199 312 OFFCURVE",
"233 324 OFFCURVE",
"251 324 QCURVE SMOOTH",
"282 324 OFFCURVE",
"316 291 OFFCURVE",
"316 260 QCURVE SMOOTH",
"316 218 OFFCURVE",
"267 128 OFFCURVE",
"192 54 OFFCURVE",
"102 6 OFFCURVE",
"60 6 QCURVE SMOOTH",
"45 6 OFFCURVE",
"12 10 OFFCURVE",
"-2 15 QCURVE",
"-6 13 LINE",
"-12 6 LINE",
"-12 -1 LINE",
"0 -9 OFFCURVE",
"45 -13 OFFCURVE",
"59 -13 QCURVE SMOOTH",
"91 -13 OFFCURVE",
"163 9 OFFCURVE",
"235 47 OFFCURVE",
"302 99 OFFCURVE",
"353 161 OFFCURVE",
"383 229 OFFCURVE",
"383 263 QCURVE SMOOTH",
"383 308 OFFCURVE",
"325 350 OFFCURVE",
"283 350 QCURVE SMOOTH",
"249 350 OFFCURVE",
"177 324 OFFCURVE",
"149 305 QCURVE",
"259 496 LINE",
"290 494 OFFCURVE",
"366 491 OFFCURVE",
"436 504 OFFCURVE",
"493 540 OFFCURVE",
"507 576 QCURVE",
"507 576 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
33 3 12 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 33 26 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
28 1 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
50 5 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 2 36 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 445;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"433 577 LINE",
"426 588 LINE",
"420 587 LINE",
"385 563 OFFCURVE",
"301 497 OFFCURVE",
"216 418 OFFCURVE",
"136 329 OFFCURVE",
"74 236 OFFCURVE",
"37 141 OFFCURVE",
"37 96 QCURVE SMOOTH",
"37 45 OFFCURVE",
"95 -11 OFFCURVE",
"145 -11 QCURVE SMOOTH",
"188 -11 OFFCURVE",
"279 41 OFFCURVE",
"353 121 OFFCURVE",
"400 216 OFFCURVE",
"400 258 QCURVE SMOOTH",
"400 291 OFFCURVE",
"364 337 OFFCURVE",
"329 337 QCURVE SMOOTH",
"296 337 OFFCURVE",
"235 300 OFFCURVE",
"186 243 OFFCURVE",
"151 176 OFFCURVE",
"144 147 QCURVE",
"146 141 LINE",
"156 142 LINE",
"160 147 LINE",
"168 168 OFFCURVE",
"196 222 OFFCURVE",
"234 272 OFFCURVE",
"280 306 OFFCURVE",
"305 306 QCURVE SMOOTH",
"324 306 OFFCURVE",
"339 283 OFFCURVE",
"339 266 QCURVE SMOOTH",
"339 234 OFFCURVE",
"307 147 OFFCURVE",
"254 68 OFFCURVE",
"186 12 OFFCURVE",
"151 12 QCURVE SMOOTH",
"124 12 OFFCURVE",
"96 48 OFFCURVE",
"96 74 QCURVE SMOOTH",
"96 109 OFFCURVE",
"123 190 OFFCURVE",
"163 270 OFFCURVE",
"210 343 OFFCURVE",
"231 370 QCURVE SMOOTH",
"289 446 OFFCURVE",
"360 511 QCURVE SMOOTH",
"376 525 OFFCURVE",
"414 554 OFFCURVE",
"428 569 QCURVE SMOOTH",
"430 571 OFFCURVE",
"431 575 OFFCURVE",
"433 577 QCURVE",
"433 577 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
13 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 13 21 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 21 26 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
16 2 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 2 24 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 421;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"578 562 LINE",
"574 568 LINE",
"570 568 OFFCURVE",
"557 560 OFFCURVE",
"554 558 QCURVE",
"519 563 OFFCURVE",
"447 565 OFFCURVE",
"412 565 QCURVE SMOOTH",
"367 565 OFFCURVE",
"311 554 OFFCURVE",
"270 525 OFFCURVE",
"238 475 OFFCURVE",
"218 435 QCURVE",
"218 429 LINE",
"221 427 LINE",
"232 428 OFFCURVE",
"247 450 OFFCURVE",
"270 477 OFFCURVE",
"307 499 OFFCURVE",
"340 499 QCURVE SMOOTH",
"380 499 OFFCURVE",
"459 496 OFFCURVE",
"499 495 QCURVE",
"490 486 OFFCURVE",
"439 438 OFFCURVE",
"368 370 OFFCURVE",
"283 288 OFFCURVE",
"197 204 OFFCURVE",
"116 122 OFFCURVE",
"52 56 OFFCURVE",
"12 9 OFFCURVE",
"10 2 QCURVE",
"11 -2 LINE",
"17 -5 LINE",
"32 -3 OFFCURVE",
"76 -1 OFFCURVE",
"89 5 QCURVE SMOOTH",
"91 6 OFFCURVE",
"111 29 OFFCURVE",
"133 57 OFFCURVE",
"153 83 OFFCURVE",
"156 86 QCURVE SMOOTH",
"210 154 OFFCURVE",
"320 284 OFFCURVE",
"380 347 QCURVE SMOOTH",
"430 399 OFFCURVE",
"529 501 OFFCURVE",
"576 555 QCURVE",
"576 555 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
40 28 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 488;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"461 541 OFFCURVE",
"407 577 OFFCURVE",
"369 577 QCURVE SMOOTH",
"337 577 OFFCURVE",
"276 551 OFFCURVE",
"229 506 OFFCURVE",
"201 447 OFFCURVE",
"201 414 QCURVE SMOOTH",
"201 373 OFFCURVE",
"218 334 QCURVE",
"192 314 OFFCURVE",
"121 259 OFFCURVE",
"58 193 OFFCURVE",
"14 121 OFFCURVE",
"14 86 QCURVE SMOOTH",
"14 62 OFFCURVE",
"33 26 OFFCURVE",
"65 1 OFFCURVE",
"106 -11 OFFCURVE",
"128 -11 QCURVE SMOOTH",
"164 -11 OFFCURVE",
"236 18 OFFCURVE",
"293 68 OFFCURVE",
"329 134 OFFCURVE",
"329 172 QCURVE SMOOTH",
"329 205 OFFCURVE",
"324 254 OFFCURVE",
"310 284 QCURVE",
"332 303 OFFCURVE",
"384 352 OFFCURVE",
"430 408 OFFCURVE",
"461 469 OFFCURVE",
"461 500 QCURVE",
"461 500 LINE"
);
},
{
closed = 1;
nodes = (
"425 473 OFFCURVE",
"402 417 OFFCURVE",
"366 366 OFFCURVE",
"323 321 OFFCURVE",
"303 305 QCURVE",
"297 320 OFFCURVE",
"284 356 OFFCURVE",
"273 393 OFFCURVE",
"266 430 OFFCURVE",
"266 447 QCURVE SMOOTH",
"266 468 OFFCURVE",
"282 507 OFFCURVE",
"311 538 OFFCURVE",
"349 557 OFFCURVE",
"370 557 QCURVE SMOOTH",
"396 557 OFFCURVE",
"425 527 OFFCURVE",
"425 501 QCURVE",
"425 501 LINE"
);
},
{
closed = 1;
nodes = (
"265 130 OFFCURVE",
"244 77 OFFCURVE",
"207 36 OFFCURVE",
"158 10 OFFCURVE",
"130 10 QCURVE SMOOTH",
"95 10 OFFCURVE",
"60 50 OFFCURVE",
"60 83 QCURVE SMOOTH",
"60 119 OFFCURVE",
"91 186 OFFCURVE",
"139 245 OFFCURVE",
"197 295 OFFCURVE",
"223 315 QCURVE",
"237 280 OFFCURVE",
"265 194 OFFCURVE",
"265 157 QCURVE",
"265 157 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
51 3 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
33 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 3 18 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 33 26 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
10 51 26 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
46 8 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
54 18 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 59 21 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
62 1 13 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 420;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"438 479 OFFCURVE",
"427 522 OFFCURVE",
"403 556 OFFCURVE",
"366 577 OFFCURVE",
"340 577 QCURVE SMOOTH",
"297 577 OFFCURVE",
"203 518 OFFCURVE",
"125 430 OFFCURVE",
"74 328 OFFCURVE",
"74 286 QCURVE SMOOTH",
"74 253 OFFCURVE",
"110 208 OFFCURVE",
"145 208 QCURVE SMOOTH",
"178 208 OFFCURVE",
"237 248 OFFCURVE",
"287 308 OFFCURVE",
"323 375 OFFCURVE",
"334 402 QCURVE",
"333 407 LINE",
"322 408 LINE",
"318 405 LINE",
"309 384 OFFCURVE",
"284 336 OFFCURVE",
"250 294 OFFCURVE",
"207 266 OFFCURVE",
"181 266 QCURVE SMOOTH",
"155 266 OFFCURVE",
"131 298 OFFCURVE",
"131 322 QCURVE SMOOTH",
"131 355 OFFCURVE",
"164 436 OFFCURVE",
"218 508 OFFCURVE",
"287 556 OFFCURVE",
"323 556 QCURVE SMOOTH",
"355 556 OFFCURVE",
"378 515 OFFCURVE",
"378 487 QCURVE SMOOTH",
"378 469 OFFCURVE",
"373 432 OFFCURVE",
"368 415 QCURVE SMOOTH",
"333 279 OFFCURVE",
"174 72 OFFCURVE",
"62 -7 QCURVE",
"58 -13 LINE",
"63 -22 LINE",
"69 -22 LINE",
"123 13 OFFCURVE",
"251 119 OFFCURVE",
"363 246 OFFCURVE",
"438 386 OFFCURVE",
"438 456 QCURVE",
"438 456 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 14 26 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 22 21 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
25 38 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 435;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"257 268 OFFCURVE",
"237 292 OFFCURVE",
"220 292 QCURVE SMOOTH",
"203 292 OFFCURVE",
"174 268 OFFCURVE",
"172 251 QCURVE SMOOTH",
"169 234 OFFCURVE",
"189 210 OFFCURVE",
"206 210 QCURVE SMOOTH",
"223 210 OFFCURVE",
"251 234 OFFCURVE",
"254 251 QCURVE",
"254 251 LINE"
);
},
{
closed = 1;
nodes = (
"147 44 OFFCURVE",
"127 68 OFFCURVE",
"110 68 QCURVE SMOOTH",
"93 68 OFFCURVE",
"65 44 OFFCURVE",
"62 27 QCURVE SMOOTH",
"59 10 OFFCURVE",
"79 -14 OFFCURVE",
"96 -14 QCURVE SMOOTH",
"113 -14 OFFCURVE",
"142 10 OFFCURVE",
"144 27 QCURVE",
"144 27 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
21 15 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 256;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"257 268 OFFCURVE",
"237 292 OFFCURVE",
"220 292 QCURVE SMOOTH",
"203 292 OFFCURVE",
"174 268 OFFCURVE",
"172 251 QCURVE SMOOTH",
"169 234 OFFCURVE",
"189 210 OFFCURVE",
"206 210 QCURVE SMOOTH",
"223 210 OFFCURVE",
"251 234 OFFCURVE",
"254 251 QCURVE",
"254 251 LINE"
);
},
{
closed = 1;
nodes = (
"151 34 OFFCURVE",
"132 68 OFFCURVE",
"110 68 QCURVE SMOOTH",
"93 68 OFFCURVE",
"65 44 OFFCURVE",
"62 27 QCURVE SMOOTH",
"59 10 OFFCURVE",
"79 -14 OFFCURVE",
"96 -14 QCURVE SMOOTH",
"110 -14 OFFCURVE",
"125 -4 QCURVE",
"120 -38 OFFCURVE",
"76 -82 OFFCURVE",
"48 -91 QCURVE SMOOTH",
"39 -94 OFFCURVE",
"41 -106 OFFCURVE",
"51 -102 QCURVE SMOOTH",
"67 -97 OFFCURVE",
"102 -78 OFFCURVE",
"132 -49 OFFCURVE",
"151 -11 OFFCURVE",
"151 14 QCURVE",
"151 14 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
12 4 23 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
31 25 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
23 25 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 255;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"333 297 LINE",
"332 304 LINE",
"325 307 LINE",
"322 307 OFFCURVE",
"292 290 OFFCURVE",
"248 264 OFFCURVE",
"197 232 OFFCURVE",
"152 204 OFFCURVE",
"117 182 OFFCURVE",
"112 179 QCURVE",
"121 141 OFFCURVE",
"136 59 OFFCURVE",
"150 24 QCURVE",
"153 21 OFFCURVE",
"158 21 QCURVE",
"165 24 LINE",
"170 34 LINE",
"171 170 LINE",
"181 178 OFFCURVE",
"230 211 OFFCURVE",
"282 249 OFFCURVE",
"326 286 OFFCURVE",
"333 297 QCURVE",
"333 297 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 329;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"409 330 OFFCURVE",
"382 338 OFFCURVE",
"348 342 OFFCURVE",
"316 342 OFFCURVE",
"311 342 QCURVE SMOOTH",
"164 342 LINE SMOOTH",
"156 342 OFFCURVE",
"147 331 OFFCURVE",
"147 323 QCURVE SMOOTH",
"147 316 OFFCURVE",
"155 294 OFFCURVE",
"164 294 QCURVE SMOOTH",
"184 294 OFFCURVE",
"221 301 OFFCURVE",
"241 303 QCURVE SMOOTH",
"279 307 OFFCURVE",
"354 311 OFFCURVE",
"392 311 QCURVE SMOOTH",
"397 311 OFFCURVE",
"409 315 OFFCURVE",
"409 322 QCURVE",
"409 322 LINE"
);
},
{
closed = 1;
nodes = (
"409 230 OFFCURVE",
"382 238 OFFCURVE",
"348 242 OFFCURVE",
"316 242 OFFCURVE",
"311 242 QCURVE SMOOTH",
"164 242 LINE SMOOTH",
"156 242 OFFCURVE",
"147 231 OFFCURVE",
"147 223 QCURVE SMOOTH",
"147 216 OFFCURVE",
"155 194 OFFCURVE",
"164 194 QCURVE SMOOTH",
"184 194 OFFCURVE",
"221 201 OFFCURVE",
"241 203 QCURVE SMOOTH",
"279 207 OFFCURVE",
"354 211 OFFCURVE",
"392 211 QCURVE SMOOTH",
"397 211 OFFCURVE",
"409 215 OFFCURVE",
"409 222 QCURVE",
"409 222 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
12 0 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 27 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
213 0 229 0 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
36 2 30 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 2 9 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 458;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"248 150 LINE",
"240 187 OFFCURVE",
"226 268 OFFCURVE",
"212 303 QCURVE",
"203 307 LINE",
"195 303 LINE",
"193 301 OFFCURVE",
"192 296 OFFCURVE",
"190 294 QCURVE",
"189 158 LINE",
"188 157 OFFCURVE",
"163 140 OFFCURVE",
"127 115 OFFCURVE",
"86 84 OFFCURVE",
"50 55 OFFCURVE",
"27 32 OFFCURVE",
"27 27 QCURVE",
"28 23 LINE",
"32 21 OFFCURVE",
"36 21 QCURVE SMOOTH",
"43 22 LINE",
"43 22 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 329;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"463 488 OFFCURVE",
"492 558 OFFCURVE",
"485 610 OFFCURVE",
"447 642 OFFCURVE",
"391 651 OFFCURVE",
"322 637 OFFCURVE",
"287 617 QCURVE SMOOTH",
"267 605 OFFCURVE",
"224 573 OFFCURVE",
"214 551 QCURVE SMOOTH",
"203 525 OFFCURVE",
"212 485 OFFCURVE",
"240 464 OFFCURVE",
"280 466 OFFCURVE",
"300 481 QCURVE SMOOTH",
"317 494 OFFCURVE",
"326 530 OFFCURVE",
"313 556 OFFCURVE",
"282 566 OFFCURVE",
"260 554 QCURVE SMOOTH",
"248 547 OFFCURVE",
"228 530 OFFCURVE",
"225 518 QCURVE",
"222 536 OFFCURVE",
"258 576 OFFCURVE",
"281 587 QCURVE SMOOTH",
"317 605 OFFCURVE",
"383 603 OFFCURVE",
"419 571 OFFCURVE",
"415 511 OFFCURVE",
"382 469 QCURVE SMOOTH",
"354 434 OFFCURVE",
"291 359 OFFCURVE",
"234 282 OFFCURVE",
"190 204 OFFCURVE",
"181 167 QCURVE SMOOTH",
"179 157 OFFCURVE",
"196 151 OFFCURVE",
"200 160 QCURVE SMOOTH",
"219 211 OFFCURVE",
"270 284 OFFCURVE",
"328 347 OFFCURVE",
"392 407 OFFCURVE",
"424 444 QCURVE",
"424 444 LINE"
);
},
{
closed = 1;
nodes = (
"205 44 OFFCURVE",
"185 68 OFFCURVE",
"168 68 QCURVE SMOOTH",
"151 68 OFFCURVE",
"122 44 OFFCURVE",
"120 27 QCURVE SMOOTH",
"117 10 OFFCURVE",
"137 -14 OFFCURVE",
"154 -14 QCURVE SMOOTH",
"171 -14 OFFCURVE",
"199 10 OFFCURVE",
"202 27 QCURVE",
"202 27 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
53 47 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 382;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"937 506 OFFCURVE",
"876 596 OFFCURVE",
"783 653 OFFCURVE",
"670 679 OFFCURVE",
"613 679 QCURVE SMOOTH",
"543 679 OFFCURVE",
"407 640 OFFCURVE",
"284 569 OFFCURVE",
"180 470 OFFCURVE",
"107 351 OFFCURVE",
"70 215 OFFCURVE",
"76 143 QCURVE SMOOTH",
"82 65 OFFCURVE",
"149 -45 OFFCURVE",
"252 -115 OFFCURVE",
"382 -148 OFFCURVE",
"451 -148 QCURVE SMOOTH",
"542 -148 OFFCURVE",
"706 -91 OFFCURVE",
"778 -43 QCURVE",
"784 -40 OFFCURVE",
"785 -31 OFFCURVE",
"781 -24 OFFCURVE",
"771 -23 OFFCURVE",
"767 -27 QCURVE",
"700 -72 OFFCURVE",
"543 -126 OFFCURVE",
"458 -126 QCURVE SMOOTH",
"398 -126 OFFCURVE",
"283 -96 OFFCURVE",
"191 -33 OFFCURVE",
"130 64 OFFCURVE",
"125 131 QCURVE SMOOTH",
"119 199 OFFCURVE",
"150 331 OFFCURVE",
"214 448 OFFCURVE",
"306 547 OFFCURVE",
"419 618 OFFCURVE",
"547 658 OFFCURVE",
"615 658 QCURVE SMOOTH",
"667 658 OFFCURVE",
"767 635 OFFCURVE",
"846 583 OFFCURVE",
"897 500 OFFCURVE",
"902 440 QCURVE SMOOTH",
"905 395 OFFCURVE",
"888 304 OFFCURVE",
"851 219 OFFCURVE",
"797 145 OFFCURVE",
"764 118 QCURVE SMOOTH",
"749 106 OFFCURVE",
"709 84 OFFCURVE",
"665 69 OFFCURVE",
"625 65 OFFCURVE",
"595 79 OFFCURVE",
"582 114 OFFCURVE",
"589 146 QCURVE SMOOTH",
"595 174 OFFCURVE",
"625 248 OFFCURVE",
"661 317 OFFCURVE",
"696 371 OFFCURVE",
"706 381 QCURVE",
"692 379 OFFCURVE",
"665 386 OFFCURVE",
"653 387 QCURVE SMOOTH",
"623 389 OFFCURVE",
"588 346 OFFCURVE",
"567 305 QCURVE SMOOTH",
"543 259 OFFCURVE",
"489 169 OFFCURVE",
"455 129 QCURVE SMOOTH",
"433 103 OFFCURVE",
"387 74 OFFCURVE",
"353 74 OFFCURVE",
"334 104 OFFCURVE",
"339 137 QCURVE SMOOTH",
"342 155 OFFCURVE",
"355 194 OFFCURVE",
"372 230 OFFCURVE",
"387 258 OFFCURVE",
"391 265 QCURVE SMOOTH",
"408 293 OFFCURVE",
"448 347 OFFCURVE",
"492 394 OFFCURVE",
"537 432 OFFCURVE",
"558 444 QCURVE SMOOTH",
"593 464 OFFCURVE",
"655 448 OFFCURVE",
"666 413 QCURVE",
"681 410 OFFCURVE",
"692 435 OFFCURVE",
"679 449 QCURVE SMOOTH",
"652 479 OFFCURVE",
"575 493 OFFCURVE",
"493 474 OFFCURVE",
"415 425 OFFCURVE",
"387 391 QCURVE SMOOTH",
"339 334 OFFCURVE",
"290 225 OFFCURVE",
"277 133 OFFCURVE",
"296 65 OFFCURVE",
"339 34 OFFCURVE",
"401 47 OFFCURVE",
"437 82 QCURVE SMOOTH",
"465 109 OFFCURVE",
"513 175 OFFCURVE",
"528 200 QCURVE",
"514 150 OFFCURVE",
"523 89 OFFCURVE",
"552 55 OFFCURVE",
"591 44 OFFCURVE",
"607 45 QCURVE SMOOTH",
"625 45 OFFCURVE",
"670 53 OFFCURVE",
"715 68 OFFCURVE",
"755 87 OFFCURVE",
"769 98 QCURVE SMOOTH",
"806 128 OFFCURVE",
"873 205 OFFCURVE",
"921 294 OFFCURVE",
"946 391 OFFCURVE",
"942 442 QCURVE",
"942 442 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
122 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 77 26 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
122 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
110 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
15 110 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
60 110 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
89 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 89 21 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
94 1 105 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 956;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"860 702 OFFCURVE",
"769 773 OFFCURVE",
"688 773 QCURVE SMOOTH",
"615 773 OFFCURVE",
"480 731 OFFCURVE",
"357 659 OFFCURVE",
"247 564 OFFCURVE",
"200 512 QCURVE",
"144 538 OFFCURVE",
"112 575 QCURVE SMOOTH",
"95 595 OFFCURVE",
"81 631 OFFCURVE",
"91 654 QCURVE SMOOTH",
"99 672 OFFCURVE",
"82 685 OFFCURVE",
"73 673 QCURVE",
"65 667 OFFCURVE",
"58 639 OFFCURVE",
"60 606 OFFCURVE",
"71 572 OFFCURVE",
"82 560 QCURVE SMOOTH",
"101 539 OFFCURVE",
"152 505 OFFCURVE",
"182 491 QCURVE",
"156 462 OFFCURVE",
"113 398 OFFCURVE",
"94 364 QCURVE SMOOTH",
"56 296 OFFCURVE",
"19 166 OFFCURVE",
"18 58 OFFCURVE",
"54 -20 OFFCURVE",
"90 -35 QCURVE SMOOTH",
"125 -50 OFFCURVE",
"203 -42 OFFCURVE",
"280 -8 OFFCURVE",
"356 46 OFFCURVE",
"423 107 OFFCURVE",
"481 168 OFFCURVE",
"501 192 QCURVE",
"490 177 OFFCURVE",
"472 128 OFFCURVE",
"462 71 OFFCURVE",
"464 13 OFFCURVE",
"480 -34 OFFCURVE",
"514 -64 OFFCURVE",
"542 -64 QCURVE SMOOTH",
"563 -64 OFFCURVE",
"605 -50 OFFCURVE",
"643 -26 OFFCURVE",
"676 5 OFFCURVE",
"689 22 QCURVE SMOOTH",
"703 40 OFFCURVE",
"730 84 OFFCURVE",
"755 127 OFFCURVE",
"775 167 OFFCURVE",
"782 182 QCURVE SMOOTH",
"790 200 OFFCURVE",
"772 200 OFFCURVE",
"765 186 QCURVE SMOOTH",
"748 148 OFFCURVE",
"701 74 OFFCURVE",
"678 44 QCURVE SMOOTH",
"648 7 OFFCURVE",
"586 -35 OFFCURVE",
"540 -31 OFFCURVE",
"519 27 OFFCURVE",
"531 90 QCURVE SMOOTH",
"538 127 OFFCURVE",
"565 202 OFFCURVE",
"600 272 OFFCURVE",
"641 334 OFFCURVE",
"662 358 QCURVE SMOOTH",
"684 382 OFFCURVE",
"689 429 OFFCURVE",
"668 449 OFFCURVE",
"628 429 OFFCURVE",
"605 386 QCURVE SMOOTH",
"585 349 OFFCURVE",
"527 266 OFFCURVE",
"458 183 OFFCURVE",
"382 104 OFFCURVE",
"343 71 QCURVE SMOOTH",
"274 14 OFFCURVE",
"153 -27 OFFCURVE",
"78 9 OFFCURVE",
"64 122 OFFCURVE",
"102 218 QCURVE SMOOTH",
"115 251 OFFCURVE",
"154 324 OFFCURVE",
"195 392 OFFCURVE",
"233 451 OFFCURVE",
"247 470 QCURVE",
"318 447 OFFCURVE",
"464 439 OFFCURVE",
"549 447 QCURVE SMOOTH",
"636 455 OFFCURVE",
"755 498 OFFCURVE",
"828 555 OFFCURVE",
"860 619 OFFCURVE",
"860 646 QCURVE",
"860 646 LINE"
);
},
{
closed = 1;
nodes = (
"819 621 OFFCURVE",
"781 557 OFFCURVE",
"711 508 OFFCURVE",
"611 476 OFFCURVE",
"549 471 QCURVE SMOOTH",
"454 463 OFFCURVE",
"321 471 OFFCURVE",
"263 490 QCURVE",
"305 540 OFFCURVE",
"397 633 OFFCURVE",
"501 704 OFFCURVE",
"621 747 OFFCURVE",
"691 747 QCURVE SMOOTH",
"746 747 OFFCURVE",
"819 703 OFFCURVE",
"819 658 QCURVE",
"819 658 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 3 100 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 100 26 100 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 100 25 100 41 100 57 100 73 100 89 100 105 100 121 100 137 100 153 100 169 100 185 100 201 100 217 100 233 100 249 100 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
97 2 103 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 712;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1091 531 OFFCURVE",
"1082 608 OFFCURVE",
"1024 671 OFFCURVE",
"924 720 OFFCURVE",
"860 737 QCURVE",
"862 741 OFFCURVE",
"879 757 OFFCURVE",
"889 764 QCURVE SMOOTH",
"907 775 OFFCURVE",
"903 789 OFFCURVE",
"879 779 QCURVE SMOOTH",
"866 774 OFFCURVE",
"837 756 OFFCURVE",
"824 745 QCURVE",
"736 764 OFFCURVE",
"535 769 OFFCURVE",
"430 754 QCURVE SMOOTH",
"342 741 OFFCURVE",
"209 681 OFFCURVE",
"121 601 OFFCURVE",
"79 511 OFFCURVE",
"83 429 OFFCURVE",
"136 361 OFFCURVE",
"187 343 QCURVE SMOOTH",
"220 331 OFFCURVE",
"290 339 OFFCURVE",
"350 373 OFFCURVE",
"393 430 OFFCURVE",
"399 467 QCURVE SMOOTH",
"399 468 LINE SMOOTH",
"399 476 OFFCURVE",
"392 482 OFFCURVE",
"385 482 OFFCURVE",
"378 478 OFFCURVE",
"378 476 QCURVE SMOOTH",
"380 465 OFFCURVE",
"357 418 OFFCURVE",
"310 376 OFFCURVE",
"241 353 OFFCURVE",
"197 367 QCURVE SMOOTH",
"160 378 OFFCURVE",
"125 430 OFFCURVE",
"128 497 OFFCURVE",
"167 572 OFFCURVE",
"241 641 OFFCURVE",
"348 697 OFFCURVE",
"417 712 QCURVE SMOOTH",
"519 734 OFFCURVE",
"716 737 OFFCURVE",
"800 723 QCURVE",
"743 658 LINE SMOOTH",
"679 587 OFFCURVE",
"583 422 OFFCURVE",
"499 262 OFFCURVE",
"417 120 OFFCURVE",
"367 72 QCURVE",
"319 95 OFFCURVE",
"250 135 OFFCURVE",
"222 146 QCURVE SMOOTH",
"166 166 OFFCURVE",
"80 158 OFFCURVE",
"26 121 OFFCURVE",
"6 67 OFFCURVE",
"23 13 OFFCURVE",
"81 -30 OFFCURVE",
"132 -36 QCURVE SMOOTH",
"201 -45 OFFCURVE",
"329 -9 OFFCURVE",
"387 34 QCURVE",
"433 13 OFFCURVE",
"558 -23 OFFCURVE",
"653 -35 QCURVE SMOOTH",
"698 -41 OFFCURVE",
"796 -29 OFFCURVE",
"889 2 OFFCURVE",
"969 51 OFFCURVE",
"1023 117 OFFCURVE",
"1043 196 OFFCURVE",
"1030 242 QCURVE SMOOTH",
"1022 270 OFFCURVE",
"979 316 OFFCURVE",
"925 351 OFFCURVE",
"866 376 OFFCURVE",
"841 384 QCURVE",
"869 385 OFFCURVE",
"934 397 OFFCURVE",
"997 422 OFFCURVE",
"1050 461 OFFCURVE",
"1066 488 QCURVE",
"1066 488 LINE"
);
},
{
closed = 1;
nodes = (
"988 659 OFFCURVE",
"1025 603 OFFCURVE",
"1022 544 OFFCURVE",
"986 486 OFFCURVE",
"932 441 OFFCURVE",
"866 412 OFFCURVE",
"835 412 QCURVE SMOOTH",
"806 412 OFFCURVE",
"753 417 OFFCURVE",
"713 418 OFFCURVE",
"690 411 OFFCURVE",
"690 398 QCURVE",
"694 390 OFFCURVE",
"731 376 OFFCURVE",
"784 359 OFFCURVE",
"847 339 OFFCURVE",
"876 325 QCURVE SMOOTH",
"924 302 OFFCURVE",
"965 231 OFFCURVE",
"959 153 OFFCURVE",
"910 76 OFFCURVE",
"828 18 OFFCURVE",
"717 -14 OFFCURVE",
"652 -8 QCURVE SMOOTH",
"574 0 OFFCURVE",
"456 32 OFFCURVE",
"409 52 QCURVE",
"419 61 OFFCURVE",
"437 78 OFFCURVE",
"447 88 QCURVE SMOOTH",
"497 142 OFFCURVE",
"597 299 OFFCURVE",
"697 471 OFFCURVE",
"798 643 OFFCURVE",
"848 712 QCURVE",
"874 706 OFFCURVE",
"922 691 OFFCURVE",
"942 681 QCURVE",
"942 681 LINE"
);
},
{
closed = 1;
nodes = (
"305 23 OFFCURVE",
"212 -10 OFFCURVE",
"157 -8 QCURVE SMOOTH",
"124 -6 OFFCURVE",
"84 21 OFFCURVE",
"67 59 OFFCURVE",
"74 98 OFFCURVE",
"105 126 OFFCURVE",
"159 133 OFFCURVE",
"197 120 QCURVE SMOOTH",
"242 104 OFFCURVE",
"310 70 OFFCURVE",
"345 53 QCURVE",
"345 53 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
120 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
120 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 5 24 5 40 5 56 5 72 5 88 5 104 5 120 5 136 5 152 5 168 5 184 5 200 5 216 5 232 5 248 5 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 5 24 5 40 5 56 5 72 5 88 5 104 5 120 5 136 5 152 5 168 5 184 5 200 5 216 5 232 5 248 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 5 24 5 40 5 56 5 72 5 88 5 104 5 120 5 136 5 152 5 168 5 184 5 200 5 216 5 232 5 248 5 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1041;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"788 198 OFFCURVE",
"774 206 OFFCURVE",
"768 193 QCURVE SMOOTH",
"752 161 OFFCURVE",
"722 104 OFFCURVE",
"684 54 OFFCURVE",
"637 10 OFFCURVE",
"604 -9 QCURVE SMOOTH",
"529 -54 OFFCURVE",
"350 -75 OFFCURVE",
"269 -51 QCURVE SMOOTH",
"204 -31 OFFCURVE",
"140 57 OFFCURVE",
"120 167 OFFCURVE",
"136 288 OFFCURVE",
"166 392 OFFCURVE",
"200 469 OFFCURVE",
"209 481 QCURVE",
"248 400 OFFCURVE",
"379 322 OFFCURVE",
"457 311 QCURVE SMOOTH",
"534 300 OFFCURVE",
"662 324 OFFCURVE",
"760 380 OFFCURVE",
"825 460 OFFCURVE",
"854 549 OFFCURVE",
"844 639 OFFCURVE",
"792 714 OFFCURVE",
"694 768 OFFCURVE",
"621 776 QCURVE SMOOTH",
"502 790 OFFCURVE",
"286 698 OFFCURVE",
"205 593 QCURVE",
"197 634 OFFCURVE",
"189 735 OFFCURVE",
"197 783 QCURVE SMOOTH",
"199 793 OFFCURVE",
"194 802 OFFCURVE",
"187 802 OFFCURVE",
"178 794 OFFCURVE",
"177 788 QCURVE SMOOTH",
"169 760 OFFCURVE",
"164 699 OFFCURVE",
"167 639 OFFCURVE",
"175 582 OFFCURVE",
"181 559 QCURVE",
"146 515 OFFCURVE",
"92 403 OFFCURVE",
"61 281 OFFCURVE",
"58 157 OFFCURVE",
"92 46 OFFCURVE",
"167 -43 OFFCURVE",
"230 -70 QCURVE SMOOTH",
"284 -93 OFFCURVE",
"391 -105 OFFCURVE",
"490 -89 OFFCURVE",
"581 -51 OFFCURVE",
"619 -25 QCURVE SMOOTH",
"651 -3 OFFCURVE",
"697 43 OFFCURVE",
"733 94 OFFCURVE",
"764 150 OFFCURVE",
"780 183 QCURVE",
"780 183 LINE"
);
},
{
closed = 1;
nodes = (
"703 727 OFFCURVE",
"787 654 OFFCURVE",
"812 558 OFFCURVE",
"780 454 OFFCURVE",
"696 371 OFFCURVE",
"562 325 OFFCURVE",
"472 335 QCURVE SMOOTH",
"390 344 OFFCURVE",
"263 427 OFFCURVE",
"229 513 QCURVE",
"266 570 OFFCURVE",
"359 660 OFFCURVE",
"463 720 OFFCURVE",
"574 746 OFFCURVE",
"630 738 QCURVE",
"630 738 LINE"
);
}
);
width = 710;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1030 310 OFFCURVE",
"1006 437 OFFCURVE",
"951 546 OFFCURVE",
"869 635 OFFCURVE",
"818 669 QCURVE",
"830 687 OFFCURVE",
"854 721 OFFCURVE",
"865 737 QCURVE SMOOTH",
"867 740 OFFCURVE",
"884 757 OFFCURVE",
"894 764 QCURVE SMOOTH",
"912 775 OFFCURVE",
"908 789 OFFCURVE",
"884 779 QCURVE SMOOTH",
"878 777 OFFCURVE",
"855 763 OFFCURVE",
"829 746 OFFCURVE",
"806 729 OFFCURVE",
"800 723 QCURVE SMOOTH",
"775 694 LINE",
"697 736 OFFCURVE",
"516 768 OFFCURVE",
"423 754 QCURVE SMOOTH",
"320 739 OFFCURVE",
"180 675 OFFCURVE",
"96 594 OFFCURVE",
"66 504 OFFCURVE",
"81 423 OFFCURVE",
"136 358 OFFCURVE",
"180 343 QCURVE SMOOTH",
"213 331 OFFCURVE",
"283 339 OFFCURVE",
"343 373 OFFCURVE",
"386 430 OFFCURVE",
"391 467 QCURVE SMOOTH",
"393 481 OFFCURVE",
"372 484 OFFCURVE",
"371 476 QCURVE SMOOTH",
"370 463 OFFCURVE",
"347 415 OFFCURVE",
"301 374 OFFCURVE",
"234 353 OFFCURVE",
"190 367 QCURVE SMOOTH",
"153 378 OFFCURVE",
"117 431 OFFCURVE",
"118 500 OFFCURVE",
"156 576 OFFCURVE",
"228 647 OFFCURVE",
"334 704 OFFCURVE",
"403 719 QCURVE SMOOTH",
"497 739 OFFCURVE",
"673 708 OFFCURVE",
"747 663 QCURVE",
"688 597 OFFCURVE",
"596 436 OFFCURVE",
"511 274 OFFCURVE",
"422 125 OFFCURVE",
"367 72 QCURVE",
"355 78 OFFCURVE",
"315 99 OFFCURVE",
"271 121 OFFCURVE",
"229 141 OFFCURVE",
"215 146 QCURVE SMOOTH",
"159 165 OFFCURVE",
"73 157 OFFCURVE",
"19 121 OFFCURVE",
"-1 66 OFFCURVE",
"16 12 OFFCURVE",
"74 -30 OFFCURVE",
"125 -36 QCURVE SMOOTH",
"197 -45 OFFCURVE",
"320 -9 OFFCURVE",
"375 36 QCURVE",
"399 25 OFFCURVE",
"453 5 OFFCURVE",
"518 -13 OFFCURVE",
"597 -29 OFFCURVE",
"646 -35 QCURVE SMOOTH",
"713 -43 OFFCURVE",
"843 -12 OFFCURVE",
"947 60 OFFCURVE",
"1016 169 OFFCURVE",
"1023 239 QCURVE",
"1023 239 LINE"
);
},
{
closed = 1;
nodes = (
"954 185 OFFCURVE",
"903 91 OFFCURVE",
"820 22 OFFCURVE",
"710 -14 OFFCURVE",
"645 -8 QCURVE SMOOTH",
"564 0 OFFCURVE",
"446 33 OFFCURVE",
"399 54 QCURVE",
"409 62 OFFCURVE",
"427 79 OFFCURVE",
"437 90 QCURVE SMOOTH",
"478 134 OFFCURVE",
"567 263 OFFCURVE",
"659 409 OFFCURVE",
"750 562 OFFCURVE",
"794 631 QCURVE",
"836 598 OFFCURVE",
"904 512 OFFCURVE",
"948 412 OFFCURVE",
"966 298 OFFCURVE",
"960 237 QCURVE",
"960 237 LINE"
);
},
{
closed = 1;
nodes = (
"299 22 OFFCURVE",
"204 -10 OFFCURVE",
"150 -8 QCURVE SMOOTH",
"119 -7 OFFCURVE",
"82 21 OFFCURVE",
"66 57 OFFCURVE",
"73 97 OFFCURVE",
"103 124 OFFCURVE",
"154 133 OFFCURVE",
"190 120 QCURVE SMOOTH",
"235 104 OFFCURVE",
"305 69 OFFCURVE",
"341 52 QCURVE",
"341 52 LINE"
);
}
);
width = 1014;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"781 263 OFFCURVE",
"758 264 OFFCURVE",
"748 258 OFFCURVE",
"755 248 OFFCURVE",
"772 244 QCURVE SMOOTH",
"793 239 OFFCURVE",
"801 210 OFFCURVE",
"784 171 OFFCURVE",
"745 125 OFFCURVE",
"717 103 QCURVE SMOOTH",
"685 78 OFFCURVE",
"598 29 OFFCURVE",
"498 -9 OFFCURVE",
"386 -33 OFFCURVE",
"328 -33 QCURVE SMOOTH",
"242 -33 OFFCURVE",
"138 17 OFFCURVE",
"90 95 OFFCURVE",
"94 189 OFFCURVE",
"139 277 OFFCURVE",
"219 347 OFFCURVE",
"271 361 QCURVE SMOOTH",
"319 374 OFFCURVE",
"409 376 OFFCURVE",
"482 374 OFFCURVE",
"529 377 OFFCURVE",
"534 392 QCURVE SMOOTH",
"538 410 OFFCURVE",
"506 428 OFFCURVE",
"455 442 OFFCURVE",
"394 456 OFFCURVE",
"345 484 OFFCURVE",
"317 531 OFFCURVE",
"324 570 QCURVE SMOOTH",
"333 618 OFFCURVE",
"412 699 OFFCURVE",
"523 756 OFFCURVE",
"652 784 OFFCURVE",
"711 778 QCURVE SMOOTH",
"757 773 OFFCURVE",
"802 740 OFFCURVE",
"813 696 OFFCURVE",
"795 646 OFFCURVE",
"760 603 OFFCURVE",
"714 573 OFFCURVE",
"691 571 QCURVE SMOOTH",
"674 569 OFFCURVE",
"655 559 OFFCURVE",
"654 551 OFFCURVE",
"673 548 OFFCURVE",
"694 553 QCURVE SMOOTH",
"744 564 OFFCURVE",
"819 606 OFFCURVE",
"863 657 OFFCURVE",
"872 712 OFFCURVE",
"844 759 OFFCURVE",
"773 795 OFFCURVE",
"715 802 QCURVE SMOOTH",
"675 806 OFFCURVE",
"577 796 OFFCURVE",
"476 767 OFFCURVE",
"379 722 OFFCURVE",
"302 662 OFFCURVE",
"252 588 OFFCURVE",
"248 545 QCURVE SMOOTH",
"246 523 OFFCURVE",
"267 484 OFFCURVE",
"303 452 OFFCURVE",
"347 427 OFFCURVE",
"368 420 QCURVE",
"320 418 OFFCURVE",
"267 403 QCURVE SMOOTH",
"185 378 OFFCURVE",
"74 292 OFFCURVE",
"20 190 OFFCURVE",
"24 85 OFFCURVE",
"91 -1 OFFCURVE",
"223 -55 OFFCURVE",
"324 -55 QCURVE SMOOTH",
"386 -55 OFFCURVE",
"509 -36 OFFCURVE",
"622 -2 OFFCURVE",
"721 47 OFFCURVE",
"758 76 QCURVE SMOOTH",
"791 102 OFFCURVE",
"831 154 OFFCURVE",
"841 202 OFFCURVE",
"820 243 OFFCURVE",
"793 257 QCURVE",
"793 257 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
74 1 10 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 815;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1391 591 OFFCURVE",
"1379 601 OFFCURVE",
"1368 577 QCURVE SMOOTH",
"1358 557 OFFCURVE",
"1312 542 OFFCURVE",
"1250 544 OFFCURVE",
"1180 561 OFFCURVE",
"1113 583 OFFCURVE",
"1057 606 OFFCURVE",
"1040 615 QCURVE",
"1051 625 OFFCURVE",
"1083 641 OFFCURVE",
"1100 634 QCURVE",
"1108 625 OFFCURVE",
"1118 628 OFFCURVE",
"1118 640 OFFCURVE",
"1110 655 OFFCURVE",
"1100 658 QCURVE SMOOTH",
"1083 663 OFFCURVE",
"1056 658 OFFCURVE",
"1035 646 OFFCURVE",
"1020 631 OFFCURVE",
"1016 627 QCURVE",
"969 656 OFFCURVE",
"831 720 OFFCURVE",
"748 743 QCURVE SMOOTH",
"666 766 OFFCURVE",
"529 749 OFFCURVE",
"427 692 OFFCURVE",
"363 607 OFFCURVE",
"343 518 OFFCURVE",
"371 439 OFFCURVE",
"413 415 QCURVE SMOOTH",
"443 398 OFFCURVE",
"516 393 OFFCURVE",
"583 416 OFFCURVE",
"637 466 OFFCURVE",
"648 502 QCURVE SMOOTH",
"652 515 OFFCURVE",
"649 524 OFFCURVE",
"640 520 OFFCURVE",
"631 506 OFFCURVE",
"631 498 QCURVE SMOOTH",
"631 487 OFFCURVE",
"595 448 OFFCURVE",
"535 419 OFFCURVE",
"460 414 OFFCURVE",
"422 438 QCURVE SMOOTH",
"399 452 OFFCURVE",
"389 509 OFFCURVE",
"413 575 OFFCURVE",
"467 642 OFFCURVE",
"551 692 OFFCURVE",
"663 715 OFFCURVE",
"731 705 QCURVE SMOOTH",
"805 694 OFFCURVE",
"939 642 OFFCURVE",
"1003 610 QCURVE",
"996 602 OFFCURVE",
"962 550 OFFCURVE",
"920 478 OFFCURVE",
"876 391 OFFCURVE",
"858 348 QCURVE",
"822 354 OFFCURVE",
"748 359 OFFCURVE",
"682 345 OFFCURVE",
"627 305 OFFCURVE",
"610 267 QCURVE SMOOTH",
"606 259 OFFCURVE",
"617 246 OFFCURVE",
"626 258 QCURVE SMOOTH",
"644 283 OFFCURVE",
"705 306 OFFCURVE",
"771 314 OFFCURVE",
"830 311 OFFCURVE",
"844 311 QCURVE",
"808 229 OFFCURVE",
"713 83 OFFCURVE",
"594 -26 OFFCURVE",
"451 -87 OFFCURVE",
"368 -83 QCURVE SMOOTH",
"313 -81 OFFCURVE",
"198 -39 OFFCURVE",
"110 39 OFFCURVE",
"63 152 OFFCURVE",
"76 226 QCURVE SMOOTH",
"80 251 OFFCURVE",
"99 289 OFFCURVE",
"121 316 OFFCURVE",
"144 335 OFFCURVE",
"153 342 QCURVE SMOOTH",
"164 350 OFFCURVE",
"182 363 OFFCURVE",
"189 370 OFFCURVE",
"184 372 OFFCURVE",
"172 368 QCURVE SMOOTH",
"161 365 OFFCURVE",
"131 347 OFFCURVE",
"101 321 OFFCURVE",
"75 285 OFFCURVE",
"68 264 QCURVE SMOOTH",
"41 182 OFFCURVE",
"67 39 OFFCURVE",
"153 -68 OFFCURVE",
"293 -130 OFFCURVE",
"380 -130 QCURVE SMOOTH",
"461 -130 OFFCURVE",
"588 -91 OFFCURVE",
"688 -25 OFFCURVE",
"763 63 OFFCURVE",
"820 160 OFFCURVE",
"863 261 OFFCURVE",
"880 308 QCURVE",
"899 306 OFFCURVE",
"957 304 OFFCURVE",
"1017 306 OFFCURVE",
"1069 310 OFFCURVE",
"1082 313 QCURVE SMOOTH",
"1105 319 OFFCURVE",
"1106 335 OFFCURVE",
"1080 333 QCURVE SMOOTH",
"1065 332 OFFCURVE",
"1019 332 OFFCURVE",
"968 333 OFFCURVE",
"915 336 OFFCURVE",
"892 339 QCURVE",
"902 363 OFFCURVE",
"929 430 OFFCURVE",
"961 500 OFFCURVE",
"1001 570 OFFCURVE",
"1025 597 QCURVE",
"1032 594 OFFCURVE",
"1074 572 OFFCURVE",
"1137 545 OFFCURVE",
"1215 518 OFFCURVE",
"1259 511 QCURVE SMOOTH",
"1284 507 OFFCURVE",
"1329 514 OFFCURVE",
"1363 531 OFFCURVE",
"1384 557 OFFCURVE",
"1386 572 QCURVE",
"1386 572 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
60 2 35 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1048;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"725 -101 OFFCURVE",
"618 -87 OFFCURVE",
"551 -86 QCURVE",
"606 4 OFFCURVE",
"676 161 OFFCURVE",
"687 244 QCURVE SMOOTH",
"690 263 OFFCURVE",
"669 292 OFFCURVE",
"634 291 OFFCURVE",
"590 250 OFFCURVE",
"568 199 QCURVE SMOOTH",
"557 174 OFFCURVE",
"485 115 OFFCURVE",
"387 71 OFFCURVE",
"275 53 OFFCURVE",
"226 69 QCURVE SMOOTH",
"182 83 OFFCURVE",
"125 156 OFFCURVE",
"105 261 OFFCURVE",
"125 391 OFFCURVE",
"158 462 QCURVE",
"182 446 OFFCURVE",
"243 420 OFFCURVE",
"311 402 OFFCURVE",
"385 392 OFFCURVE",
"421 393 QCURVE SMOOTH",
"527 394 OFFCURVE",
"679 451 OFFCURVE",
"771 537 OFFCURVE",
"802 639 OFFCURVE",
"772 731 OFFCURVE",
"680 802 OFFCURVE",
"603 814 QCURVE SMOOTH",
"543 823 OFFCURVE",
"411 797 OFFCURVE",
"285 733 OFFCURVE",
"174 633 OFFCURVE",
"134 568 QCURVE SMOOTH",
"128 558 OFFCURVE",
"117 539 OFFCURVE",
"112 529 QCURVE",
"89 556 OFFCURVE",
"63 619 OFFCURVE",
"59 684 OFFCURVE",
"80 750 OFFCURVE",
"105 781 QCURVE SMOOTH",
"117 797 OFFCURVE",
"103 800 OFFCURVE",
"92 789 QCURVE SMOOTH",
"57 754 OFFCURVE",
"28 677 OFFCURVE",
"33 601 OFFCURVE",
"67 529 OFFCURVE",
"96 499 QCURVE",
"55 414 OFFCURVE",
"40 260 OFFCURVE",
"73 137 OFFCURVE",
"145 52 OFFCURVE",
"192 36 QCURVE SMOOTH",
"233 22 OFFCURVE",
"318 25 OFFCURVE",
"400 46 OFFCURVE",
"476 83 OFFCURVE",
"541 123 OFFCURVE",
"591 163 OFFCURVE",
"606 177 QCURVE",
"602 160 LINE SMOOTH",
"594 125 OFFCURVE",
"574 63 OFFCURVE",
"550 4 OFFCURVE",
"519 -55 OFFCURVE",
"501 -86 QCURVE",
"477 -86 OFFCURVE",
"420 -89 OFFCURVE",
"362 -94 OFFCURVE",
"308 -99 OFFCURVE",
"289 -102 QCURVE SMOOTH",
"227 -111 OFFCURVE",
"113 -147 OFFCURVE",
"24 -194 OFFCURVE",
"-36 -248 OFFCURVE",
"-53 -301 OFFCURVE",
"-21 -348 OFFCURVE",
"25 -365 QCURVE SMOOTH",
"53 -375 OFFCURVE",
"133 -371 OFFCURVE",
"225 -346 OFFCURVE",
"325 -300 OFFCURVE",
"420 -237 OFFCURVE",
"505 -158 OFFCURVE",
"537 -112 QCURVE",
"567 -112 OFFCURVE",
"632 -114 OFFCURVE",
"693 -118 OFFCURVE",
"745 -126 OFFCURVE",
"762 -130 QCURVE SMOOTH",
"776 -133 OFFCURVE",
"790 -131 OFFCURVE",
"792 -123 OFFCURVE",
"781 -115 OFFCURVE",
"770 -112 QCURVE",
"770 -112 LINE"
);
},
{
closed = 1;
nodes = (
"669 775 OFFCURVE",
"738 719 OFFCURVE",
"757 645 OFFCURVE",
"725 561 OFFCURVE",
"646 487 OFFCURVE",
"521 433 OFFCURVE",
"437 424 QCURVE SMOOTH",
"360 416 OFFCURVE",
"218 453 OFFCURVE",
"171 488 QCURVE",
"178 502 OFFCURVE",
"194 529 OFFCURVE",
"202 543 QCURVE SMOOTH",
"237 601 OFFCURVE",
"335 696 OFFCURVE",
"444 761 OFFCURVE",
"557 791 OFFCURVE",
"608 784 QCURVE",
"608 784 LINE"
);
},
{
closed = 1;
nodes = (
"456 -155 OFFCURVE",
"381 -224 OFFCURVE",
"299 -277 OFFCURVE",
"216 -316 OFFCURVE",
"139 -338 OFFCURVE",
"73 -344 OFFCURVE",
"51 -339 QCURVE SMOOTH",
"14 -331 OFFCURVE",
"-2 -298 OFFCURVE",
"24 -256 OFFCURVE",
"85 -209 OFFCURVE",
"165 -168 OFFCURVE",
"257 -136 OFFCURVE",
"301 -129 QCURVE SMOOTH",
"343 -122 OFFCURVE",
"437 -115 OFFCURVE",
"485 -113 QCURVE",
"485 -113 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
98 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
119 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
119 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 699;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1537 757 OFFCURVE",
"1537 763 OFFCURVE",
"1519 761 OFFCURVE",
"1491 754 OFFCURVE",
"1476 749 QCURVE SMOOTH",
"1456 742 OFFCURVE",
"1411 684 OFFCURVE",
"1365 604 OFFCURVE",
"1321 511 OFFCURVE",
"1286 428 OFFCURVE",
"1262 365 OFFCURVE",
"1258 355 QCURVE",
"1232 355 OFFCURVE",
"1157 360 OFFCURVE",
"1068 367 OFFCURVE",
"969 372 OFFCURVE",
"919 372 QCURVE",
"923 383 OFFCURVE",
"940 429 OFFCURVE",
"963 489 OFFCURVE",
"989 558 OFFCURVE",
"1014 623 OFFCURVE",
"1039 679 OFFCURVE",
"1048 698 QCURVE",
"1063 698 OFFCURVE",
"1104 708 OFFCURVE",
"1140 727 OFFCURVE",
"1166 754 OFFCURVE",
"1166 772 QCURVE SMOOTH",
"1166 793 OFFCURVE",
"1131 806 OFFCURVE",
"1109 800 QCURVE SMOOTH",
"1097 796 OFFCURVE",
"1072 774 OFFCURVE",
"1050 748 OFFCURVE",
"1035 724 OFFCURVE",
"1032 720 QCURVE",
"983 715 OFFCURVE",
"867 710 OFFCURVE",
"748 698 OFFCURVE",
"631 672 OFFCURVE",
"534 620 OFFCURVE",
"462 537 OFFCURVE",
"446 474 QCURVE SMOOTH",
"434 425 OFFCURVE",
"459 338 OFFCURVE",
"518 280 OFFCURVE",
"601 259 OFFCURVE",
"646 276 QCURVE SMOOTH",
"673 286 OFFCURVE",
"722 329 OFFCURVE",
"753 385 OFFCURVE",
"760 449 OFFCURVE",
"746 480 QCURVE SMOOTH",
"743 486 OFFCURVE",
"736 489 OFFCURVE",
"730 487 OFFCURVE",
"729 479 OFFCURVE",
"733 473 QCURVE SMOOTH",
"738 466 OFFCURVE",
"732 416 OFFCURVE",
"711 358 OFFCURVE",
"673 305 OFFCURVE",
"645 295 QCURVE SMOOTH",
"607 281 OFFCURVE",
"547 298 OFFCURVE",
"511 346 OFFCURVE",
"501 417 OFFCURVE",
"514 458 QCURVE SMOOTH",
"532 516 OFFCURVE",
"593 593 OFFCURVE",
"673 642 OFFCURVE",
"766 669 OFFCURVE",
"866 683 OFFCURVE",
"969 690 OFFCURVE",
"1018 696 QCURVE",
"1010 680 OFFCURVE",
"977 610 OFFCURVE",
"935 520 OFFCURVE",
"891 419 OFFCURVE",
"872 372 QCURVE",
"833 372 LINE",
"813 370 OFFCURVE",
"778 345 OFFCURVE",
"771 334 QCURVE SMOOTH",
"765 324 OFFCURVE",
"769 317 OFFCURVE",
"780 317 OFFCURVE",
"794 321 OFFCURVE",
"798 323 QCURVE SMOOTH",
"812 330 OFFCURVE",
"842 339 OFFCURVE",
"858 339 QCURVE",
"833 274 OFFCURVE",
"757 138 OFFCURVE",
"643 18 OFFCURVE",
"486 -76 OFFCURVE",
"381 -100 QCURVE SMOOTH",
"346 -108 OFFCURVE",
"262 -109 OFFCURVE",
"179 -92 OFFCURVE",
"102 -55 OFFCURVE",
"47 3 OFFCURVE",
"19 86 OFFCURVE",
"26 140 QCURVE SMOOTH",
"30 171 OFFCURVE",
"54 224 OFFCURVE",
"84 265 OFFCURVE",
"116 293 OFFCURVE",
"128 298 QCURVE SMOOTH",
"136 301 OFFCURVE",
"142 312 OFFCURVE",
"126 312 QCURVE SMOOTH",
"114 312 OFFCURVE",
"78 290 OFFCURVE",
"41 255 OFFCURVE",
"10 209 OFFCURVE",
"4 185 QCURVE SMOOTH",
"-20 91 OFFCURVE",
"30 -50 OFFCURVE",
"145 -141 OFFCURVE",
"305 -178 OFFCURVE",
"391 -167 QCURVE SMOOTH",
"488 -155 OFFCURVE",
"652 -59 OFFCURVE",
"784 80 OFFCURVE",
"881 250 OFFCURVE",
"910 337 QCURVE",
"944 335 OFFCURVE",
"1046 331 OFFCURVE",
"1148 327 OFFCURVE",
"1232 324 OFFCURVE",
"1249 324 QCURVE",
"1243 307 OFFCURVE",
"1221 247 OFFCURVE",
"1198 175 OFFCURVE",
"1180 99 OFFCURVE",
"1177 31 OFFCURVE",
"1193 -21 OFFCURVE",
"1216 -33 QCURVE SMOOTH",
"1242 -47 OFFCURVE",
"1303 -32 OFFCURVE",
"1329 -6 QCURVE SMOOTH",
"1346 10 OFFCURVE",
"1374 42 OFFCURVE",
"1401 84 OFFCURVE",
"1431 141 OFFCURVE",
"1451 182 QCURVE SMOOTH",
"1459 200 OFFCURVE",
"1444 206 OFFCURVE",
"1436 189 QCURVE SMOOTH",
"1424 165 OFFCURVE",
"1396 113 OFFCURVE",
"1365 64 OFFCURVE",
"1330 22 OFFCURVE",
"1311 8 QCURVE SMOOTH",
"1294 -4 OFFCURVE",
"1265 -3 OFFCURVE",
"1255 8 QCURVE SMOOTH",
"1244 20 OFFCURVE",
"1241 68 OFFCURVE",
"1249 128 OFFCURVE",
"1266 195 OFFCURVE",
"1285 258 OFFCURVE",
"1302 309 OFFCURVE",
"1307 324 QCURVE",
"1329 326 OFFCURVE",
"1384 337 OFFCURVE",
"1404 351 QCURVE SMOOTH",
"1417 360 OFFCURVE",
"1410 368 OFFCURVE",
"1396 363 QCURVE SMOOTH",
"1390 361 OFFCURVE",
"1369 358 OFFCURVE",
"1346 356 OFFCURVE",
"1323 356 OFFCURVE",
"1316 356 QCURVE",
"1346 443 OFFCURVE",
"1413 586 OFFCURVE",
"1472 688 OFFCURVE",
"1516 746 OFFCURVE",
"1523 750 QCURVE",
"1523 750 LINE"
);
},
{
closed = 1;
nodes = (
"1123 771 OFFCURVE",
"1132 760 OFFCURVE",
"1126 744 OFFCURVE",
"1098 728 OFFCURVE",
"1066 723 QCURVE",
"1071 730 OFFCURVE",
"1086 748 OFFCURVE",
"1102 763 OFFCURVE",
"1115 773 OFFCURVE",
"1119 771 QCURVE",
"1119 771 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
165 2 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 54 165 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
165 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1381;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1195 825 OFFCURVE",
"1162 836 OFFCURVE",
"1139 829 QCURVE SMOOTH",
"1127 825 OFFCURVE",
"1102 803 OFFCURVE",
"1081 777 OFFCURVE",
"1065 753 OFFCURVE",
"1062 747 QCURVE",
"1015 739 OFFCURVE",
"901 715 OFFCURVE",
"783 677 OFFCURVE",
"668 626 OFFCURVE",
"573 554 OFFCURVE",
"505 462 OFFCURVE",
"492 403 QCURVE SMOOTH",
"482 359 OFFCURVE",
"508 289 OFFCURVE",
"562 246 OFFCURVE",
"637 236 OFFCURVE",
"677 251 QCURVE SMOOTH",
"708 263 OFFCURVE",
"759 309 OFFCURVE",
"790 367 OFFCURVE",
"796 430 OFFCURVE",
"781 458 QCURVE SMOOTH",
"778 465 OFFCURVE",
"770 465 OFFCURVE",
"762 459 OFFCURVE",
"758 451 OFFCURVE",
"760 449 QCURVE SMOOTH",
"766 443 OFFCURVE",
"771 399 OFFCURVE",
"756 344 OFFCURVE",
"715 290 OFFCURVE",
"676 274 QCURVE SMOOTH",
"644 262 OFFCURVE",
"593 272 OFFCURVE",
"561 308 OFFCURVE",
"551 367 OFFCURVE",
"559 403 QCURVE SMOOTH",
"577 484 OFFCURVE",
"683 593 OFFCURVE",
"823 664 OFFCURVE",
"978 706 OFFCURVE",
"1046 721 QCURVE",
"1038 707 OFFCURVE",
"1006 647 OFFCURVE",
"965 562 OFFCURVE",
"918 457 OFFCURVE",
"896 398 QCURVE SMOOTH",
"882 362 OFFCURVE",
"837 268 OFFCURVE",
"773 166 OFFCURVE",
"690 64 OFFCURVE",
"586 -26 OFFCURVE",
"462 -96 OFFCURVE",
"389 -114 QCURVE SMOOTH",
"349 -124 OFFCURVE",
"256 -125 OFFCURVE",
"165 -105 OFFCURVE",
"85 -64 OFFCURVE",
"30 -2 OFFCURVE",
"8 84 OFFCURVE",
"21 138 QCURVE SMOOTH",
"29 169 OFFCURVE",
"59 223 OFFCURVE",
"94 265 OFFCURVE",
"129 293 OFFCURVE",
"142 299 QCURVE SMOOTH",
"149 303 OFFCURVE",
"157 314 OFFCURVE",
"141 313 QCURVE SMOOTH",
"129 312 OFFCURVE",
"90 290 OFFCURVE",
"50 253 OFFCURVE",
"13 207 OFFCURVE",
"4 182 QCURVE SMOOTH",
"-31 88 OFFCURVE",
"7 -51 OFFCURVE",
"123 -136 OFFCURVE",
"302 -164 OFFCURVE",
"408 -146 QCURVE SMOOTH",
"517 -128 OFFCURVE",
"720 -7 OFFCURVE",
"803 99 QCURVE SMOOTH",
"843 150 OFFCURVE",
"897 251 OFFCURVE",
"938 353 OFFCURVE",
"970 457 OFFCURVE",
"1004 562 OFFCURVE",
"1046 670 OFFCURVE",
"1077 726 QCURVE",
"1084 726 OFFCURVE",
"1110 735 OFFCURVE",
"1119 735 QCURVE",
"1133 740 OFFCURVE",
"1161 751 OFFCURVE",
"1183 768 OFFCURVE",
"1196 790 OFFCURVE",
"1196 805 QCURVE",
"1196 805 LINE"
);
},
{
closed = 1;
nodes = (
"1152 801 OFFCURVE",
"1161 790 OFFCURVE",
"1155 775 OFFCURVE",
"1127 758 OFFCURVE",
"1094 751 QCURVE",
"1100 758 OFFCURVE",
"1115 777 OFFCURVE",
"1131 793 OFFCURVE",
"1144 802 OFFCURVE",
"1148 801 QCURVE",
"1148 801 LINE"
);
}
);
width = 912;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1270 794 OFFCURVE",
"1237 806 OFFCURVE",
"1214 800 QCURVE SMOOTH",
"1202 796 OFFCURVE",
"1176 775 OFFCURVE",
"1153 749 OFFCURVE",
"1136 726 OFFCURVE",
"1133 720 QCURVE",
"1087 714 OFFCURVE",
"974 690 OFFCURVE",
"857 651 OFFCURVE",
"743 597 OFFCURVE",
"650 523 OFFCURVE",
"586 430 OFFCURVE",
"577 372 QCURVE SMOOTH",
"570 328 OFFCURVE",
"595 258 OFFCURVE",
"646 216 OFFCURVE",
"718 204 OFFCURVE",
"758 218 QCURVE SMOOTH",
"789 229 OFFCURVE",
"842 274 OFFCURVE",
"875 331 OFFCURVE",
"884 394 OFFCURVE",
"872 423 QCURVE",
"866 430 OFFCURVE",
"853 433 OFFCURVE",
"846 428 OFFCURVE",
"845 419 OFFCURVE",
"851 415 QCURVE",
"857 409 OFFCURVE",
"859 364 OFFCURVE",
"842 309 OFFCURVE",
"799 256 OFFCURVE",
"759 242 QCURVE SMOOTH",
"727 230 OFFCURVE",
"680 240 OFFCURVE",
"650 275 OFFCURVE",
"639 331 OFFCURVE",
"644 366 QCURVE SMOOTH",
"652 414 OFFCURVE",
"706 497 OFFCURVE",
"784 566 OFFCURVE",
"879 620 OFFCURVE",
"979 661 OFFCURVE",
"1076 687 OFFCURVE",
"1116 694 QCURVE",
"1108 681 OFFCURVE",
"1075 626 OFFCURVE",
"1033 548 OFFCURVE",
"982 448 OFFCURVE",
"956 390 QCURVE SMOOTH",
"932 338 OFFCURVE",
"872 201 OFFCURVE",
"793 54 OFFCURVE",
"695 -93 OFFCURVE",
"574 -219 OFFCURVE",
"428 -313 OFFCURVE",
"340 -332 QCURVE SMOOTH",
"300 -341 OFFCURVE",
"206 -338 OFFCURVE",
"115 -316 OFFCURVE",
"35 -272 OFFCURVE",
"-19 -207 OFFCURVE",
"-38 -120 OFFCURVE",
"-22 -65 QCURVE SMOOTH",
"-13 -34 OFFCURVE",
"18 19 OFFCURVE",
"55 59 OFFCURVE",
"91 87 OFFCURVE",
"104 92 QCURVE SMOOTH",
"112 96 OFFCURVE",
"121 107 OFFCURVE",
"105 106 QCURVE SMOOTH",
"93 106 OFFCURVE",
"53 84 OFFCURVE",
"11 49 OFFCURVE",
"-27 3 OFFCURVE",
"-37 -21 QCURVE SMOOTH",
"-76 -115 OFFCURVE",
"-45 -256 OFFCURVE",
"68 -345 OFFCURVE",
"245 -379 OFFCURVE",
"352 -364 QCURVE SMOOTH",
"401 -357 OFFCURVE",
"524 -312 OFFCURVE",
"651 -235 OFFCURVE",
"769 -128 OFFCURVE",
"813 -60 QCURVE SMOOTH",
"880 44 OFFCURVE",
"964 245 OFFCURVE",
"1031 435 OFFCURVE",
"1097 615 OFFCURVE",
"1146 698 QCURVE",
"1153 698 OFFCURVE",
"1180 706 OFFCURVE",
"1189 706 QCURVE",
"1204 710 OFFCURVE",
"1232 721 OFFCURVE",
"1255 737 OFFCURVE",
"1270 759 OFFCURVE",
"1270 774 QCURVE",
"1270 774 LINE"
);
},
{
closed = 1;
nodes = (
"1226 771 OFFCURVE",
"1234 760 OFFCURVE",
"1227 745 OFFCURVE",
"1197 729 OFFCURVE",
"1164 723 QCURVE",
"1170 730 OFFCURVE",
"1187 748 OFFCURVE",
"1203 763 OFFCURVE",
"1218 773 OFFCURVE",
"1222 771 QCURVE",
"1222 771 LINE"
);
}
);
width = 966;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1627 826 OFFCURVE",
"1628 843 OFFCURVE",
"1619 849 OFFCURVE",
"1605 842 OFFCURVE",
"1596 829 QCURVE SMOOTH",
"1544 749 OFFCURVE",
"1410 606 OFFCURVE",
"1267 482 OFFCURVE",
"1124 384 OFFCURVE",
"1003 314 OFFCURVE",
"914 279 OFFCURVE",
"896 280 QCURVE",
"889 277 OFFCURVE",
"887 225 OFFCURVE",
"898 145 OFFCURVE",
"924 49 OFFCURVE",
"945 3 QCURVE SMOOTH",
"963 -36 OFFCURVE",
"1012 -105 OFFCURVE",
"1074 -155 OFFCURVE",
"1147 -184 OFFCURVE",
"1188 -184 QCURVE SMOOTH",
"1220 -184 OFFCURVE",
"1288 -161 OFFCURVE",
"1350 -122 OFFCURVE",
"1399 -71 OFFCURVE",
"1413 -44 QCURVE SMOOTH",
"1418 -34 OFFCURVE",
"1418 -23 OFFCURVE",
"1412 -21 OFFCURVE",
"1403 -29 OFFCURVE",
"1400 -36 QCURVE SMOOTH",
"1386 -63 OFFCURVE",
"1340 -103 OFFCURVE",
"1284 -128 OFFCURVE",
"1222 -141 OFFCURVE",
"1193 -141 QCURVE SMOOTH",
"1134 -141 OFFCURVE",
"1046 -58 OFFCURVE",
"1014 15 QCURVE SMOOTH",
"995 58 OFFCURVE",
"968 146 OFFCURVE",
"953 217 OFFCURVE",
"949 261 OFFCURVE",
"954 259 QCURVE",
"997 270 OFFCURVE",
"1107 324 OFFCURVE",
"1229 404 OFFCURVE",
"1356 505 OFFCURVE",
"1475 621 OFFCURVE",
"1581 749 OFFCURVE",
"1621 816 QCURVE",
"1621 816 LINE"
);
},
{
closed = 1;
nodes = (
"1097 796 OFFCURVE",
"1072 774 OFFCURVE",
"1050 748 OFFCURVE",
"1035 724 OFFCURVE",
"1032 720 QCURVE",
"999 717 OFFCURVE",
"923 712 OFFCURVE",
"841 706 OFFCURVE",
"757 695 OFFCURVE",
"716 686 QCURVE SMOOTH",
"614 663 OFFCURVE",
"494 574 OFFCURVE",
"442 470 OFFCURVE",
"451 367 OFFCURVE",
"505 293 OFFCURVE",
"596 261 OFFCURVE",
"652 282 QCURVE SMOOTH",
"679 292 OFFCURVE",
"723 336 OFFCURVE",
"750 393 OFFCURVE",
"756 454 OFFCURVE",
"746 480 QCURVE SMOOTH",
"741 491 OFFCURVE",
"726 495 OFFCURVE",
"728 487 QCURVE SMOOTH",
"732 463 OFFCURVE",
"727 406 OFFCURVE",
"706 352 OFFCURVE",
"670 309 OFFCURVE",
"645 300 QCURVE SMOOTH",
"598 283 OFFCURVE",
"534 312 OFFCURVE",
"503 377 OFFCURVE",
"509 467 OFFCURVE",
"559 558 OFFCURVE",
"654 635 OFFCURVE",
"728 656 QCURVE SMOOTH",
"763 666 OFFCURVE",
"837 678 OFFCURVE",
"912 686 OFFCURVE",
"985 692 OFFCURVE",
"1018 696 QCURVE",
"1009 679 OFFCURVE",
"983 623 OFFCURVE",
"952 556 OFFCURVE",
"920 486 OFFCURVE",
"892 424 OFFCURVE",
"871 376 OFFCURVE",
"866 365 QCURVE SMOOTH",
"837 301 OFFCURVE",
"758 154 OFFCURVE",
"642 20 OFFCURVE",
"484 -87 OFFCURVE",
"377 -111 QCURVE SMOOTH",
"342 -119 OFFCURVE",
"259 -118 OFFCURVE",
"176 -98 OFFCURVE",
"101 -59 OFFCURVE",
"46 2 OFFCURVE",
"19 86 OFFCURVE",
"26 140 QCURVE SMOOTH",
"30 174 OFFCURVE",
"58 227 OFFCURVE",
"90 265 OFFCURVE",
"119 288 OFFCURVE",
"126 291 QCURVE SMOOTH",
"132 294 OFFCURVE",
"131 307 OFFCURVE",
"119 305 QCURVE SMOOTH",
"109 304 OFFCURVE",
"76 286 OFFCURVE",
"42 255 OFFCURVE",
"11 212 OFFCURVE",
"4 185 QCURVE SMOOTH",
"-12 122 OFFCURVE",
"5 17 OFFCURVE",
"58 -67 OFFCURVE",
"143 -127 OFFCURVE",
"245 -164 OFFCURVE",
"359 -174 OFFCURVE",
"416 -166 QCURVE SMOOTH",
"529 -149 OFFCURVE",
"690 -46 OFFCURVE",
"805 101 OFFCURVE",
"885 278 OFFCURVE",
"950 459 OFFCURVE",
"1010 630 OFFCURVE",
"1048 698 QCURVE",
"1108 704 OFFCURVE",
"1164 744 OFFCURVE",
"1170 783 OFFCURVE",
"1137 808 OFFCURVE",
"1109 800 QCURVE",
"1109 800 LINE"
);
},
{
closed = 1;
nodes = (
"1095 727 OFFCURVE",
"1066 723 QCURVE",
"1074 732 OFFCURVE",
"1095 757 OFFCURVE",
"1105 765 QCURVE SMOOTH",
"1117 775 OFFCURVE",
"1134 774 OFFCURVE",
"1138 762 OFFCURVE",
"1126 743 OFFCURVE",
"1110 735 QCURVE",
"1110 735 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
15 2 30 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1144;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"955 806 OFFCURVE",
"922 845 OFFCURVE",
"868 861 OFFCURVE",
"798 845 OFFCURVE",
"719 780 OFFCURVE",
"636 657 OFFCURVE",
"597 559 QCURVE SMOOTH",
"577 506 OFFCURVE",
"559 462 QCURVE SMOOTH",
"544 424 OFFCURVE",
"517 355 OFFCURVE",
"512 345 QCURVE",
"432 335 OFFCURVE",
"334 375 OFFCURVE",
"289 446 OFFCURVE",
"292 535 OFFCURVE",
"335 617 OFFCURVE",
"413 677 OFFCURVE",
"464 683 QCURVE SMOOTH",
"480 685 OFFCURVE",
"496 694 OFFCURVE",
"495 701 OFFCURVE",
"478 704 OFFCURVE",
"462 700 QCURVE SMOOTH",
"376 680 OFFCURVE",
"275 608 OFFCURVE",
"235 522 OFFCURVE",
"252 433 OFFCURVE",
"317 361 OFFCURVE",
"426 318 OFFCURVE",
"498 320 QCURVE",
"471 264 OFFCURVE",
"422 172 OFFCURVE",
"393 127 QCURVE",
"366 132 OFFCURVE",
"300 136 OFFCURVE",
"233 133 OFFCURVE",
"169 124 OFFCURVE",
"142 116 QCURVE SMOOTH",
"75 96 OFFCURVE",
"6 35 OFFCURVE",
"-11 -27 OFFCURVE",
"19 -83 OFFCURVE",
"82 -116 OFFCURVE",
"172 -115 OFFCURVE",
"224 -90 QCURVE SMOOTH",
"273 -67 OFFCURVE",
"362 18 OFFCURVE",
"401 73 QCURVE",
"449 64 OFFCURVE",
"546 42 OFFCURVE",
"640 10 OFFCURVE",
"727 -35 OFFCURVE",
"763 -67 QCURVE SMOOTH",
"788 -89 OFFCURVE",
"815 -146 OFFCURVE",
"823 -201 OFFCURVE",
"818 -249 OFFCURVE",
"812 -262 QCURVE SMOOTH",
"809 -268 OFFCURVE",
"800 -286 OFFCURVE",
"799 -298 OFFCURVE",
"809 -301 OFFCURVE",
"825 -292 QCURVE SMOOTH",
"839 -285 OFFCURVE",
"850 -265 QCURVE SMOOTH",
"859 -249 OFFCURVE",
"860 -193 OFFCURVE",
"839 -127 OFFCURVE",
"795 -59 OFFCURVE",
"759 -31 QCURVE SMOOTH",
"724 -4 OFFCURVE",
"640 43 OFFCURVE",
"553 80 OFFCURVE",
"468 109 OFFCURVE",
"431 118 QCURVE",
"436 127 OFFCURVE",
"447 143 OFFCURVE",
"452 152 QCURVE SMOOTH",
"479 200 OFFCURVE",
"518 280 OFFCURVE",
"540 324 QCURVE",
"593 333 OFFCURVE",
"699 380 OFFCURVE",
"795 448 OFFCURVE",
"876 534 OFFCURVE",
"933 630 OFFCURVE",
"961 733 OFFCURVE",
"957 783 QCURVE",
"957 783 LINE"
);
},
{
closed = 1;
nodes = (
"916 692 OFFCURVE",
"854 557 OFFCURVE",
"752 446 OFFCURVE",
"621 366 OFFCURVE",
"554 351 QCURVE",
"569 383 OFFCURVE",
"600 445 OFFCURVE",
"613 470 QCURVE SMOOTH",
"628 499 OFFCURVE",
"642 525 QCURVE SMOOTH",
"700 639 OFFCURVE",
"800 760 OFFCURVE",
"873 804 OFFCURVE",
"916 786 OFFCURVE",
"916 761 QCURVE",
"916 761 LINE"
);
},
{
closed = 1;
nodes = (
"291 -22 OFFCURVE",
"208 -62 QCURVE SMOOTH",
"162 -84 OFFCURVE",
"85 -89 OFFCURVE",
"33 -69 OFFCURVE",
"11 -30 OFFCURVE",
"29 15 OFFCURVE",
"94 60 OFFCURVE",
"154 75 QCURVE SMOOTH",
"203 88 OFFCURVE",
"312 90 OFFCURVE",
"362 79 QCURVE",
"362 79 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 3 89 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 89 26 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 89 25 89 41 89 57 89 73 89 89 89 105 89 121 89 137 89 153 89 169 89 185 89 201 89 217 89 233 89 249 89 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 712;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1316 -101 OFFCURVE",
"1264 -41 OFFCURVE",
"1259 58 OFFCURVE",
"1289 185 OFFCURVE",
"1337 314 OFFCURVE",
"1392 435 OFFCURVE",
"1414 478 QCURVE SMOOTH",
"1443 535 OFFCURVE",
"1458 621 OFFCURVE",
"1437 671 OFFCURVE",
"1384 680 OFFCURVE",
"1306 644 OFFCURVE",
"1206 556 OFFCURVE",
"1148 484 QCURVE SMOOTH",
"1117 446 OFFCURVE",
"1059 369 OFFCURVE",
"1008 298 OFFCURVE",
"965 236 OFFCURVE",
"950 212 QCURVE",
"981 306 OFFCURVE",
"1039 490 OFFCURVE",
"1048 586 QCURVE SMOOTH",
"1054 650 OFFCURVE",
"1007 703 OFFCURVE",
"933 703 OFFCURVE",
"851 658 OFFCURVE",
"822 623 QCURVE SMOOTH",
"795 591 OFFCURVE",
"754 537 OFFCURVE",
"717 482 OFFCURVE",
"681 420 OFFCURVE",
"659 381 QCURVE SMOOTH",
"646 357 OFFCURVE",
"636 363 OFFCURVE",
"646 392 QCURVE SMOOTH",
"665 442 OFFCURVE",
"693 543 OFFCURVE",
"698 591 QCURVE SMOOTH",
"705 666 OFFCURVE",
"668 761 OFFCURVE",
"596 809 OFFCURVE",
"496 814 OFFCURVE",
"383 783 OFFCURVE",
"266 719 OFFCURVE",
"160 629 OFFCURVE",
"72 518 OFFCURVE",
"45 455 QCURVE SMOOTH",
"20 395 OFFCURVE",
"15 293 OFFCURVE",
"43 211 OFFCURVE",
"98 151 OFFCURVE",
"167 119 OFFCURVE",
"245 116 OFFCURVE",
"282 131 QCURVE SMOOTH",
"336 153 OFFCURVE",
"412 221 OFFCURVE",
"455 295 OFFCURVE",
"466 368 OFFCURVE",
"446 423 OFFCURVE",
"394 453 OFFCURVE",
"352 447 QCURVE SMOOTH",
"334 445 OFFCURVE",
"323 437 OFFCURVE",
"327 430 OFFCURVE",
"340 425 OFFCURVE",
"347 426 QCURVE SMOOTH",
"387 431 OFFCURVE",
"426 401 OFFCURVE",
"433 348 OFFCURVE",
"412 280 OFFCURVE",
"371 215 OFFCURVE",
"315 162 OFFCURVE",
"283 150 QCURVE SMOOTH",
"233 132 OFFCURVE",
"140 154 OFFCURVE",
"79 230 OFFCURVE",
"66 358 OFFCURVE",
"98 445 QCURVE SMOOTH",
"116 495 OFFCURVE",
"187 593 OFFCURVE",
"276 679 OFFCURVE",
"377 748 OFFCURVE",
"475 788 OFFCURVE",
"562 794 OFFCURVE",
"623 756 OFFCURVE",
"650 668 OFFCURVE",
"640 593 QCURVE SMOOTH",
"634 552 OFFCURVE",
"605 445 OFFCURVE",
"565 326 OFFCURVE",
"517 202 OFFCURVE",
"467 88 OFFCURVE",
"417 -9 OFFCURVE",
"396 -42 QCURVE",
"392 -54 OFFCURVE",
"412 -66 OFFCURVE",
"442 -64 OFFCURVE",
"472 -50 OFFCURVE",
"478 -36 QCURVE SMOOTH",
"512 40 OFFCURVE",
"568 164 OFFCURVE",
"619 271 OFFCURVE",
"670 364 OFFCURVE",
"727 456 OFFCURVE",
"795 551 OFFCURVE",
"839 605 QCURVE SMOOTH",
"869 642 OFFCURVE",
"927 680 OFFCURVE",
"970 677 OFFCURVE",
"993 629 OFFCURVE",
"987 581 QCURVE SMOOTH",
"972 457 OFFCURVE",
"911 254 OFFCURVE",
"846 104 OFFCURVE",
"794 12 OFFCURVE",
"788 0 QCURVE SMOOTH",
"781 -11 OFFCURVE",
"797 -32 OFFCURVE",
"827 -36 OFFCURVE",
"865 -13 OFFCURVE",
"879 20 QCURVE SMOOTH",
"888 42 OFFCURVE",
"926 111 OFFCURVE",
"975 193 OFFCURVE",
"1031 281 OFFCURVE",
"1085 362 OFFCURVE",
"1132 429 OFFCURVE",
"1148 448 QCURVE SMOOTH",
"1215 532 OFFCURVE",
"1321 621 OFFCURVE",
"1381 633 OFFCURVE",
"1389 568 OFFCURVE",
"1359 499 QCURVE SMOOTH",
"1335 443 OFFCURVE",
"1283 331 OFFCURVE",
"1238 223 OFFCURVE",
"1205 121 OFFCURVE",
"1201 76 QCURVE SMOOTH",
"1195 13 OFFCURVE",
"1231 -61 OFFCURVE",
"1285 -100 OFFCURVE",
"1343 -113 OFFCURVE",
"1358 -114 QCURVE SMOOTH",
"1373 -116 OFFCURVE",
"1392 -110 OFFCURVE",
"1398 -103 OFFCURVE",
"1388 -97 OFFCURVE",
"1374 -98 QCURVE",
"1374 -98 LINE"
);
}
);
width = 1329;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1189 709 OFFCURVE",
"1151 753 OFFCURVE",
"1091 766 OFFCURVE",
"1017 752 OFFCURVE",
"982 736 QCURVE SMOOTH",
"953 723 OFFCURVE",
"893 680 OFFCURVE",
"833 626 OFFCURVE",
"773 562 OFFCURVE",
"745 528 QCURVE SMOOTH",
"707 483 OFFCURVE",
"640 390 OFFCURVE",
"613 348 QCURVE SMOOTH",
"606 337 OFFCURVE",
"588 306 OFFCURVE",
"580 294 OFFCURVE",
"588 317 OFFCURVE",
"608 359 QCURVE SMOOTH",
"634 416 OFFCURVE",
"684 534 OFFCURVE",
"691 592 QCURVE SMOOTH",
"698 653 OFFCURVE",
"669 735 OFFCURVE",
"610 781 OFFCURVE",
"528 796 OFFCURVE",
"436 786 OFFCURVE",
"342 756 OFFCURVE",
"301 733 QCURVE SMOOTH",
"258 709 OFFCURVE",
"175 649 OFFCURVE",
"103 577 OFFCURVE",
"45 497 OFFCURVE",
"27 454 QCURVE SMOOTH",
"-5 377 OFFCURVE",
"-1 255 OFFCURVE",
"48 168 OFFCURVE",
"130 122 OFFCURVE",
"178 122 QCURVE SMOOTH",
"244 122 OFFCURVE",
"352 177 OFFCURVE",
"427 258 OFFCURVE",
"464 349 OFFCURVE",
"455 420 OFFCURVE",
"395 456 OFFCURVE",
"336 442 QCURVE SMOOTH",
"332 441 OFFCURVE",
"326 435 OFFCURVE",
"325 429 OFFCURVE",
"330 425 OFFCURVE",
"338 426 QCURVE SMOOTH",
"382 432 OFFCURVE",
"423 394 OFFCURVE",
"423 331 OFFCURVE",
"387 254 OFFCURVE",
"322 186 OFFCURVE",
"233 141 OFFCURVE",
"181 141 QCURVE SMOOTH",
"131 141 OFFCURVE",
"71 197 OFFCURVE",
"51 288 OFFCURVE",
"72 405 OFFCURVE",
"134 527 OFFCURVE",
"238 644 OFFCURVE",
"312 690 QCURVE SMOOTH",
"355 717 OFFCURVE",
"443 754 OFFCURVE",
"522 768 OFFCURVE",
"588 754 OFFCURVE",
"629 706 OFFCURVE",
"641 620 OFFCURVE",
"626 554 QCURVE SMOOTH",
"614 501 OFFCURVE",
"574 381 OFFCURVE",
"526 261 OFFCURVE",
"474 146 OFFCURVE",
"426 49 OFFCURVE",
"385 -24 OFFCURVE",
"373 -42 QCURVE",
"370 -54 OFFCURVE",
"390 -65 OFFCURVE",
"420 -64 OFFCURVE",
"450 -50 OFFCURVE",
"456 -36 QCURVE SMOOTH",
"480 15 OFFCURVE",
"543 151 OFFCURVE",
"621 299 OFFCURVE",
"712 448 OFFCURVE",
"765 512 QCURVE SMOOTH",
"819 576 OFFCURVE",
"931 668 OFFCURVE",
"987 694 QCURVE SMOOTH",
"1013 707 OFFCURVE",
"1061 718 OFFCURVE",
"1096 711 OFFCURVE",
"1113 683 OFFCURVE",
"1109 657 QCURVE SMOOTH",
"1105 631 OFFCURVE",
"1072 545 OFFCURVE",
"1026 442 OFFCURVE",
"972 329 OFFCURVE",
"922 226 OFFCURVE",
"883 139 OFFCURVE",
"874 113 QCURVE SMOOTH",
"833 -9 OFFCURVE",
"893 -141 OFFCURVE",
"996 -146 QCURVE SMOOTH",
"1023 -147 OFFCURVE",
"1056 -127 OFFCURVE",
"1064 -106 OFFCURVE",
"1044 -96 OFFCURVE",
"1018 -108 QCURVE SMOOTH",
"975 -128 OFFCURVE",
"920 -105 OFFCURVE",
"903 -31 OFFCURVE",
"926 86 OFFCURVE",
"960 161 QCURVE SMOOTH",
"997 242 OFFCURVE",
"1077 387 OFFCURVE",
"1144 515 OFFCURVE",
"1187 623 OFFCURVE",
"1188 668 QCURVE",
"1188 668 LINE"
);
}
);
width = 1039;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"910 556 OFFCURVE",
"908 566 OFFCURVE",
"901 568 OFFCURVE",
"892 563 OFFCURVE",
"889 558 QCURVE SMOOTH",
"870 521 OFFCURVE",
"800 459 OFFCURVE",
"759 432 QCURVE",
"763 525 OFFCURVE",
"703 657 OFFCURVE",
"600 740 OFFCURVE",
"467 777 OFFCURVE",
"329 771 OFFCURVE",
"198 725 OFFCURVE",
"98 644 OFFCURVE",
"44 529 OFFCURVE",
"51 457 QCURVE SMOOTH",
"55 415 OFFCURVE",
"96 353 OFFCURVE",
"128 331 QCURVE",
"102 266 OFFCURVE",
"96 141 OFFCURVE",
"126 39 OFFCURVE",
"188 -34 OFFCURVE",
"231 -48 QCURVE SMOOTH",
"284 -65 OFFCURVE",
"391 -55 OFFCURVE",
"492 -11 OFFCURVE",
"584 60 OFFCURVE",
"660 146 OFFCURVE",
"717 243 OFFCURVE",
"732 290 QCURVE SMOOTH",
"741 319 OFFCURVE",
"753 371 OFFCURVE",
"755 397 QCURVE",
"803 427 OFFCURVE",
"876 503 OFFCURVE",
"904 547 QCURVE",
"904 547 LINE"
);
},
{
closed = 1;
nodes = (
"637 367 OFFCURVE",
"498 323 OFFCURVE",
"363 305 OFFCURVE",
"241 316 OFFCURVE",
"197 338 QCURVE",
"207 361 OFFCURVE",
"246 428 OFFCURVE",
"297 498 OFFCURVE",
"358 564 OFFCURVE",
"423 612 OFFCURVE",
"490 634 OFFCURVE",
"521 624 QCURVE SMOOTH",
"531 621 OFFCURVE",
"540 632 OFFCURVE",
"529 638 QCURVE SMOOTH",
"491 659 OFFCURVE",
"413 652 OFFCURVE",
"337 613 OFFCURVE",
"266 548 OFFCURVE",
"206 475 OFFCURVE",
"160 401 OFFCURVE",
"146 372 QCURVE",
"112 401 OFFCURVE",
"106 448 QCURVE SMOOTH",
"96 515 OFFCURVE",
"140 625 OFFCURVE",
"225 705 OFFCURVE",
"340 752 OFFCURVE",
"460 759 OFFCURVE",
"575 723 OFFCURVE",
"661 638 OFFCURVE",
"707 499 OFFCURVE",
"698 400 QCURVE",
"698 400 LINE"
);
},
{
closed = 1;
nodes = (
"690 348 OFFCURVE",
"680 311 OFFCURVE",
"674 294 QCURVE SMOOTH",
"657 245 OFFCURVE",
"602 149 OFFCURVE",
"534 66 OFFCURVE",
"454 1 OFFCURVE",
"367 -36 OFFCURVE",
"278 -38 OFFCURVE",
"234 -16 QCURVE SMOOTH",
"198 2 OFFCURVE",
"159 71 OFFCURVE",
"148 158 OFFCURVE",
"164 256 OFFCURVE",
"182 303 QCURVE",
"231 283 OFFCURVE",
"357 273 OFFCURVE",
"492 289 OFFCURVE",
"630 332 OFFCURVE",
"692 365 QCURVE",
"692 365 LINE"
);
}
);
width = 726;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"912 736 OFFCURVE",
"848 753 QCURVE",
"861 766 OFFCURVE",
"885 785 OFFCURVE",
"893 790 QCURVE SMOOTH",
"911 801 OFFCURVE",
"907 815 OFFCURVE",
"883 805 QCURVE SMOOTH",
"860 797 OFFCURVE",
"825 776 OFFCURVE",
"808 763 QCURVE",
"719 781 OFFCURVE",
"532 776 OFFCURVE",
"448 764 QCURVE SMOOTH",
"412 759 OFFCURVE",
"326 739 OFFCURVE",
"237 708 OFFCURVE",
"153 665 OFFCURVE",
"86 607 OFFCURVE",
"44 535 OFFCURVE",
"42 490 QCURVE SMOOTH",
"40 452 OFFCURVE",
"64 395 OFFCURVE",
"105 356 OFFCURVE",
"160 336 OFFCURVE",
"190 335 QCURVE SMOOTH",
"219 334 OFFCURVE",
"278 352 OFFCURVE",
"326 388 OFFCURVE",
"356 441 OFFCURVE",
"356 475 QCURVE SMOOTH",
"356 486 OFFCURVE",
"344 487 OFFCURVE",
"342 476 QCURVE",
"333 451 OFFCURVE",
"302 406 OFFCURVE",
"262 373 OFFCURVE",
"216 354 OFFCURVE",
"192 355 QCURVE SMOOTH",
"169 356 OFFCURVE",
"130 376 OFFCURVE",
"103 410 OFFCURVE",
"90 456 OFFCURVE",
"94 482 QCURVE SMOOTH",
"103 538 OFFCURVE",
"182 623 OFFCURVE",
"288 684 OFFCURVE",
"405 722 OFFCURVE",
"452 731 QCURVE SMOOTH",
"483 737 OFFCURVE",
"562 745 OFFCURVE",
"648 748 OFFCURVE",
"738 744 OFFCURVE",
"781 738 QCURVE",
"767 725 OFFCURVE",
"742 697 OFFCURVE",
"728 682 QCURVE SMOOTH",
"664 610 OFFCURVE",
"567 446 OFFCURVE",
"482 286 OFFCURVE",
"400 144 OFFCURVE",
"351 96 QCURVE SMOOTH",
"300 47 OFFCURVE",
"188 -11 OFFCURVE",
"121 -8 QCURVE SMOOTH",
"86 -6 OFFCURVE",
"47 24 OFFCURVE",
"34 66 OFFCURVE",
"47 110 OFFCURVE",
"84 140 OFFCURVE",
"143 148 OFFCURVE",
"183 133 QCURVE SMOOTH",
"196 128 OFFCURVE",
"202 140 OFFCURVE",
"186 146 QCURVE SMOOTH",
"129 165 OFFCURVE",
"44 156 OFFCURVE",
"-10 120 OFFCURVE",
"-30 65 OFFCURVE",
"-13 12 OFFCURVE",
"45 -30 OFFCURVE",
"96 -36 QCURVE SMOOTH",
"177 -46 OFFCURVE",
"326 7 OFFCURVE",
"390 67 QCURVE SMOOTH",
"433 109 OFFCURVE",
"507 200 OFFCURVE",
"540 249 QCURVE",
"580 246 OFFCURVE",
"702 258 OFFCURVE",
"764 273 QCURVE SMOOTH",
"813 285 OFFCURVE",
"917 338 OFFCURVE",
"1003 408 OFFCURVE",
"1062 493 OFFCURVE",
"1074 581 OFFCURVE",
"1027 668 OFFCURVE",
"964 705 QCURVE",
"964 705 LINE"
);
},
{
closed = 1;
nodes = (
"980 658 OFFCURVE",
"1010 589 OFFCURVE",
"1000 514 OFFCURVE",
"954 438 OFFCURVE",
"881 369 OFFCURVE",
"786 313 OFFCURVE",
"732 297 QCURVE SMOOTH",
"684 283 OFFCURVE",
"592 268 OFFCURVE",
"554 270 QCURVE",
"590 326 OFFCURVE",
"657 443 OFFCURVE",
"723 560 OFFCURVE",
"791 675 OFFCURVE",
"829 729 QCURVE",
"861 721 OFFCURVE",
"918 699 OFFCURVE",
"941 684 QCURVE",
"941 684 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
106 10 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 890;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"480 666 OFFCURVE",
"365 642 OFFCURVE",
"255 561 OFFCURVE",
"161 437 OFFCURVE",
"102 292 OFFCURVE",
"90 138 OFFCURVE",
"118 69 QCURVE SMOOTH",
"143 6 OFFCURVE",
"233 -56 OFFCURVE",
"341 -67 OFFCURVE",
"456 -34 OFFCURVE",
"505 -2 QCURVE SMOOTH",
"574 43 OFFCURVE",
"679 167 OFFCURVE",
"747 305 OFFCURVE",
"775 449 OFFCURVE",
"760 582 OFFCURVE",
"698 694 OFFCURVE",
"587 768 OFFCURVE",
"423 795 OFFCURVE",
"312 776 QCURVE SMOOTH",
"249 765 OFFCURVE",
"149 703 OFFCURVE",
"89 613 OFFCURVE",
"79 504 OFFCURVE",
"107 447 QCURVE SMOOTH",
"117 427 OFFCURVE",
"135 436 OFFCURVE",
"131 453 QCURVE SMOOTH",
"117 511 OFFCURVE",
"127 614 OFFCURVE",
"174 694 OFFCURVE",
"257 746 OFFCURVE",
"316 754 QCURVE SMOOTH",
"426 768 OFFCURVE",
"589 710 OFFCURVE",
"689 594 OFFCURVE",
"725 435 OFFCURVE",
"693 265 OFFCURVE",
"591 98 OFFCURVE",
"503 32 QCURVE SMOOTH",
"453 -6 OFFCURVE",
"347 -46 OFFCURVE",
"253 -39 OFFCURVE",
"179 19 OFFCURVE",
"161 81 QCURVE SMOOTH",
"145 137 OFFCURVE",
"165 267 OFFCURVE",
"219 396 OFFCURVE",
"299 512 OFFCURVE",
"389 596 OFFCURVE",
"482 636 OFFCURVE",
"521 624 QCURVE SMOOTH",
"531 621 OFFCURVE",
"540 632 OFFCURVE",
"529 638 QCURVE",
"529 638 LINE"
);
},
{
closed = 1;
nodes = (
"729 -369 OFFCURVE",
"808 -335 OFFCURVE",
"842 -284 OFFCURVE",
"833 -221 OFFCURVE",
"786 -163 OFFCURVE",
"702 -117 OFFCURVE",
"644 -108 QCURVE SMOOTH",
"637 -107 OFFCURVE",
"630 -112 OFFCURVE",
"631 -119 OFFCURVE",
"639 -126 OFFCURVE",
"647 -127 QCURVE SMOOTH",
"695 -135 OFFCURVE",
"765 -178 OFFCURVE",
"805 -232 OFFCURVE",
"813 -289 OFFCURVE",
"785 -331 OFFCURVE",
"719 -350 OFFCURVE",
"665 -339 QCURVE SMOOTH",
"590 -325 OFFCURVE",
"474 -272 OFFCURVE",
"381 -210 OFFCURVE",
"304 -146 OFFCURVE",
"231 -94 OFFCURVE",
"155 -61 OFFCURVE",
"111 -61 QCURVE SMOOTH",
"94 -61 OFFCURVE",
"65 -76 OFFCURVE",
"43 -97 OFFCURVE",
"30 -122 OFFCURVE",
"29 -132 QCURVE SMOOTH",
"28 -147 OFFCURVE",
"43 -153 OFFCURVE",
"45 -138 QCURVE SMOOTH",
"46 -127 OFFCURVE",
"60 -110 OFFCURVE",
"79 -98 OFFCURVE",
"102 -91 OFFCURVE",
"111 -91 QCURVE SMOOTH",
"150 -91 OFFCURVE",
"214 -132 OFFCURVE",
"278 -194 OFFCURVE",
"351 -266 OFFCURVE",
"448 -328 OFFCURVE",
"577 -369 OFFCURVE",
"665 -369 QCURVE",
"665 -369 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
76 2 63 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 752;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1103 203 OFFCURVE",
"1086 200 OFFCURVE",
"1079 187 QCURVE SMOOTH",
"1075 179 OFFCURVE",
"1057 144 OFFCURVE",
"1032 101 OFFCURVE",
"1001 56 OFFCURVE",
"983 38 QCURVE SMOOTH",
"956 11 OFFCURVE",
"910 -4 OFFCURVE",
"868 11 OFFCURVE",
"830 50 OFFCURVE",
"811 79 QCURVE SMOOTH",
"783 122 OFFCURVE",
"743 218 OFFCURVE",
"716 303 OFFCURVE",
"702 366 OFFCURVE",
"700 377 QCURVE",
"717 378 OFFCURVE",
"763 381 OFFCURVE",
"792 386 QCURVE SMOOTH",
"871 399 OFFCURVE",
"996 450 OFFCURVE",
"1079 514 OFFCURVE",
"1116 587 OFFCURVE",
"1101 655 OFFCURVE",
"1029 715 OFFCURVE",
"961 735 QCURVE SMOOTH",
"938 741 OFFCURVE",
"889 749 OFFCURVE",
"862 754 QCURVE",
"866 766 OFFCURVE",
"867 783 OFFCURVE",
"860 788 OFFCURVE",
"841 777 OFFCURVE",
"825 759 QCURVE",
"737 771 OFFCURVE",
"549 769 OFFCURVE",
"444 754 QCURVE SMOOTH",
"361 742 OFFCURVE",
"234 688 OFFCURVE",
"146 616 OFFCURVE",
"99 534 OFFCURVE",
"95 494 QCURVE SMOOTH",
"91 452 OFFCURVE",
"116 388 OFFCURVE",
"161 347 OFFCURVE",
"221 327 OFFCURVE",
"286 331 OFFCURVE",
"349 359 OFFCURVE",
"374 386 QCURVE SMOOTH",
"406 419 OFFCURVE",
"413 467 QCURVE",
"413 471 OFFCURVE",
"410 480 OFFCURVE",
"405 483 OFFCURVE",
"401 478 OFFCURVE",
"400 469 QCURVE SMOOTH",
"399 459 OFFCURVE",
"381 424 OFFCURVE",
"362 404 QCURVE SMOOTH",
"340 381 OFFCURVE",
"288 358 OFFCURVE",
"235 355 OFFCURVE",
"187 373 OFFCURVE",
"154 408 OFFCURVE",
"139 460 OFFCURVE",
"146 494 QCURVE SMOOTH",
"153 526 OFFCURVE",
"196 593 OFFCURVE",
"267 652 OFFCURVE",
"367 699 OFFCURVE",
"431 712 QCURVE SMOOTH",
"533 734 OFFCURVE",
"718 743 OFFCURVE",
"803 735 QCURVE",
"772 701 OFFCURVE",
"713 613 OFFCURVE",
"655 514 OFFCURVE",
"596 407 OFFCURVE",
"566 354 QCURVE SMOOTH",
"526 283 OFFCURVE",
"442 150 OFFCURVE",
"347 48 OFFCURVE",
"237 -11 OFFCURVE",
"171 -8 QCURVE SMOOTH",
"136 -6 OFFCURVE",
"96 25 OFFCURVE",
"83 66 OFFCURVE",
"95 111 OFFCURVE",
"131 141 OFFCURVE",
"190 149 OFFCURVE",
"230 134 QCURVE SMOOTH",
"243 129 OFFCURVE",
"250 141 OFFCURVE",
"236 146 QCURVE SMOOTH",
"178 166 OFFCURVE",
"90 158 OFFCURVE",
"34 122 OFFCURVE",
"14 67 OFFCURVE",
"33 13 OFFCURVE",
"93 -30 OFFCURVE",
"146 -36 QCURVE SMOOTH",
"234 -47 OFFCURVE",
"395 16 OFFCURVE",
"461 88 QCURVE SMOOTH",
"522 155 OFFCURVE",
"601 294 OFFCURVE",
"637 365 QCURVE",
"641 341 OFFCURVE",
"662 250 OFFCURVE",
"697 147 OFFCURVE",
"748 46 OFFCURVE",
"782 10 QCURVE SMOOTH",
"831 -41 OFFCURVE",
"947 -42 OFFCURVE",
"994 9 QCURVE SMOOTH",
"1010 27 OFFCURVE",
"1042 78 OFFCURVE",
"1070 131 OFFCURVE",
"1091 176 OFFCURVE",
"1096 187 QCURVE",
"1096 187 LINE"
);
},
{
closed = 1;
nodes = (
"997 695 OFFCURVE",
"1040 644 OFFCURVE",
"1038 583 OFFCURVE",
"997 518 OFFCURVE",
"928 463 OFFCURVE",
"836 423 OFFCURVE",
"784 416 QCURVE SMOOTH",
"748 411 OFFCURVE",
"687 408 OFFCURVE",
"658 403 QCURVE",
"701 490 OFFCURVE",
"803 646 OFFCURVE",
"850 729 QCURVE",
"877 724 OFFCURVE",
"926 716 OFFCURVE",
"948 710 QCURVE",
"948 710 LINE"
);
}
);
width = 1024;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"923 641 OFFCURVE",
"939 689 OFFCURVE",
"928 735 OFFCURVE",
"894 777 OFFCURVE",
"867 790 QCURVE SMOOTH",
"840 803 OFFCURVE",
"761 815 OFFCURVE",
"673 813 OFFCURVE",
"583 798 OFFCURVE",
"546 785 QCURVE SMOOTH",
"491 765 OFFCURVE",
"408 695 OFFCURVE",
"375 611 OFFCURVE",
"402 523 OFFCURVE",
"458 486 QCURVE SMOOTH",
"486 467 OFFCURVE",
"560 434 OFFCURVE",
"636 402 OFFCURVE",
"706 369 OFFCURVE",
"729 350 QCURVE SMOOTH",
"774 313 OFFCURVE",
"796 217 OFFCURVE",
"761 118 OFFCURVE",
"674 25 OFFCURVE",
"611 -8 QCURVE SMOOTH",
"561 -34 OFFCURVE",
"439 -63 OFFCURVE",
"315 -67 OFFCURVE",
"198 -43 OFFCURVE",
"108 12 OFFCURVE",
"53 100 OFFCURVE",
"54 162 QCURVE SMOOTH",
"55 210 OFFCURVE",
"83 307 OFFCURVE",
"110 349 QCURVE SMOOTH",
"124 371 OFFCURVE",
"159 408 OFFCURVE",
"179 424 QCURVE SMOOTH",
"191 433 OFFCURVE",
"195 442 OFFCURVE",
"188 444 OFFCURVE",
"174 441 OFFCURVE",
"169 439 QCURVE SMOOTH",
"132 422 OFFCURVE",
"68 358 OFFCURVE",
"22 280 OFFCURVE",
"-4 198 OFFCURVE",
"-2 162 QCURVE SMOOTH",
"2 91 OFFCURVE",
"73 -8 OFFCURVE",
"184 -69 OFFCURVE",
"324 -94 OFFCURVE",
"470 -86 OFFCURVE",
"610 -47 OFFCURVE",
"667 -13 QCURVE SMOOTH",
"709 12 OFFCURVE",
"785 76 OFFCURVE",
"841 147 OFFCURVE",
"872 223 OFFCURVE",
"865 299 OFFCURVE",
"817 370 OFFCURVE",
"766 402 QCURVE SMOOTH",
"738 419 OFFCURVE",
"675 450 OFFCURVE",
"612 479 OFFCURVE",
"553 506 OFFCURVE",
"530 520 QCURVE SMOOTH",
"479 551 OFFCURVE",
"450 621 OFFCURVE",
"473 687 OFFCURVE",
"539 742 OFFCURVE",
"584 758 QCURVE SMOOTH",
"664 787 OFFCURVE",
"782 789 OFFCURVE",
"859 759 OFFCURVE",
"898 707 OFFCURVE",
"901 655 OFFCURVE",
"869 614 OFFCURVE",
"838 610 QCURVE SMOOTH",
"826 608 OFFCURVE",
"813 600 OFFCURVE",
"813 592 OFFCURVE",
"823 587 OFFCURVE",
"833 590 QCURVE SMOOTH",
"875 602 OFFCURVE",
"900 622 QCURVE",
"900 622 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
54 3 38 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 54 21 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 901;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1400 614 OFFCURVE",
"1395 631 OFFCURVE",
"1390 631 QCURVE SMOOTH",
"1379 631 OFFCURVE",
"1379 616 QCURVE SMOOTH",
"1379 599 OFFCURVE",
"1342 586 OFFCURVE",
"1283 587 OFFCURVE",
"1210 600 OFFCURVE",
"1137 617 OFFCURVE",
"1071 636 OFFCURVE",
"1050 643 QCURVE",
"1055 648 OFFCURVE",
"1070 664 OFFCURVE",
"1085 677 OFFCURVE",
"1099 686 OFFCURVE",
"1102 683 QCURVE",
"1114 679 OFFCURVE",
"1124 690 OFFCURVE",
"1121 705 OFFCURVE",
"1107 716 OFFCURVE",
"1095 712 QCURVE",
"1096 712 LINE SMOOTH",
"1088 712 OFFCURVE",
"1065 696 OFFCURVE",
"1043 675 OFFCURVE",
"1025 655 OFFCURVE",
"1022 651 QCURVE",
"998 658 OFFCURVE",
"924 684 OFFCURVE",
"836 711 OFFCURVE",
"741 734 OFFCURVE",
"696 738 QCURVE SMOOTH",
"602 746 OFFCURVE",
"464 703 OFFCURVE",
"376 625 OFFCURVE",
"335 525 OFFCURVE",
"343 429 OFFCURVE",
"398 351 OFFCURVE",
"449 333 QCURVE SMOOTH",
"484 321 OFFCURVE",
"558 329 OFFCURVE",
"621 365 OFFCURVE",
"665 425 OFFCURVE",
"670 465 QCURVE",
"670 475 OFFCURVE",
"658 480 OFFCURVE",
"650 473 QCURVE",
"650 471 LINE SMOOTH",
"651 460 OFFCURVE",
"627 412 OFFCURVE",
"577 367 OFFCURVE",
"505 343 OFFCURVE",
"459 358 QCURVE SMOOTH",
"420 370 OFFCURVE",
"386 431 OFFCURVE",
"392 506 OFFCURVE",
"438 587 OFFCURVE",
"518 651 OFFCURVE",
"631 690 OFFCURVE",
"703 687 QCURVE SMOOTH",
"783 683 OFFCURVE",
"927 657 OFFCURVE",
"1006 632 QCURVE",
"995 618 OFFCURVE",
"961 545 OFFCURVE",
"915 447 OFFCURVE",
"862 333 OFFCURVE",
"803 222 OFFCURVE",
"742 125 OFFCURVE",
"712 92 QCURVE SMOOTH",
"683 61 OFFCURVE",
"614 7 OFFCURVE",
"530 -33 OFFCURVE",
"431 -57 OFFCURVE",
"372 -58 QCURVE SMOOTH",
"333 -59 OFFCURVE",
"254 -42 OFFCURVE",
"180 -6 OFFCURVE",
"118 46 OFFCURVE",
"76 116 OFFCURVE",
"60 203 OFFCURVE",
"69 254 QCURVE SMOOTH",
"75 290 OFFCURVE",
"104 336 OFFCURVE",
"137 366 OFFCURVE",
"166 384 OFFCURVE",
"172 392 QCURVE",
"174 408 OFFCURVE",
"145 409 OFFCURVE",
"103 384 OFFCURVE",
"60 335 OFFCURVE",
"49 300 QCURVE SMOOTH",
"24 220 OFFCURVE",
"41 93 OFFCURVE",
"106 -1 OFFCURVE",
"211 -63 OFFCURVE",
"337 -94 OFFCURVE",
"475 -93 OFFCURVE",
"606 -62 OFFCURVE",
"720 -1 OFFCURVE",
"760 44 QCURVE SMOOTH",
"815 107 OFFCURVE",
"881 250 OFFCURVE",
"934 399 OFFCURVE",
"990 550 OFFCURVE",
"1035 622 QCURVE",
"1043 619 OFFCURVE",
"1082 603 OFFCURVE",
"1145 584 OFFCURVE",
"1231 565 OFFCURVE",
"1287 558 QCURVE SMOOTH",
"1335 552 OFFCURVE",
"1400 581 OFFCURVE",
"1400 610 QCURVE",
"1400 610 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 110 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 918;
}
);
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = U;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"977 489 OFFCURVE",
"947 465 OFFCURVE",
"930 436 QCURVE SMOOTH",
"915 408 OFFCURVE",
"877 331 OFFCURVE",
"834 246 OFFCURVE",
"787 160 OFFCURVE",
"762 124 QCURVE SMOOTH",
"721 64 OFFCURVE",
"644 -2 OFFCURVE",
"583 -19 OFFCURVE",
"543 13 OFFCURVE",
"539 52 QCURVE SMOOTH",
"535 88 OFFCURVE",
"554 174 OFFCURVE",
"587 266 OFFCURVE",
"630 361 OFFCURVE",
"673 455 OFFCURVE",
"708 545 OFFCURVE",
"717 584 QCURVE SMOOTH",
"726 625 OFFCURVE",
"730 703 OFFCURVE",
"712 769 OFFCURVE",
"669 821 OFFCURVE",
"632 837 QCURVE SMOOTH",
"565 866 OFFCURVE",
"392 841 OFFCURVE",
"306 793 QCURVE SMOOTH",
"215 743 OFFCURVE",
"91 626 OFFCURVE",
"18 503 OFFCURVE",
"-9 383 OFFCURVE",
"4 278 OFFCURVE",
"51 195 OFFCURVE",
"126 146 OFFCURVE",
"223 139 OFFCURVE",
"279 163 QCURVE SMOOTH",
"334 186 OFFCURVE",
"413 266 OFFCURVE",
"458 355 OFFCURVE",
"468 441 OFFCURVE",
"441 500 OFFCURVE",
"377 520 OFFCURVE",
"326 498 QCURVE SMOOTH",
"323 497 OFFCURVE",
"309 488 OFFCURVE",
"303 480 OFFCURVE",
"311 476 OFFCURVE",
"331 481 QCURVE SMOOTH",
"379 492 OFFCURVE",
"427 463 OFFCURVE",
"439 406 OFFCURVE",
"418 331 OFFCURVE",
"375 258 OFFCURVE",
"314 199 OFFCURVE",
"280 186 QCURVE SMOOTH",
"228 166 OFFCURVE",
"142 176 OFFCURVE",
"79 222 OFFCURVE",
"41 299 OFFCURVE",
"34 394 OFFCURVE",
"60 502 OFFCURVE",
"124 612 OFFCURVE",
"229 716 OFFCURVE",
"304 760 QCURVE SMOOTH",
"347 785 OFFCURVE",
"438 819 OFFCURVE",
"527 833 OFFCURVE",
"606 824 OFFCURVE",
"637 805 QCURVE SMOOTH",
"655 794 OFFCURVE",
"673 751 OFFCURVE",
"676 693 OFFCURVE",
"667 624 OFFCURVE",
"658 588 QCURVE SMOOTH",
"649 552 OFFCURVE",
"612 463 OFFCURVE",
"570 366 OFFCURVE",
"526 266 OFFCURVE",
"493 171 OFFCURVE",
"477 86 OFFCURVE",
"482 52 QCURVE SMOOTH",
"490 4 OFFCURVE",
"547 -42 OFFCURVE",
"628 -34 OFFCURVE",
"727 32 OFFCURVE",
"777 96 QCURVE SMOOTH",
"796 120 OFFCURVE",
"827 167 OFFCURVE",
"838 186 QCURVE",
"832 154 OFFCURVE",
"822 68 OFFCURVE",
"830 -12 OFFCURVE",
"862 -72 OFFCURVE",
"897 -78 QCURVE SMOOTH",
"909 -80 OFFCURVE",
"927 -72 OFFCURVE",
"933 -62 OFFCURVE",
"922 -54 OFFCURVE",
"904 -55 QCURVE SMOOTH",
"883 -56 OFFCURVE",
"866 -16 OFFCURVE",
"865 50 OFFCURVE",
"879 131 OFFCURVE",
"890 172 QCURVE SMOOTH",
"904 226 OFFCURVE",
"940 313 OFFCURVE",
"950 334 QCURVE SMOOTH",
"960 357 OFFCURVE",
"988 404 OFFCURVE",
"1005 446 OFFCURVE",
"1004 480 OFFCURVE",
"986 489 QCURVE",
"986 489 LINE"
);
}
);
width = 942;
}
);
leftKerningGroup = U;
note = U;
unicode = 0055;
},
{
glyphname = V;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1053 444 OFFCURVE",
"1047 527 OFFCURVE",
"1016 583 OFFCURVE",
"970 614 OFFCURVE",
"952 619 QCURVE SMOOTH",
"937 623 OFFCURVE",
"922 617 OFFCURVE",
"922 607 OFFCURVE",
"935 595 OFFCURVE",
"948 592 QCURVE SMOOTH",
"957 590 OFFCURVE",
"971 589 OFFCURVE",
"983 580 OFFCURVE",
"993 560 OFFCURVE",
"996 541 QCURVE SMOOTH",
"1003 495 OFFCURVE",
"980 391 OFFCURVE",
"931 284 OFFCURVE",
"860 179 OFFCURVE",
"820 132 QCURVE SMOOTH",
"814 124 OFFCURVE",
"780 88 OFFCURVE",
"734 43 OFFCURVE",
"681 -5 OFFCURVE",
"629 -43 OFFCURVE",
"582 -66 OFFCURVE",
"550 -61 OFFCURVE",
"537 -22 OFFCURVE",
"544 20 QCURVE SMOOTH",
"550 54 OFFCURVE",
"573 144 OFFCURVE",
"606 245 OFFCURVE",
"648 349 OFFCURVE",
"672 398 QCURVE SMOOTH",
"701 457 OFFCURVE",
"741 587 OFFCURVE",
"745 705 OFFCURVE",
"702 800 OFFCURVE",
"647 824 QCURVE SMOOTH",
"603 843 OFFCURVE",
"491 846 OFFCURVE",
"370 816 OFFCURVE",
"247 756 OFFCURVE",
"138 672 OFFCURVE",
"49 566 OFFCURVE",
"22 504 QCURVE SMOOTH",
"-13 424 OFFCURVE",
"-5 289 OFFCURVE",
"54 190 OFFCURVE",
"148 135 OFFCURVE",
"200 135 QCURVE SMOOTH",
"247 135 OFFCURVE",
"350 180 OFFCURVE",
"435 254 OFFCURVE",
"491 346 OFFCURVE",
"491 394 QCURVE SMOOTH",
"491 422 OFFCURVE",
"471 470 OFFCURVE",
"435 497 OFFCURVE",
"383 501 OFFCURVE",
"351 486 QCURVE SMOOTH",
"344 483 OFFCURVE",
"335 475 OFFCURVE",
"335 470 OFFCURVE",
"345 469 OFFCURVE",
"356 472 QCURVE SMOOTH",
"381 479 OFFCURVE",
"416 472 OFFCURVE",
"437 448 OFFCURVE",
"447 412 OFFCURVE",
"447 392 QCURVE SMOOTH",
"447 351 OFFCURVE",
"406 268 OFFCURVE",
"341 202 OFFCURVE",
"258 161 OFFCURVE",
"216 161 QCURVE SMOOTH",
"174 161 OFFCURVE",
"98 199 OFFCURVE",
"52 277 OFFCURVE",
"46 394 OFFCURVE",
"75 472 QCURVE SMOOTH",
"95 528 OFFCURVE",
"174 633 OFFCURVE",
"275 721 OFFCURVE",
"391 787 OFFCURVE",
"505 821 OFFCURVE",
"610 818 OFFCURVE",
"651 793 QCURVE SMOOTH",
"670 781 OFFCURVE",
"686 732 OFFCURVE",
"685 667 OFFCURVE",
"670 592 OFFCURVE",
"647 515 OFFCURVE",
"619 441 OFFCURVE",
"606 410 QCURVE SMOOTH",
"404 -71 OFFCURVE",
"530 -94 QCURVE SMOOTH",
"562 -100 OFFCURVE",
"648 -68 OFFCURVE",
"744 -3 OFFCURVE",
"843 91 OFFCURVE",
"933 202 OFFCURVE",
"1008 326 OFFCURVE",
"1032 389 QCURVE",
"1032 389 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
48 3 33 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 48 22 48 38 48 54 48 70 48 86 48 102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 48 21 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
28 2 53 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 975;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1382 316 OFFCURVE",
"1380 463 OFFCURVE",
"1330 565 OFFCURVE",
"1245 616 OFFCURVE",
"1197 612 QCURVE",
"1180 615 OFFCURVE",
"1146 602 OFFCURVE",
"1132 587 OFFCURVE",
"1149 579 OFFCURVE",
"1183 588 QCURVE",
"1243 596 OFFCURVE",
"1312 543 OFFCURVE",
"1336 443 OFFCURVE",
"1315 308 OFFCURVE",
"1284 234 QCURVE SMOOTH",
"1263 184 OFFCURVE",
"1181 83 OFFCURVE",
"1083 3 OFFCURVE",
"983 -48 OFFCURVE",
"905 -47 OFFCURVE",
"863 14 OFFCURVE",
"872 86 QCURVE SMOOTH",
"876 117 OFFCURVE",
"901 191 OFFCURVE",
"932 264 OFFCURVE",
"962 334 OFFCURVE",
"972 362 QCURVE SMOOTH",
"982 393 OFFCURVE",
"979 432 OFFCURVE",
"959 443 OFFCURVE",
"925 423 OFFCURVE",
"906 396 QCURVE SMOOTH",
"884 366 OFFCURVE",
"833 281 OFFCURVE",
"776 186 OFFCURVE",
"716 88 OFFCURVE",
"653 1 OFFCURVE",
"590 -68 OFFCURVE",
"560 -86 QCURVE SMOOTH",
"545 -95 OFFCURVE",
"521 -99 OFFCURVE",
"506 -87 OFFCURVE",
"503 -56 OFFCURVE",
"508 -30 QCURVE SMOOTH",
"515 6 OFFCURVE",
"545 105 OFFCURVE",
"585 215 OFFCURVE",
"630 328 OFFCURVE",
"652 378 QCURVE SMOOTH",
"679 438 OFFCURVE",
"717 563 OFFCURVE",
"720 676 OFFCURVE",
"677 765 OFFCURVE",
"623 789 QCURVE SMOOTH",
"579 808 OFFCURVE",
"469 810 OFFCURVE",
"352 779 OFFCURVE",
"234 719 OFFCURVE",
"129 634 OFFCURVE",
"43 527 OFFCURVE",
"16 465 QCURVE SMOOTH",
"-12 401 OFFCURVE",
"-20 290 OFFCURVE",
"8 201 OFFCURVE",
"64 137 OFFCURVE",
"136 102 OFFCURVE",
"218 98 OFFCURVE",
"257 114 QCURVE SMOOTH",
"318 140 OFFCURVE",
"404 220 OFFCURVE",
"452 306 OFFCURVE",
"462 390 OFFCURVE",
"433 448 OFFCURVE",
"363 471 OFFCURVE",
"308 454 QCURVE SMOOTH",
"291 449 OFFCURVE",
"287 434 OFFCURVE",
"310 438 QCURVE SMOOTH",
"354 445 OFFCURVE",
"400 414 OFFCURVE",
"412 355 OFFCURVE",
"394 281 OFFCURVE",
"353 209 OFFCURVE",
"294 151 OFFCURVE",
"259 138 QCURVE SMOOTH",
"209 120 OFFCURVE",
"112 135 OFFCURVE",
"49 206 OFFCURVE",
"37 334 OFFCURVE",
"72 428 QCURVE SMOOTH",
"93 484 OFFCURVE",
"168 590 OFFCURVE",
"265 680 OFFCURVE",
"374 748 OFFCURVE",
"484 784 OFFCURVE",
"586 782 OFFCURVE",
"627 757 QCURVE SMOOTH",
"646 745 OFFCURVE",
"662 696 OFFCURVE",
"660 631 OFFCURVE",
"644 556 OFFCURVE",
"620 479 OFFCURVE",
"593 405 OFFCURVE",
"580 374 QCURVE SMOOTH",
"523 239 OFFCURVE",
"455 43 OFFCURVE",
"450 -20 QCURVE SMOOTH",
"448 -51 OFFCURVE",
"458 -92 OFFCURVE",
"478 -116 OFFCURVE",
"505 -125 OFFCURVE",
"520 -124 QCURVE SMOOTH",
"547 -123 OFFCURVE",
"609 -86 OFFCURVE",
"672 -29 OFFCURVE",
"733 43 OFFCURVE",
"786 114 OFFCURVE",
"830 180 OFFCURVE",
"844 203 QCURVE",
"835 173 OFFCURVE",
"822 97 OFFCURVE",
"824 60 QCURVE SMOOTH",
"829 -6 OFFCURVE",
"896 -69 OFFCURVE",
"995 -75 OFFCURVE",
"1113 -32 OFFCURVE",
"1226 49 OFFCURVE",
"1320 160 OFFCURVE",
"1346 225 QCURVE",
"1346 225 LINE"
);
}
);
width = 1344;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1110 799 OFFCURVE",
"1123 829 OFFCURVE",
"1100 830 OFFCURVE",
"1052 802 OFFCURVE",
"1024 774 QCURVE SMOOTH",
"988 739 OFFCURVE",
"893 667 OFFCURVE",
"778 588 OFFCURVE",
"644 499 OFFCURVE",
"569 447 QCURVE",
"569 499 OFFCURVE",
"565 597 OFFCURVE",
"555 676 OFFCURVE",
"538 733 OFFCURVE",
"525 745 QCURVE SMOOTH",
"493 775 OFFCURVE",
"408 781 OFFCURVE",
"317 753 OFFCURVE",
"229 703 OFFCURVE",
"158 653 OFFCURVE",
"112 611 OFFCURVE",
"108 606 QCURVE SMOOTH",
"100 595 OFFCURVE",
"102 581 OFFCURVE",
"111 574 OFFCURVE",
"122 572 OFFCURVE",
"124 574 QCURVE SMOOTH",
"142 592 OFFCURVE",
"179 630 OFFCURVE",
"217 665 OFFCURVE",
"257 695 OFFCURVE",
"278 705 QCURVE SMOOTH",
"311 720 OFFCURVE",
"376 734 OFFCURVE",
"433 723 OFFCURVE",
"474 684 OFFCURVE",
"483 646 QCURVE SMOOTH",
"494 599 OFFCURVE",
"498 467 OFFCURVE",
"497 395 QCURVE",
"415 336 OFFCURVE",
"251 207 OFFCURVE",
"97 66 OFFCURVE",
"-44 -87 OFFCURVE",
"-103 -169 QCURVE SMOOTH",
"-120 -193 OFFCURVE",
"-122 -222 OFFCURVE",
"-102 -227 OFFCURVE",
"-67 -201 OFFCURVE",
"-47 -169 QCURVE SMOOTH",
"1 -93 OFFCURVE",
"125 47 OFFCURVE",
"266 178 OFFCURVE",
"419 300 OFFCURVE",
"498 357 QCURVE",
"497 300 OFFCURVE",
"495 193 OFFCURVE",
"495 103 OFFCURVE",
"498 35 OFFCURVE",
"502 17 QCURVE SMOOTH",
"516 -49 OFFCURVE",
"596 -99 OFFCURVE",
"702 -61 OFFCURVE",
"822 69 OFFCURVE",
"877 184 QCURVE SMOOTH",
"881 193 OFFCURVE",
"880 202 OFFCURVE",
"872 202 OFFCURVE",
"863 195 OFFCURVE",
"860 189 QCURVE SMOOTH",
"828 116 OFFCURVE",
"747 10 OFFCURVE",
"667 -34 OFFCURVE",
"600 -4 OFFCURVE",
"583 60 QCURVE SMOOTH",
"577 83 OFFCURVE",
"571 159 OFFCURVE",
"568 252 OFFCURVE",
"569 357 OFFCURVE",
"570 409 QCURVE",
"658 472 OFFCURVE",
"818 579 OFFCURVE",
"951 669 OFFCURVE",
"1051 741 OFFCURVE",
"1079 768 QCURVE",
"1079 768 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
75 3 30 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 30 26 30 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 807;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1114 -9 OFFCURVE",
"1106 -17 OFFCURVE",
"1108 -28 QCURVE",
"1108 -42 OFFCURVE",
"1100 -62 OFFCURVE",
"1084 -78 OFFCURVE",
"1059 -93 OFFCURVE",
"1043 -102 QCURVE SMOOTH",
"1029 -110 OFFCURVE",
"981 -120 OFFCURVE",
"921 -126 OFFCURVE",
"851 -128 OFFCURVE",
"814 -128 QCURVE",
"842 -79 OFFCURVE",
"894 50 OFFCURVE",
"941 189 OFFCURVE",
"979 327 OFFCURVE",
"992 385 QCURVE SMOOTH",
"1000 422 OFFCURVE",
"1001 464 OFFCURVE",
"990 482 OFFCURVE",
"974 481 OFFCURVE",
"957 471 OFFCURVE",
"944 455 OFFCURVE",
"943 449 QCURVE",
"931 410 OFFCURVE",
"883 287 OFFCURVE",
"816 157 OFFCURVE",
"732 40 OFFCURVE",
"686 7 QCURVE SMOOTH",
"657 -14 OFFCURVE",
"597 -31 OFFCURVE",
"553 -16 OFFCURVE",
"532 34 OFFCURVE",
"542 79 QCURVE SMOOTH",
"549 113 OFFCURVE",
"581 196 OFFCURVE",
"623 286 OFFCURVE",
"673 378 OFFCURVE",
"698 421 QCURVE SMOOTH",
"732 478 OFFCURVE",
"777 599 OFFCURVE",
"783 708 OFFCURVE",
"739 797 OFFCURVE",
"684 822 QCURVE SMOOTH",
"640 842 OFFCURVE",
"530 842 OFFCURVE",
"410 810 OFFCURVE",
"289 748 OFFCURVE",
"179 662 OFFCURVE",
"87 556 OFFCURVE",
"58 495 QCURVE SMOOTH",
"27 432 OFFCURVE",
"15 323 OFFCURVE",
"39 235 OFFCURVE",
"92 171 OFFCURVE",
"163 135 OFFCURVE",
"244 131 OFFCURVE",
"284 148 QCURVE SMOOTH",
"340 171 OFFCURVE",
"425 247 OFFCURVE",
"478 332 OFFCURVE",
"498 415 OFFCURVE",
"479 475 OFFCURVE",
"419 501 OFFCURVE",
"366 487 QCURVE SMOOTH",
"359 485 OFFCURVE",
"349 479 OFFCURVE",
"346 473 OFFCURVE",
"355 470 OFFCURVE",
"368 473 QCURVE SMOOTH",
"411 481 OFFCURVE",
"453 449 OFFCURVE",
"458 390 OFFCURVE",
"433 315 OFFCURVE",
"386 242 OFFCURVE",
"323 183 OFFCURVE",
"288 171 QCURVE SMOOTH",
"255 159 OFFCURVE",
"190 160 OFFCURVE",
"133 185 OFFCURVE",
"90 234 OFFCURVE",
"73 309 OFFCURVE",
"84 407 OFFCURVE",
"110 469 QCURVE SMOOTH",
"133 524 OFFCURVE",
"215 629 OFFCURVE",
"316 718 OFFCURVE",
"431 784 OFFCURVE",
"544 819 OFFCURVE",
"648 816 OFFCURVE",
"688 790 QCURVE SMOOTH",
"717 772 OFFCURVE",
"727 688 OFFCURVE",
"703 582 OFFCURVE",
"651 462 OFFCURVE",
"618 408 QCURVE SMOOTH",
"597 374 OFFCURVE",
"551 293 OFFCURVE",
"509 207 OFFCURVE",
"477 122 OFFCURVE",
"472 85 QCURVE SMOOTH",
"464 28 OFFCURVE",
"505 -37 OFFCURVE",
"575 -58 OFFCURVE",
"662 -40 OFFCURVE",
"700 -14 QCURVE SMOOTH",
"735 10 OFFCURVE",
"796 77 OFFCURVE",
"848 152 OFFCURVE",
"889 227 OFFCURVE",
"903 258 QCURVE",
"876 157 OFFCURVE",
"805 -32 OFFCURVE",
"766 -129 QCURVE",
"712 -129 OFFCURVE",
"601 -133 OFFCURVE",
"492 -147 OFFCURVE",
"385 -172 OFFCURVE",
"334 -193 QCURVE SMOOTH",
"271 -219 OFFCURVE",
"214 -278 OFFCURVE",
"213 -334 OFFCURVE",
"260 -378 OFFCURVE",
"343 -400 OFFCURVE",
"457 -392 OFFCURVE",
"522 -367 QCURVE SMOOTH",
"599 -338 OFFCURVE",
"748 -230 OFFCURVE",
"799 -154 QCURVE",
"837 -154 OFFCURVE",
"910 -152 OFFCURVE",
"974 -148 OFFCURVE",
"1028 -139 OFFCURVE",
"1048 -131 QCURVE SMOOTH",
"1094 -111 OFFCURVE",
"1126 -49 OFFCURVE",
"1120 -29 QCURVE",
"1120 -29 LINE"
);
},
{
closed = 1;
nodes = (
"707 -226 OFFCURVE",
"574 -321 OFFCURVE",
"507 -346 QCURVE SMOOTH",
"467 -361 OFFCURVE",
"386 -372 OFFCURVE",
"319 -366 OFFCURVE",
"275 -345 OFFCURVE",
"267 -311 OFFCURVE",
"305 -265 OFFCURVE",
"354 -237 QCURVE SMOOTH",
"399 -211 OFFCURVE",
"496 -179 OFFCURVE",
"598 -161 OFFCURVE",
"701 -154 OFFCURVE",
"752 -154 QCURVE",
"752 -154 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
23 2 138 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
138 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
125 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
125 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 959;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1071 682 OFFCURVE",
"1079 724 OFFCURVE",
"1057 753 OFFCURVE",
"1009 763 OFFCURVE",
"978 752 QCURVE SMOOTH",
"955 744 OFFCURVE",
"898 709 OFFCURVE",
"867 685 QCURVE",
"825 698 OFFCURVE",
"732 729 OFFCURVE",
"634 754 OFFCURVE",
"536 769 OFFCURVE",
"490 765 QCURVE SMOOTH",
"403 758 OFFCURVE",
"305 701 OFFCURVE",
"267 628 OFFCURVE",
"277 555 OFFCURVE",
"298 532 QCURVE SMOOTH",
"309 519 OFFCURVE",
"332 504 OFFCURVE",
"338 502 QCURVE SMOOTH",
"342 501 OFFCURVE",
"356 500 OFFCURVE",
"365 503 OFFCURVE",
"363 512 OFFCURVE",
"350 521 QCURVE SMOOTH",
"311 547 OFFCURVE",
"302 602 OFFCURVE",
"336 652 OFFCURVE",
"398 690 OFFCURVE",
"430 698 QCURVE SMOOTH",
"475 710 OFFCURVE",
"583 713 OFFCURVE",
"696 703 OFFCURVE",
"804 682 OFFCURVE",
"848 670 QCURVE",
"820 647 OFFCURVE",
"762 594 OFFCURVE",
"707 539 OFFCURVE",
"656 485 OFFCURVE",
"635 460 QCURVE SMOOTH",
"620 442 OFFCURVE",
"576 389 OFFCURVE",
"523 326 OFFCURVE",
"465 258 OFFCURVE",
"437 225 QCURVE SMOOTH",
"371 148 OFFCURVE",
"297 61 QCURVE",
"245 94 OFFCURVE",
"177 127 OFFCURVE",
"154 133 QCURVE SMOOTH",
"112 144 OFFCURVE",
"54 131 OFFCURVE",
"19 98 OFFCURVE",
"8 52 OFFCURVE",
"22 7 OFFCURVE",
"61 -30 OFFCURVE",
"92 -37 QCURVE SMOOTH",
"127 -45 OFFCURVE",
"226 -15 OFFCURVE",
"292 32 QCURVE",
"385 -22 OFFCURVE",
"472 -64 QCURVE SMOOTH",
"509 -82 OFFCURVE",
"589 -116 OFFCURVE",
"665 -143 OFFCURVE",
"735 -159 OFFCURVE",
"763 -158 QCURVE SMOOTH",
"836 -157 OFFCURVE",
"927 -122 OFFCURVE",
"978 -75 OFFCURVE",
"996 -27 OFFCURVE",
"998 -13 QCURVE SMOOTH",
"1000 8 OFFCURVE",
"995 27 OFFCURVE",
"986 28 OFFCURVE",
"977 14 OFFCURVE",
"975 2 QCURVE SMOOTH",
"969 -41 OFFCURVE",
"902 -86 OFFCURVE",
"816 -103 OFFCURVE",
"726 -100 OFFCURVE",
"698 -94 QCURVE SMOOTH",
"678 -90 OFFCURVE",
"624 -74 OFFCURVE",
"562 -53 OFFCURVE",
"498 -28 OFFCURVE",
"467 -16 QCURVE SMOOTH",
"395 12 OFFCURVE",
"317 46 QCURVE",
"344 68 OFFCURVE",
"417 128 OFFCURVE",
"499 203 OFFCURVE",
"587 293 OFFCURVE",
"630 346 QCURVE SMOOTH",
"658 381 OFFCURVE",
"724 469 OFFCURVE",
"792 558 OFFCURVE",
"857 636 OFFCURVE",
"884 661 QCURVE",
"938 647 OFFCURVE",
"1023 641 OFFCURVE",
"1046 661 QCURVE",
"1046 661 LINE"
);
},
{
closed = 1;
nodes = (
"1008 657 OFFCURVE",
"942 664 OFFCURVE",
"899 676 QCURVE",
"934 705 OFFCURVE",
"994 741 OFFCURVE",
"1017 741 QCURVE SMOOTH",
"1030 741 OFFCURVE",
"1045 724 OFFCURVE",
"1048 700 OFFCURVE",
"1039 676 OFFCURVE",
"1028 669 QCURVE",
"1028 669 LINE"
);
},
{
closed = 1;
nodes = (
"267 33 OFFCURVE",
"238 16 OFFCURVE",
"204 2 OFFCURVE",
"167 -7 OFFCURVE",
"150 -8 QCURVE SMOOTH",
"103 -10 OFFCURVE",
"57 29 OFFCURVE",
"56 74 OFFCURVE",
"101 109 OFFCURVE",
"146 104 QCURVE SMOOTH",
"187 99 OFFCURVE",
"248 65 QCURVE",
"252 62 OFFCURVE",
"262 55 OFFCURVE",
"267 51 QCURVE SMOOTH",
"272 47 OFFCURVE",
"278 42 QCURVE",
"278 42 LINE"
);
}
);
width = 677;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = Z.stroke;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"769 333 OFFCURVE",
"781 341 OFFCURVE",
"778 350 OFFCURVE",
"760 359 OFFCURVE",
"747 359 QCURVE SMOOTH",
"718 359 OFFCURVE",
"665 360 OFFCURVE",
"642 361 QCURVE",
"670 396 OFFCURVE",
"733 481 OFFCURVE",
"797 564 OFFCURVE",
"858 637 OFFCURVE",
"884 661 QCURVE",
"938 647 OFFCURVE",
"1023 641 OFFCURVE",
"1046 661 QCURVE SMOOTH",
"1071 682 OFFCURVE",
"1079 724 OFFCURVE",
"1057 753 OFFCURVE",
"1009 763 OFFCURVE",
"978 752 QCURVE SMOOTH",
"955 744 OFFCURVE",
"898 709 OFFCURVE",
"867 685 QCURVE",
"825 698 OFFCURVE",
"732 729 OFFCURVE",
"634 754 OFFCURVE",
"536 769 OFFCURVE",
"490 765 QCURVE SMOOTH",
"403 758 OFFCURVE",
"305 701 OFFCURVE",
"267 628 OFFCURVE",
"277 555 OFFCURVE",
"298 532 QCURVE SMOOTH",
"309 519 OFFCURVE",
"332 504 OFFCURVE",
"338 502 QCURVE SMOOTH",
"342 501 OFFCURVE",
"356 500 OFFCURVE",
"365 503 OFFCURVE",
"363 512 OFFCURVE",
"350 521 QCURVE SMOOTH",
"311 547 OFFCURVE",
"302 602 OFFCURVE",
"336 652 OFFCURVE",
"398 690 OFFCURVE",
"430 698 QCURVE SMOOTH",
"475 710 OFFCURVE",
"583 713 OFFCURVE",
"696 703 OFFCURVE",
"804 682 OFFCURVE",
"848 670 QCURVE",
"820 647 OFFCURVE",
"762 594 OFFCURVE",
"707 539 OFFCURVE",
"656 485 OFFCURVE",
"635 460 QCURVE SMOOTH",
"553 362 LINE",
"503 363 OFFCURVE",
"430 363 OFFCURVE",
"403 363 QCURVE SMOOTH",
"386 363 OFFCURVE",
"375 348 OFFCURVE",
"380 330 OFFCURVE",
"395 315 OFFCURVE",
"403 316 QCURVE SMOOTH",
"430 318 OFFCURVE",
"490 323 OFFCURVE",
"522 325 QCURVE",
"484 279 OFFCURVE",
"403 186 OFFCURVE",
"371 148 QCURVE SMOOTH",
"332 103 OFFCURVE",
"297 61 QCURVE",
"245 94 OFFCURVE",
"177 127 OFFCURVE",
"154 133 QCURVE SMOOTH",
"112 144 OFFCURVE",
"54 131 OFFCURVE",
"19 98 OFFCURVE",
"8 52 OFFCURVE",
"22 7 OFFCURVE",
"61 -30 OFFCURVE",
"92 -37 QCURVE SMOOTH",
"127 -45 OFFCURVE",
"226 -15 OFFCURVE",
"292 32 QCURVE",
"385 -22 OFFCURVE",
"472 -64 QCURVE SMOOTH",
"509 -82 OFFCURVE",
"589 -116 OFFCURVE",
"665 -143 OFFCURVE",
"735 -159 OFFCURVE",
"763 -158 QCURVE SMOOTH",
"836 -157 OFFCURVE",
"927 -122 OFFCURVE",
"978 -75 OFFCURVE",
"996 -27 OFFCURVE",
"998 -13 QCURVE SMOOTH",
"1000 8 OFFCURVE",
"995 27 OFFCURVE",
"986 28 OFFCURVE",
"977 14 OFFCURVE",
"975 2 QCURVE SMOOTH",
"969 -41 OFFCURVE",
"902 -86 OFFCURVE",
"816 -103 OFFCURVE",
"726 -100 OFFCURVE",
"698 -94 QCURVE SMOOTH",
"678 -90 OFFCURVE",
"624 -74 OFFCURVE",
"562 -53 OFFCURVE",
"498 -28 OFFCURVE",
"467 -16 QCURVE SMOOTH",
"395 12 OFFCURVE",
"317 46 QCURVE",
"343 67 OFFCURVE",
"412 124 OFFCURVE",
"491 195 OFFCURVE",
"575 280 OFFCURVE",
"617 330 QCURVE",
"680 333 OFFCURVE",
"753 333 QCURVE",
"753 333 LINE"
);
},
{
closed = 1;
nodes = (
"267 33 OFFCURVE",
"238 16 OFFCURVE",
"204 2 OFFCURVE",
"167 -7 OFFCURVE",
"150 -8 QCURVE SMOOTH",
"103 -10 OFFCURVE",
"57 29 OFFCURVE",
"56 74 OFFCURVE",
"101 109 OFFCURVE",
"146 104 QCURVE SMOOTH",
"187 99 OFFCURVE",
"248 65 QCURVE",
"252 62 OFFCURVE",
"262 55 OFFCURVE",
"267 51 QCURVE SMOOTH",
"272 47 OFFCURVE",
"278 42 QCURVE",
"278 42 LINE"
);
},
{
closed = 1;
nodes = (
"1008 657 OFFCURVE",
"942 664 OFFCURVE",
"899 676 QCURVE",
"934 705 OFFCURVE",
"994 741 OFFCURVE",
"1017 741 QCURVE SMOOTH",
"1030 741 OFFCURVE",
"1045 724 OFFCURVE",
"1048 700 OFFCURVE",
"1039 676 OFFCURVE",
"1028 669 QCURVE",
"1028 669 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
118 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
118 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
118 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
118 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
115 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 677;
}
);
note = Z.stroke;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"583 695 OFFCURVE",
"561 710 OFFCURVE",
"532 717 OFFCURVE",
"501 718 OFFCURVE",
"492 718 QCURVE SMOOTH",
"472 718 LINE SMOOTH",
"448 718 OFFCURVE",
"411 707 OFFCURVE",
"381 687 OFFCURVE",
"354 659 OFFCURVE",
"339 642 QCURVE SMOOTH",
"311 610 OFFCURVE",
"246 517 OFFCURVE",
"179 409 OFFCURVE",
"116 291 OFFCURVE",
"67 176 OFFCURVE",
"38 70 OFFCURVE",
"38 28 QCURVE SMOOTH",
"38 11 OFFCURVE",
"66 -7 OFFCURVE",
"104 -16 OFFCURVE",
"143 -17 OFFCURVE",
"154 -17 QCURVE SMOOTH",
"163 -17 OFFCURVE",
"204 -17 OFFCURVE",
"246 -13 OFFCURVE",
"278 -4 OFFCURVE",
"278 6 QCURVE SMOOTH",
"278 13 OFFCURVE",
"269 21 OFFCURVE",
"255 26 OFFCURVE",
"241 28 OFFCURVE",
"236 28 QCURVE SMOOTH",
"218 28 OFFCURVE",
"182 24 OFFCURVE",
"164 24 QCURVE SMOOTH",
"153 24 OFFCURVE",
"129 27 OFFCURVE",
"109 36 OFFCURVE",
"97 53 OFFCURVE",
"97 68 QCURVE SMOOTH",
"97 97 OFFCURVE",
"133 200 OFFCURVE",
"192 324 OFFCURVE",
"266 455 OFFCURVE",
"342 568 OFFCURVE",
"412 650 OFFCURVE",
"437 663 QCURVE SMOOTH",
"445 668 OFFCURVE",
"475 668 OFFCURVE",
"484 668 QCURVE SMOOTH",
"503 668 OFFCURVE",
"539 664 OFFCURVE",
"558 664 QCURVE SMOOTH",
"569 664 OFFCURVE",
"583 668 OFFCURVE",
"583 682 QCURVE",
"583 682 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 3 39 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 16 21 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
21 2 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
52 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 585;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2020-11-10 21:31:26 +0000";
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"162 809 LINE",
"154 819 OFFCURVE",
"130 825 OFFCURVE",
"110 821 OFFCURVE",
"103 807 OFFCURVE",
"112 797 QCURVE SMOOTH",
"143 761 OFFCURVE",
"227 659 OFFCURVE",
"323 540 OFFCURVE",
"428 409 OFFCURVE",
"533 281 OFFCURVE",
"634 161 OFFCURVE",
"722 62 OFFCURVE",
"793 -9 OFFCURVE",
"816 -24 QCURVE SMOOTH",
"836 -37 OFFCURVE",
"848 -21 OFFCURVE",
"833 -8 QCURVE SMOOTH",
"808 14 OFFCURVE",
"728 104 OFFCURVE",
"625 227 OFFCURVE",
"502 379 OFFCURVE",
"370 546 OFFCURVE",
"231 722 OFFCURVE",
"162 809 QCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
16 2 9 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 867;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"548 686 OFFCURVE",
"538 705 OFFCURVE",
"521 714 OFFCURVE",
"498 716 OFFCURVE",
"485 716 QCURVE SMOOTH",
"470 716 OFFCURVE",
"424 715 OFFCURVE",
"379 706 OFFCURVE",
"344 686 OFFCURVE",
"339 667 QCURVE",
"342 665 LINE",
"370 665 OFFCURVE",
"425 669 OFFCURVE",
"453 669 QCURVE SMOOTH",
"461 669 OFFCURVE",
"478 668 OFFCURVE",
"486 665 QCURVE",
"489 650 OFFCURVE",
"489 635 QCURVE SMOOTH",
"489 598 OFFCURVE",
"467 503 OFFCURVE",
"430 397 OFFCURVE",
"382 287 OFFCURVE",
"329 188 OFFCURVE",
"275 104 OFFCURVE",
"251 77 QCURVE SMOOTH",
"231 55 OFFCURVE",
"183 34 OFFCURVE",
"133 27 OFFCURVE",
"86 26 OFFCURVE",
"47 21 OFFCURVE",
"20 6 OFFCURVE",
"17 -12 QCURVE",
"23 -15 OFFCURVE",
"42 -17 OFFCURVE",
"63 -17 OFFCURVE",
"84 -17 OFFCURVE",
"92 -17 QCURVE SMOOTH",
"114 -17 OFFCURVE",
"165 -15 OFFCURVE",
"214 -6 OFFCURVE",
"258 12 OFFCURVE",
"275 29 QCURVE SMOOTH",
"309 63 OFFCURVE",
"376 158 OFFCURVE",
"437 268 OFFCURVE",
"488 389 OFFCURVE",
"526 508 OFFCURVE",
"548 622 OFFCURVE",
"548 670 QCURVE",
"548 670 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
31 3 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 31 26 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
45 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 556;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"403 391 LINE",
"398 399 LINE",
"367 425 OFFCURVE",
"311 481 OFFCURVE",
"288 513 QCURVE",
"282 516 LINE",
"276 515 OFFCURVE",
"248 499 OFFCURVE",
"212 475 OFFCURVE",
"173 446 OFFCURVE",
"141 419 OFFCURVE",
"119 397 OFFCURVE",
"118 393 QCURVE",
"124 386 LINE",
"131 387 OFFCURVE",
"169 411 OFFCURVE",
"213 440 OFFCURVE",
"252 468 OFFCURVE",
"260 474 QCURVE",
"267 464 OFFCURVE",
"301 433 OFFCURVE",
"340 403 OFFCURVE",
"379 382 OFFCURVE",
"391 382 QCURVE SMOOTH",
"395 382 OFFCURVE",
"403 386 OFFCURVE",
"403 391 QCURVE",
"403 391 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 370;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"793 -53 LINE",
"792 -42 OFFCURVE",
"776 -25 OFFCURVE",
"765 -25 QCURVE SMOOTH",
"25 -25 LINE SMOOTH",
"17 -25 OFFCURVE",
"8 -36 OFFCURVE",
"8 -44 QCURVE SMOOTH",
"8 -51 OFFCURVE",
"16 -73 OFFCURVE",
"25 -73 QCURVE SMOOTH",
"74 -73 OFFCURVE",
"170 -68 OFFCURVE",
"219 -67 QCURVE SMOOTH",
"362 -64 OFFCURVE",
"643 -60 OFFCURVE",
"786 -60 QCURVE",
"786 -60 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
13 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 806;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"193 410 OFFCURVE",
"171 430 OFFCURVE",
"138 458 OFFCURVE",
"98 489 OFFCURVE",
"61 516 OFFCURVE",
"33 534 OFFCURVE",
"28 534 QCURVE SMOOTH",
"20 534 OFFCURVE",
"9 522 OFFCURVE",
"9 513 QCURVE SMOOTH",
"9 496 OFFCURVE",
"32 475 OFFCURVE",
"46 468 QCURVE SMOOTH",
"53 465 OFFCURVE",
"95 442 OFFCURVE",
"141 418 OFFCURVE",
"180 399 OFFCURVE",
"183 399 QCURVE SMOOTH",
"193 399 OFFCURVE",
"193 408 QCURVE",
"193 408 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 211;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"428 199 OFFCURVE",
"414 205 OFFCURVE",
"407 192 QCURVE SMOOTH",
"399 176 OFFCURVE",
"369 119 OFFCURVE",
"332 63 OFFCURVE",
"294 23 OFFCURVE",
"278 24 QCURVE SMOOTH",
"256 24 OFFCURVE",
"268 84 QCURVE SMOOTH",
"273 107 OFFCURVE",
"297 165 OFFCURVE",
"326 220 OFFCURVE",
"353 263 OFFCURVE",
"361 271 QCURVE",
"350 269 OFFCURVE",
"329 274 OFFCURVE",
"319 275 QCURVE SMOOTH",
"295 277 OFFCURVE",
"268 243 OFFCURVE",
"251 211 QCURVE SMOOTH",
"231 174 OFFCURVE",
"188 103 OFFCURVE",
"162 71 QCURVE SMOOTH",
"144 50 OFFCURVE",
"108 27 OFFCURVE",
"81 27 OFFCURVE",
"66 51 OFFCURVE",
"70 77 QCURVE SMOOTH",
"72 91 OFFCURVE",
"83 122 OFFCURVE",
"96 151 OFFCURVE",
"108 173 OFFCURVE",
"111 178 QCURVE SMOOTH",
"138 223 OFFCURVE",
"210 302 OFFCURVE",
"244 321 QCURVE SMOOTH",
"272 336 OFFCURVE",
"321 324 OFFCURVE",
"329 296 QCURVE",
"342 294 OFFCURVE",
"351 314 OFFCURVE",
"340 325 QCURVE SMOOTH",
"319 348 OFFCURVE",
"258 360 OFFCURVE",
"193 344 OFFCURVE",
"130 306 OFFCURVE",
"108 279 QCURVE SMOOTH",
"70 234 OFFCURVE",
"31 147 OFFCURVE",
"21 74 OFFCURVE",
"36 20 OFFCURVE",
"70 -5 OFFCURVE",
"119 5 OFFCURVE",
"148 33 QCURVE SMOOTH",
"170 54 OFFCURVE",
"208 107 OFFCURVE",
"220 127 QCURVE",
"209 88 OFFCURVE",
"212 37 OFFCURVE",
"230 8 OFFCURVE",
"258 -3 OFFCURVE",
"270 -2 QCURVE SMOOTH",
"292 0 OFFCURVE",
"337 41 OFFCURVE",
"377 99 OFFCURVE",
"410 161 OFFCURVE",
"421 184 QCURVE",
"421 184 LINE"
);
}
);
width = 350;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"240 537 OFFCURVE",
"191 448 OFFCURVE",
"139 348 OFFCURVE",
"86 244 OFFCURVE",
"37 151 OFFCURVE",
"-7 74 OFFCURVE",
"-24 52 QCURVE SMOOTH",
"-29 45 OFFCURVE",
"-22 34 OFFCURVE",
"-16 39 QCURVE SMOOTH",
"-9 46 OFFCURVE",
"14 79 OFFCURVE",
"41 126 OFFCURVE",
"73 184 OFFCURVE",
"90 217 QCURVE",
"75 186 OFFCURVE",
"52 130 OFFCURVE",
"46 107 QCURVE SMOOTH",
"39 80 OFFCURVE",
"49 33 OFFCURVE",
"82 3 OFFCURVE",
"141 -5 OFFCURVE",
"184 7 QCURVE SMOOTH",
"215 15 OFFCURVE",
"269 56 OFFCURVE",
"311 112 OFFCURVE",
"340 176 OFFCURVE",
"347 208 QCURVE SMOOTH",
"352 232 OFFCURVE",
"349 279 OFFCURVE",
"330 318 OFFCURVE",
"294 345 OFFCURVE",
"267 349 QCURVE SMOOTH",
"250 352 OFFCURVE",
"233 345 OFFCURVE",
"231 336 OFFCURVE",
"242 328 OFFCURVE",
"253 329 QCURVE SMOOTH",
"277 331 OFFCURVE",
"302 312 OFFCURVE",
"309 276 OFFCURVE",
"301 230 OFFCURVE",
"291 205 QCURVE SMOOTH",
"278 175 OFFCURVE",
"237 106 OFFCURVE",
"216 81 QCURVE SMOOTH",
"163 17 OFFCURVE",
"130 24 QCURVE SMOOTH",
"104 29 OFFCURVE",
"92 82 OFFCURVE",
"105 157 OFFCURVE",
"137 242 OFFCURVE",
"156 280 QCURVE SMOOTH",
"181 330 OFFCURVE",
"246 436 OFFCURVE",
"309 529 OFFCURVE",
"362 600 OFFCURVE",
"376 614 QCURVE",
"365 612 OFFCURVE",
"344 617 OFFCURVE",
"334 618 QCURVE SMOOTH",
"329 618 LINE SMOOTH",
"297 619 OFFCURVE",
"262 569 QCURVE",
"262 569 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 345;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"345 198 OFFCURVE",
"331 204 OFFCURVE",
"324 190 QCURVE SMOOTH",
"309 160 OFFCURVE",
"275 98 OFFCURVE",
"233 47 OFFCURVE",
"182 14 OFFCURVE",
"149 14 QCURVE SMOOTH",
"117 14 OFFCURVE",
"90 61 OFFCURVE",
"90 91 QCURVE SMOOTH",
"90 113 OFFCURVE",
"102 159 OFFCURVE",
"119 200 OFFCURVE",
"138 234 OFFCURVE",
"145 244 QCURVE SMOOTH",
"155 259 OFFCURVE",
"181 290 OFFCURVE",
"210 314 OFFCURVE",
"238 330 OFFCURVE",
"252 330 QCURVE SMOOTH",
"266 330 OFFCURVE",
"279 307 OFFCURVE",
"272 281 QCURVE SMOOTH",
"268 267 OFFCURVE",
"249 240 OFFCURVE",
"241 230 QCURVE",
"249 222 OFFCURVE",
"271 227 OFFCURVE",
"291 245 OFFCURVE",
"306 271 OFFCURVE",
"308 283 QCURVE SMOOTH",
"312 314 OFFCURVE",
"277 352 OFFCURVE",
"239 352 QCURVE SMOOTH",
"203 352 OFFCURVE",
"133 311 OFFCURVE",
"105 273 QCURVE SMOOTH",
"87 249 OFFCURVE",
"56 189 OFFCURVE",
"37 127 OFFCURVE",
"34 69 OFFCURVE",
"54 24 OFFCURVE",
"100 -4 OFFCURVE",
"139 -4 QCURVE SMOOTH",
"180 -4 OFFCURVE",
"239 25 OFFCURVE",
"284 76 OFFCURVE",
"320 144 OFFCURVE",
"338 183 QCURVE",
"338 183 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 1 29 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 260;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"541 620 OFFCURVE",
"519 625 OFFCURVE",
"509 626 QCURVE SMOOTH",
"485 628 OFFCURVE",
"455 608 OFFCURVE",
"441 574 QCURVE SMOOTH",
"423 533 OFFCURVE",
"361 406 OFFCURVE",
"325 337 QCURVE",
"298 353 OFFCURVE",
"240 357 OFFCURVE",
"183 339 OFFCURVE",
"131 303 OFFCURVE",
"110 279 QCURVE SMOOTH",
"83 246 OFFCURVE",
"39 159 OFFCURVE",
"22 77 OFFCURVE",
"41 14 OFFCURVE",
"76 4 QCURVE SMOOTH",
"102 -3 OFFCURVE",
"146 16 OFFCURVE",
"182 52 OFFCURVE",
"211 97 OFFCURVE",
"222 115 QCURVE",
"214 84 OFFCURVE",
"223 40 OFFCURVE",
"231 27 QCURVE SMOOTH",
"241 13 OFFCURVE",
"264 0 OFFCURVE",
"276 0 QCURVE SMOOTH",
"306 0 OFFCURVE",
"357 42 OFFCURVE",
"399 102 OFFCURVE",
"429 165 OFFCURVE",
"438 186 QCURVE SMOOTH",
"445 201 OFFCURVE",
"429 206 OFFCURVE",
"423 192 QCURVE SMOOTH",
"415 176 OFFCURVE",
"387 120 OFFCURVE",
"352 66 OFFCURVE",
"313 26 OFFCURVE",
"294 26 QCURVE SMOOTH",
"276 26 OFFCURVE",
"267 53 OFFCURVE",
"272 89 OFFCURVE",
"284 124 OFFCURVE",
"288 133 QCURVE SMOOTH",
"302 167 OFFCURVE",
"349 263 OFFCURVE",
"402 367 OFFCURVE",
"459 471 OFFCURVE",
"508 556 OFFCURVE",
"545 615 OFFCURVE",
"552 622 QCURVE",
"552 622 LINE"
);
},
{
closed = 1;
nodes = (
"282 255 OFFCURVE",
"211 134 OFFCURVE",
"183 95 QCURVE SMOOTH",
"151 50 OFFCURVE",
"100 24 OFFCURVE",
"74 48 OFFCURVE",
"79 114 OFFCURVE",
"104 161 QCURVE SMOOTH",
"124 198 OFFCURVE",
"181 271 OFFCURVE",
"242 322 OFFCURVE",
"298 339 OFFCURVE",
"317 321 QCURVE",
"317 321 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 12 23 12 39 12 55 12 71 12 87 12 103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 12 23 12 39 12 55 12 71 12 87 12 103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 12 23 12 39 12 55 12 71 12 87 12 103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"322 195 OFFCURVE",
"319 202 OFFCURVE",
"312 202 OFFCURVE",
"303 195 OFFCURVE",
"300 188 QCURVE SMOOTH",
"291 168 OFFCURVE",
"262 110 OFFCURVE",
"221 56 OFFCURVE",
"168 17 OFFCURVE",
"135 17 QCURVE SMOOTH",
"110 17 OFFCURVE",
"89 50 OFFCURVE",
"86 94 OFFCURVE",
"95 140 OFFCURVE",
"101 154 QCURVE",
"111 154 OFFCURVE",
"143 161 OFFCURVE",
"179 173 OFFCURVE",
"212 189 OFFCURVE",
"224 198 QCURVE SMOOTH",
"248 216 OFFCURVE",
"282 258 OFFCURVE",
"298 299 OFFCURVE",
"293 333 OFFCURVE",
"279 344 QCURVE SMOOTH",
"262 356 OFFCURVE",
"219 356 OFFCURVE",
"173 337 OFFCURVE",
"127 301 OFFCURVE",
"108 279 QCURVE SMOOTH",
"91 259 OFFCURVE",
"63 213 OFFCURVE",
"42 164 OFFCURVE",
"31 114 OFFCURVE",
"31 92 QCURVE SMOOTH",
"32 44 OFFCURVE",
"89 -4 OFFCURVE",
"127 -4 QCURVE SMOOTH",
"169 -4 OFFCURVE",
"228 33 OFFCURVE",
"272 90 OFFCURVE",
"304 157 OFFCURVE",
"318 187 QCURVE",
"318 187 LINE"
);
},
{
closed = 1;
nodes = (
"200 204 OFFCURVE",
"169 187 OFFCURVE",
"139 176 OFFCURVE",
"115 171 OFFCURVE",
"108 171 QCURVE",
"115 185 OFFCURVE",
"148 241 OFFCURVE",
"168 265 QCURVE SMOOTH",
"199 302 OFFCURVE",
"241 333 OFFCURVE",
"265 334 OFFCURVE",
"271 310 OFFCURVE",
"261 274 OFFCURVE",
"234 232 OFFCURVE",
"214 215 QCURVE",
"214 215 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
33 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 246;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"352 619 OFFCURVE",
"328 626 OFFCURVE",
"319 626 QCURVE SMOOTH",
"287 626 OFFCURVE",
"251 588 OFFCURVE",
"234 556 QCURVE SMOOTH",
"213 517 OFFCURVE",
"164 420 OFFCURVE",
"111 309 OFFCURVE",
"56 190 OFFCURVE",
"29 129 QCURVE",
"10 132 OFFCURVE",
"-7 118 QCURVE SMOOTH",
"-14 113 OFFCURVE",
"-24 93 OFFCURVE",
"-27 68 OFFCURVE",
"-22 41 OFFCURVE",
"-14 29 QCURVE",
"-36 -23 OFFCURVE",
"-74 -119 OFFCURVE",
"-102 -203 OFFCURVE",
"-118 -272 OFFCURVE",
"-117 -296 QCURVE SMOOTH",
"-116 -326 OFFCURVE",
"-86 -347 OFFCURVE",
"-65 -348 QCURVE SMOOTH",
"-25 -350 OFFCURVE",
"43 -281 OFFCURVE",
"89 -176 OFFCURVE",
"111 -54 OFFCURVE",
"107 -1 QCURVE",
"134 -1 OFFCURVE",
"181 34 OFFCURVE",
"222 90 OFFCURVE",
"256 156 OFFCURVE",
"270 188 QCURVE SMOOTH",
"275 199 OFFCURVE",
"260 205 OFFCURVE",
"255 195 QCURVE SMOOTH",
"243 169 OFFCURVE",
"210 106 OFFCURVE",
"171 52 OFFCURVE",
"127 16 OFFCURVE",
"105 18 QCURVE",
"104 21 OFFCURVE",
"103 28 OFFCURVE",
"102 31 QCURVE SMOOTH",
"97 57 OFFCURVE",
"80 94 OFFCURVE",
"70 106 QCURVE",
"107 190 OFFCURVE",
"191 356 OFFCURVE",
"270 496 OFFCURVE",
"339 599 OFFCURVE",
"363 621 QCURVE",
"363 621 LINE"
);
},
{
closed = 1;
nodes = (
"78 14 LINE SMOOTH",
"64 14 OFFCURVE",
"43 25 OFFCURVE",
"38 33 QCURVE",
"44 47 OFFCURVE",
"54 69 OFFCURVE",
"60 83 QCURVE",
"69 72 OFFCURVE",
"75 59 QCURVE SMOOTH",
"82 39 OFFCURVE",
"84 14 QCURVE",
"84 14 LINE"
);
},
{
closed = 1;
nodes = (
"87 -38 OFFCURVE",
"75 -115 OFFCURVE",
"52 -190 OFFCURVE",
"21 -257 OFFCURVE",
"3 -281 QCURVE SMOOTH",
"-12 -301 OFFCURVE",
"-41 -324 OFFCURVE",
"-61 -319 OFFCURVE",
"-65 -280 OFFCURVE",
"-55 -236 QCURVE SMOOTH",
"-43 -186 OFFCURVE",
"2 -55 OFFCURVE",
"28 11 QCURVE",
"38 3 OFFCURVE",
"71 -7 OFFCURVE",
"86 -5 QCURVE",
"86 -5 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
24 4 66 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
66 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
59 66 52 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
69 66 52 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 198;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"470 199 OFFCURVE",
"455 205 OFFCURVE",
"448 192 QCURVE SMOOTH",
"440 178 OFFCURVE",
"415 119 OFFCURVE",
"390 86 QCURVE SMOOTH",
"375 66 OFFCURVE",
"338 34 OFFCURVE",
"320 21 QCURVE",
"336 81 OFFCURVE",
"343 204 OFFCURVE",
"333 264 QCURVE",
"327 259 OFFCURVE",
"310 259 OFFCURVE",
"292 255 OFFCURVE",
"276 241 OFFCURVE",
"271 224 QCURVE SMOOTH",
"264 200 OFFCURVE",
"224 128 OFFCURVE",
"173 63 OFFCURVE",
"118 24 OFFCURVE",
"96 33 QCURVE SMOOTH",
"76 42 OFFCURVE",
"75 91 OFFCURVE",
"100 156 OFFCURVE",
"146 228 OFFCURVE",
"173 259 QCURVE SMOOTH",
"196 284 OFFCURVE",
"245 322 OFFCURVE",
"289 337 OFFCURVE",
"324 323 OFFCURVE",
"334 296 QCURVE SMOOTH",
"338 285 OFFCURVE",
"352 283 OFFCURVE",
"361 294 OFFCURVE",
"358 314 OFFCURVE",
"345 325 QCURVE SMOOTH",
"317 347 OFFCURVE",
"254 358 OFFCURVE",
"192 343 OFFCURVE",
"135 306 OFFCURVE",
"113 279 QCURVE SMOOTH",
"85 246 OFFCURVE",
"40 164 OFFCURVE",
"22 85 OFFCURVE",
"41 20 OFFCURVE",
"79 4 QCURVE",
"109 -5 OFFCURVE",
"167 29 OFFCURVE",
"218 87 OFFCURVE",
"259 154 OFFCURVE",
"271 177 QCURVE",
"273 169 OFFCURVE",
"273 124 OFFCURVE",
"270 95 QCURVE SMOOTH",
"267 65 OFFCURVE",
"256 10 OFFCURVE",
"247 -16 QCURVE",
"218 -28 OFFCURVE",
"155 -48 OFFCURVE",
"88 -72 OFFCURVE",
"18 -102 OFFCURVE",
"-19 -124 QCURVE SMOOTH",
"-55 -145 OFFCURVE",
"-106 -202 OFFCURVE",
"-106 -239 QCURVE SMOOTH",
"-106 -316 OFFCURVE",
"-12 -316 QCURVE SMOOTH",
"42 -316 OFFCURVE",
"144 -256 OFFCURVE",
"229 -166 OFFCURVE",
"292 -59 OFFCURVE",
"309 -12 QCURVE",
"337 1 OFFCURVE",
"377 36 OFFCURVE",
"412 83 OFFCURVE",
"444 145 OFFCURVE",
"463 184 QCURVE",
"463 184 LINE"
);
},
{
closed = 1;
nodes = (
"217 -94 OFFCURVE",
"180 -146 QCURVE SMOOTH",
"159 -174 OFFCURVE",
"113 -225 OFFCURVE",
"90 -244 QCURVE SMOOTH",
"81 -251 OFFCURVE",
"51 -269 OFFCURVE",
"17 -285 OFFCURVE",
"-20 -296 OFFCURVE",
"-36 -296 QCURVE SMOOTH",
"-67 -296 OFFCURVE",
"-88 -263 OFFCURVE",
"-77 -218 OFFCURVE",
"-42 -169 OFFCURVE",
"-18 -153 QCURVE SMOOTH",
"30 -121 OFFCURVE",
"147 -76 OFFCURVE",
"202 -57 QCURVE SMOOTH",
"211 -54 OFFCURVE",
"229 -48 OFFCURVE",
"237 -45 QCURVE",
"237 -45 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
89 1 10 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 392;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"410 199 OFFCURVE",
"395 207 OFFCURVE",
"388 193 QCURVE SMOOTH",
"380 177 OFFCURVE",
"349 117 OFFCURVE",
"311 58 OFFCURVE",
"270 16 OFFCURVE",
"253 17 QCURVE SMOOTH",
"243 18 OFFCURVE",
"232 39 OFFCURVE",
"238 70 QCURVE SMOOTH",
"240 83 OFFCURVE",
"253 119 OFFCURVE",
"271 160 OFFCURVE",
"292 204 OFFCURVE",
"303 225 QCURVE SMOOTH",
"328 274 OFFCURVE",
"358 328 QCURVE",
"345 332 OFFCURVE",
"298 316 OFFCURVE",
"244 287 OFFCURVE",
"191 250 OFFCURVE",
"173 234 QCURVE SMOOTH",
"153 217 OFFCURVE",
"112 172 OFFCURVE",
"92 146 QCURVE",
"112 188 OFFCURVE",
"160 282 OFFCURVE",
"210 376 OFFCURVE",
"259 465 OFFCURVE",
"302 538 OFFCURVE",
"337 592 OFFCURVE",
"348 603 QCURVE",
"337 601 OFFCURVE",
"316 606 OFFCURVE",
"306 607 QCURVE SMOOTH",
"282 609 OFFCURVE",
"252 576 OFFCURVE",
"235 544 QCURVE SMOOTH",
"199 477 OFFCURVE",
"126 335 OFFCURVE",
"57 194 OFFCURVE",
"-10 56 OFFCURVE",
"-40 -7 QCURVE",
"-32 -2 OFFCURVE",
"-17 -2 OFFCURVE",
"-6 -1 QCURVE SMOOTH",
"10 -1 OFFCURVE",
"26 3 OFFCURVE",
"31 14 QCURVE SMOOTH",
"74 97 OFFCURVE",
"145 189 OFFCURVE",
"171 212 QCURVE SMOOTH",
"200 239 OFFCURVE",
"236 259 OFFCURVE",
"253 255 OFFCURVE",
"251 233 OFFCURVE",
"242 218 QCURVE SMOOTH",
"221 184 OFFCURVE",
"193 133 OFFCURVE",
"187 113 QCURVE SMOOTH",
"176 78 OFFCURVE",
"180 33 OFFCURVE",
"199 6 OFFCURVE",
"227 -4 OFFCURVE",
"240 -4 QCURVE SMOOTH",
"268 -4 OFFCURVE",
"316 35 OFFCURVE",
"357 92 OFFCURVE",
"390 157 OFFCURVE",
"402 183 QCURVE",
"402 183 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
63 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 63 23 63 39 63 55 63 71 63 87 63 103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 63 23 63 39 63 55 63 71 63 87 63 103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 63 23 63 39 63 55 63 71 63 87 63 103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 332;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"214 435 OFFCURVE",
"193 459 OFFCURVE",
"176 459 QCURVE SMOOTH",
"159 459 OFFCURVE",
"131 435 OFFCURVE",
"128 418 QCURVE SMOOTH",
"126 401 OFFCURVE",
"146 377 OFFCURVE",
"163 377 QCURVE SMOOTH",
"180 377 OFFCURVE",
"208 401 OFFCURVE",
"211 418 QCURVE",
"211 418 LINE"
);
},
{
closed = 1;
nodes = (
"71 87 OFFCURVE",
"75 97 OFFCURVE",
"77 102 QCURVE SMOOTH",
"80 107 OFFCURVE",
"82 114 QCURVE",
"162 301 LINE SMOOTH",
"170 319 OFFCURVE",
"165 336 OFFCURVE",
"141 336 QCURVE SMOOTH",
"86 335 LINE",
"89 331 OFFCURVE",
"102 307 OFFCURVE",
"96 293 QCURVE SMOOTH",
"32 130 LINE SMOOTH",
"24 110 OFFCURVE",
"18 65 OFFCURVE",
"28 26 OFFCURVE",
"58 0 OFFCURVE",
"86 0 QCURVE SMOOTH",
"114 0 OFFCURVE",
"162 41 OFFCURVE",
"203 100 OFFCURVE",
"233 162 OFFCURVE",
"243 183 QCURVE SMOOTH",
"250 198 OFFCURVE",
"236 206 OFFCURVE",
"230 192 QCURVE SMOOTH",
"209 150 OFFCURVE",
"161 66 OFFCURVE",
"136 41 QCURVE SMOOTH",
"128 33 OFFCURVE",
"102 20 OFFCURVE",
"91 22 QCURVE SMOOTH",
"70 24 OFFCURVE",
"63 60 OFFCURVE",
"70 85 QCURVE",
"70 85 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
29 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 174;
}
);
leftKerningGroup = i;
note = i;
unicode = 0069;
},
{
glyphname = j;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"53 149 OFFCURVE",
"36 114 OFFCURVE",
"17 76 OFFCURVE",
"-2 36 OFFCURVE",
"-11 18 QCURVE SMOOTH",
"-18 4 OFFCURVE",
"-35 -26 OFFCURVE",
"-43 -40 QCURVE",
"-104 -57 OFFCURVE",
"-235 -88 OFFCURVE",
"-286 -112 QCURVE SMOOTH",
"-315 -126 OFFCURVE",
"-366 -166 OFFCURVE",
"-380 -194 QCURVE SMOOTH",
"-391 -215 OFFCURVE",
"-397 -258 OFFCURVE",
"-380 -294 OFFCURVE",
"-338 -316 OFFCURVE",
"-300 -316 QCURVE SMOOTH",
"-245 -316 OFFCURVE",
"-151 -265 OFFCURVE",
"-75 -186 OFFCURVE",
"-14 -92 OFFCURVE",
"10 -50 QCURVE",
"64 -31 OFFCURVE",
"133 8 OFFCURVE",
"182 60 OFFCURVE",
"222 132 OFFCURVE",
"248 184 QCURVE SMOOTH",
"255 199 OFFCURVE",
"241 206 OFFCURVE",
"234 193 QCURVE SMOOTH",
"226 179 OFFCURVE",
"198 121 OFFCURVE",
"174 86 QCURVE SMOOTH",
"157 61 OFFCURVE",
"124 29 OFFCURVE",
"88 7 OFFCURVE",
"49 -9 OFFCURVE",
"27 -18 QCURVE",
"44 15 OFFCURVE",
"75 81 OFFCURVE",
"89 114 QCURVE SMOOTH",
"169 301 LINE SMOOTH",
"177 319 OFFCURVE",
"172 336 OFFCURVE",
"148 336 QCURVE SMOOTH",
"93 335 LINE",
"96 331 OFFCURVE",
"110 307 OFFCURVE",
"103 293 QCURVE SMOOTH",
"50 178 LINE SMOOTH",
"45 168 OFFCURVE",
"54 162 OFFCURVE",
"59 162 QCURVE",
"59 162 LINE"
);
},
{
closed = 1;
nodes = (
"-67 -82 OFFCURVE",
"-78 -101 OFFCURVE",
"-84 -109 QCURVE SMOOTH",
"-101 -133 OFFCURVE",
"-155 -197 OFFCURVE",
"-220 -255 OFFCURVE",
"-291 -296 OFFCURVE",
"-324 -296 QCURVE SMOOTH",
"-356 -296 OFFCURVE",
"-376 -258 OFFCURVE",
"-358 -205 OFFCURVE",
"-308 -151 OFFCURVE",
"-269 -134 QCURVE SMOOTH",
"-248 -125 OFFCURVE",
"-196 -108 OFFCURVE",
"-141 -92 OFFCURVE",
"-86 -78 OFFCURVE",
"-62 -72 QCURVE",
"-62 -72 LINE"
);
},
{
closed = 1;
nodes = (
"214 435 OFFCURVE",
"193 459 OFFCURVE",
"176 459 QCURVE SMOOTH",
"159 459 OFFCURVE",
"131 435 OFFCURVE",
"128 418 QCURVE SMOOTH",
"126 401 OFFCURVE",
"146 377 OFFCURVE",
"163 377 QCURVE SMOOTH",
"180 377 OFFCURVE",
"208 401 OFFCURVE",
"211 418 QCURVE",
"211 418 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
65 1 36 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
82 76 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 177;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"240 537 OFFCURVE",
"191 448 OFFCURVE",
"139 348 OFFCURVE",
"86 244 OFFCURVE",
"37 151 OFFCURVE",
"-7 74 OFFCURVE",
"-24 52 QCURVE SMOOTH",
"-29 45 OFFCURVE",
"-22 34 OFFCURVE",
"-16 39 QCURVE SMOOTH",
"-9 46 OFFCURVE",
"14 79 OFFCURVE",
"41 126 OFFCURVE",
"73 184 OFFCURVE",
"90 217 QCURVE",
"67 165 OFFCURVE",
"22 74 OFFCURVE",
"8 22 QCURVE SMOOTH",
"5 12 OFFCURVE",
"5 0 OFFCURVE",
"16 0 QCURVE SMOOTH",
"79 0 LINE",
"73 5 OFFCURVE",
"75 46 OFFCURVE",
"85 95 OFFCURVE",
"100 143 OFFCURVE",
"107 156 QCURVE",
"127 185 OFFCURVE",
"169 230 OFFCURVE",
"189 247 QCURVE SMOOTH",
"232 284 OFFCURVE",
"291 300 OFFCURVE",
"317 283 OFFCURVE",
"309 243 OFFCURVE",
"285 224 QCURVE SMOOTH",
"268 210 OFFCURVE",
"223 192 OFFCURVE",
"206 194 QCURVE",
"198 193 OFFCURVE",
"178 175 OFFCURVE",
"162 145 OFFCURVE",
"154 103 OFFCURVE",
"159 79 QCURVE SMOOTH",
"167 40 OFFCURVE",
"209 -3 OFFCURVE",
"236 -6 QCURVE SMOOTH",
"258 -8 OFFCURVE",
"303 0 OFFCURVE",
"352 39 OFFCURVE",
"405 118 OFFCURVE",
"435 186 QCURVE SMOOTH",
"440 198 OFFCURVE",
"428 207 OFFCURVE",
"422 195 QCURVE SMOOTH",
"401 151 OFFCURVE",
"360 78 OFFCURVE",
"341 58 QCURVE SMOOTH",
"306 21 OFFCURVE",
"250 23 OFFCURVE",
"216 69 OFFCURVE",
"209 143 OFFCURVE",
"223 178 QCURVE",
"256 181 OFFCURVE",
"301 201 OFFCURVE",
"324 217 QCURVE SMOOTH",
"352 237 OFFCURVE",
"383 293 OFFCURVE",
"378 336 OFFCURVE",
"331 353 OFFCURVE",
"283 335 QCURVE SMOOTH",
"261 327 OFFCURVE",
"217 296 OFFCURVE",
"174 257 OFFCURVE",
"136 214 OFFCURVE",
"120 195 QCURVE",
"128 218 OFFCURVE",
"146 260 OFFCURVE",
"156 280 QCURVE SMOOTH",
"181 330 OFFCURVE",
"242 436 OFFCURVE",
"302 529 OFFCURVE",
"357 599 OFFCURVE",
"376 614 QCURVE",
"365 612 OFFCURVE",
"344 617 OFFCURVE",
"334 618 QCURVE SMOOTH",
"329 618 LINE SMOOTH",
"297 619 OFFCURVE",
"262 569 QCURVE",
"262 569 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
67 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
14 43 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
74 43 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 363;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"344 553 OFFCURVE",
"337 619 OFFCURVE",
"297 632 OFFCURVE",
"237 593 OFFCURVE",
"210 548 QCURVE SMOOTH",
"188 512 OFFCURVE",
"144 424 OFFCURVE",
"104 331 OFFCURVE",
"70 237 OFFCURVE",
"58 195 QCURVE SMOOTH",
"54 180 OFFCURVE",
"42 139 OFFCURVE",
"34 95 OFFCURVE",
"33 53 OFFCURVE",
"46 19 OFFCURVE",
"77 -2 OFFCURVE",
"105 -2 QCURVE SMOOTH",
"143 -2 OFFCURVE",
"201 42 OFFCURVE",
"244 102 OFFCURVE",
"274 166 OFFCURVE",
"283 186 QCURVE SMOOTH",
"290 201 OFFCURVE",
"275 204 OFFCURVE",
"268 191 QCURVE SMOOTH",
"263 181 OFFCURVE",
"248 152 OFFCURVE",
"229 118 OFFCURVE",
"206 82 OFFCURVE",
"194 64 QCURVE SMOOTH",
"174 36 OFFCURVE",
"129 15 OFFCURVE",
"94 30 OFFCURVE",
"80 82 OFFCURVE",
"91 127 QCURVE SMOOTH",
"96 146 OFFCURVE",
"108 180 OFFCURVE",
"112 193 QCURVE",
"186 260 OFFCURVE",
"282 415 OFFCURVE",
"317 493 QCURVE",
"317 493 LINE"
);
},
{
closed = 1;
nodes = (
"287 473 OFFCURVE",
"247 396 OFFCURVE",
"199 321 OFFCURVE",
"147 252 OFFCURVE",
"120 225 QCURVE",
"132 255 OFFCURVE",
"170 346 OFFCURVE",
"214 441 OFFCURVE",
"260 527 OFFCURVE",
"278 553 QCURVE SMOOTH",
"298 582 OFFCURVE",
"316 588 OFFCURVE",
"319 565 OFFCURVE",
"309 525 OFFCURVE",
"302 508 QCURVE",
"302 508 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 212;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"585 199 OFFCURVE",
"570 206 OFFCURVE",
"564 193 QCURVE SMOOTH",
"556 176 OFFCURVE",
"526 117 OFFCURVE",
"488 61 OFFCURVE",
"446 20 OFFCURVE",
"427 20 QCURVE SMOOTH",
"417 20 OFFCURVE",
"405 39 OFFCURVE",
"410 70 QCURVE SMOOTH",
"413 83 OFFCURVE",
"426 119 OFFCURVE",
"444 160 OFFCURVE",
"464 204 OFFCURVE",
"475 225 QCURVE SMOOTH",
"500 274 OFFCURVE",
"530 328 QCURVE",
"518 332 OFFCURVE",
"470 316 OFFCURVE",
"416 287 OFFCURVE",
"363 250 OFFCURVE",
"345 234 QCURVE SMOOTH",
"322 214 OFFCURVE",
"277 163 OFFCURVE",
"262 144 QCURVE",
"280 181 OFFCURVE",
"321 252 OFFCURVE",
"335 284 QCURVE SMOOTH",
"342 299 OFFCURVE",
"334 323 OFFCURVE",
"320 328 QCURVE SMOOTH",
"307 332 OFFCURVE",
"272 316 OFFCURVE",
"233 287 OFFCURVE",
"192 250 OFFCURVE",
"174 234 QCURVE SMOOTH",
"151 214 OFFCURVE",
"106 163 OFFCURVE",
"91 144 QCURVE",
"104 171 OFFCURVE",
"137 232 OFFCURVE",
"170 286 OFFCURVE",
"201 326 OFFCURVE",
"212 332 QCURVE",
"201 330 OFFCURVE",
"180 335 OFFCURVE",
"170 336 QCURVE SMOOTH",
"146 337 OFFCURVE",
"118 309 OFFCURVE",
"99 273 QCURVE SMOOTH",
"62 205 OFFCURVE",
"-1 67 OFFCURVE",
"-37 -5 QCURVE",
"-29 0 OFFCURVE",
"-15 0 OFFCURVE",
"-4 1 QCURVE SMOOTH",
"13 1 OFFCURVE",
"29 6 OFFCURVE",
"34 17 QCURVE SMOOTH",
"77 99 OFFCURVE",
"146 189 OFFCURVE",
"172 212 QCURVE SMOOTH",
"211 249 OFFCURVE",
"243 264 OFFCURVE",
"244 242 OFFCURVE",
"224 194 OFFCURVE",
"212 169 QCURVE SMOOTH",
"199 141 OFFCURVE",
"175 88 OFFCURVE",
"170 55 QCURVE SMOOTH",
"166 33 OFFCURVE",
"185 0 OFFCURVE",
"202 0 QCURVE",
"207 22 OFFCURVE",
"240 83 OFFCURVE",
"282 144 OFFCURVE",
"327 197 OFFCURVE",
"343 212 QCURVE SMOOTH",
"372 239 OFFCURVE",
"408 259 OFFCURVE",
"425 255 OFFCURVE",
"423 233 OFFCURVE",
"414 218 QCURVE SMOOTH",
"393 184 OFFCURVE",
"365 133 OFFCURVE",
"359 113 QCURVE SMOOTH",
"348 78 OFFCURVE",
"352 33 OFFCURVE",
"371 6 OFFCURVE",
"399 -4 OFFCURVE",
"413 -4 QCURVE SMOOTH",
"441 -4 OFFCURVE",
"492 38 OFFCURVE",
"534 97 OFFCURVE",
"567 161 OFFCURVE",
"578 184 QCURVE",
"578 184 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
89 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 507;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"413 199 OFFCURVE",
"398 206 OFFCURVE",
"392 193 QCURVE SMOOTH",
"384 177 OFFCURVE",
"354 119 OFFCURVE",
"316 62 OFFCURVE",
"274 20 OFFCURVE",
"255 20 QCURVE SMOOTH",
"245 20 OFFCURVE",
"233 39 OFFCURVE",
"239 70 QCURVE SMOOTH",
"241 83 OFFCURVE",
"254 119 OFFCURVE",
"272 160 OFFCURVE",
"293 204 OFFCURVE",
"304 225 QCURVE SMOOTH",
"329 274 OFFCURVE",
"359 328 QCURVE",
"346 332 OFFCURVE",
"299 316 OFFCURVE",
"245 287 OFFCURVE",
"192 250 OFFCURVE",
"174 234 QCURVE SMOOTH",
"151 214 OFFCURVE",
"106 163 OFFCURVE",
"91 144 QCURVE",
"104 171 OFFCURVE",
"137 232 OFFCURVE",
"170 286 OFFCURVE",
"201 326 OFFCURVE",
"212 332 QCURVE",
"201 330 OFFCURVE",
"180 335 OFFCURVE",
"170 336 QCURVE SMOOTH",
"146 337 OFFCURVE",
"118 309 OFFCURVE",
"99 273 QCURVE SMOOTH",
"62 205 OFFCURVE",
"-3 65 OFFCURVE",
"-39 -7 QCURVE",
"-31 -2 OFFCURVE",
"-16 -2 OFFCURVE",
"-5 -1 QCURVE SMOOTH",
"11 -1 OFFCURVE",
"27 3 OFFCURVE",
"33 14 QCURVE SMOOTH",
"75 97 OFFCURVE",
"146 189 OFFCURVE",
"172 212 QCURVE SMOOTH",
"201 239 OFFCURVE",
"237 259 OFFCURVE",
"254 255 OFFCURVE",
"252 233 OFFCURVE",
"243 218 QCURVE SMOOTH",
"222 184 OFFCURVE",
"194 133 OFFCURVE",
"188 113 QCURVE SMOOTH",
"177 78 OFFCURVE",
"181 33 OFFCURVE",
"200 6 OFFCURVE",
"228 -4 OFFCURVE",
"241 -4 QCURVE SMOOTH",
"270 -4 OFFCURVE",
"320 38 OFFCURVE",
"362 97 OFFCURVE",
"395 161 OFFCURVE",
"406 184 QCURVE",
"406 184 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 335;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"413 199 OFFCURVE",
"397 205 OFFCURVE",
"393 197 QCURVE SMOOTH",
"384 179 OFFCURVE",
"356 121 OFFCURVE",
"320 65 OFFCURVE",
"277 25 OFFCURVE",
"253 25 QCURVE SMOOTH",
"219 25 OFFCURVE",
"206 50 QCURVE",
"235 77 OFFCURVE",
"279 142 OFFCURVE",
"290 168 QCURVE SMOOTH",
"304 201 OFFCURVE",
"314 266 OFFCURVE",
"303 318 OFFCURVE",
"269 350 OFFCURVE",
"241 350 QCURVE SMOOTH",
"215 351 OFFCURVE",
"161 324 OFFCURVE",
"110 278 OFFCURVE",
"66 216 OFFCURVE",
"51 182 QCURVE SMOOTH",
"37 149 OFFCURVE",
"27 84 OFFCURVE",
"38 33 OFFCURVE",
"71 1 OFFCURVE",
"100 0 QCURVE SMOOTH",
"122 -1 OFFCURVE",
"166 18 OFFCURVE",
"187 34 QCURVE",
"197 23 OFFCURVE",
"228 8 OFFCURVE",
"251 8 QCURVE SMOOTH",
"282 8 OFFCURVE",
"335 54 OFFCURVE",
"375 114 OFFCURVE",
"402 174 OFFCURVE",
"408 188 QCURVE",
"408 188 LINE"
);
},
{
closed = 1;
nodes = (
"275 313 OFFCURVE",
"287 284 OFFCURVE",
"285 240 OFFCURVE",
"269 184 OFFCURVE",
"254 153 QCURVE SMOOTH",
"240 124 OFFCURVE",
"223 99 QCURVE",
"224 102 OFFCURVE",
"225 107 OFFCURVE",
"225 110 QCURVE SMOOTH",
"225 122 OFFCURVE",
"208 140 OFFCURVE",
"195 140 QCURVE SMOOTH",
"176 140 OFFCURVE",
"161 114 OFFCURVE",
"160 97 QCURVE SMOOTH",
"160 86 OFFCURVE",
"168 60 OFFCURVE",
"176 48 QCURVE",
"158 33 OFFCURVE",
"122 19 OFFCURVE",
"108 23 QCURVE SMOOTH",
"94 27 OFFCURVE",
"84 56 OFFCURVE",
"88 100 OFFCURVE",
"105 155 OFFCURVE",
"120 186 QCURVE SMOOTH",
"134 216 OFFCURVE",
"170 267 OFFCURVE",
"208 304 OFFCURVE",
"246 321 OFFCURVE",
"262 317 QCURVE",
"262 317 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
31 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 27 values pushed */
7 58 23 58 39 58 55 58 71 58 87 58 103 58 119 58 135 58 151 58 167 58 183 58 199 58 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
214 58 230 58 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
64 11 58 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 335;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"281 357 OFFCURVE",
"228 320 OFFCURVE",
"179 263 OFFCURVE",
"139 200 OFFCURVE",
"128 182 QCURVE",
"138 208 OFFCURVE",
"155 277 OFFCURVE",
"156 302 QCURVE SMOOTH",
"157 320 OFFCURVE",
"154 339 OFFCURVE",
"145 345 OFFCURVE",
"131 344 OFFCURVE",
"120 343 QCURVE",
"117 342 OFFCURVE",
"100 341 OFFCURVE",
"92 339 QCURVE SMOOTH",
"82 337 OFFCURVE",
"71 335 QCURVE",
"80 333 OFFCURVE",
"86 306 OFFCURVE",
"83 268 OFFCURVE",
"72 226 OFFCURVE",
"65 210 QCURVE SMOOTH",
"61 201 OFFCURVE",
"49 173 OFFCURVE",
"45 165 QCURVE SMOOTH",
"40 154 OFFCURVE",
"60 161 OFFCURVE",
"68 174 QCURVE",
"63 151 OFFCURVE",
"32 72 OFFCURVE",
"-11 -22 OFFCURVE",
"-61 -120 OFFCURVE",
"-105 -203 OFFCURVE",
"-139 -260 OFFCURVE",
"-145 -266 QCURVE",
"-134 -264 OFFCURVE",
"-113 -270 OFFCURVE",
"-103 -271 QCURVE SMOOTH",
"-78 -273 OFFCURVE",
"-51 -251 OFFCURVE",
"-36 -219 QCURVE",
"59 18 LINE",
"86 2 OFFCURVE",
"144 -2 OFFCURVE",
"200 15 OFFCURVE",
"252 51 OFFCURVE",
"273 76 QCURVE SMOOTH",
"300 109 OFFCURVE",
"345 196 OFFCURVE",
"361 277 OFFCURVE",
"343 340 OFFCURVE",
"307 350 QCURVE",
"307 350 LINE"
);
},
{
closed = 1;
nodes = (
"260 157 OFFCURVE",
"202 83 OFFCURVE",
"141 32 OFFCURVE",
"85 15 OFFCURVE",
"67 33 QCURVE",
"102 99 OFFCURVE",
"172 221 OFFCURVE",
"201 260 QCURVE SMOOTH",
"233 305 OFFCURVE",
"284 330 OFFCURVE",
"310 306 OFFCURVE",
"305 240 OFFCURVE",
"280 194 QCURVE",
"280 194 LINE"
);
}
);
width = 336;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"355 251 OFFCURVE",
"333 257 OFFCURVE",
"324 257 QCURVE SMOOTH",
"314 258 OFFCURVE",
"300 255 OFFCURVE",
"287 244 OFFCURVE",
"273 223 OFFCURVE",
"263 207 QCURVE SMOOTH",
"256 196 OFFCURVE",
"234 159 OFFCURVE",
"206 117 OFFCURVE",
"173 74 OFFCURVE",
"141 43 OFFCURVE",
"109 27 OFFCURVE",
"96 33 QCURVE SMOOTH",
"78 41 OFFCURVE",
"75 85 OFFCURVE",
"95 143 OFFCURVE",
"134 208 OFFCURVE",
"182 268 OFFCURVE",
"235 316 OFFCURVE",
"284 337 OFFCURVE",
"323 325 OFFCURVE",
"334 296 QCURVE SMOOTH",
"338 285 OFFCURVE",
"352 283 OFFCURVE",
"361 294 OFFCURVE",
"357 314 OFFCURVE",
"344 325 QCURVE SMOOTH",
"316 347 OFFCURVE",
"254 358 OFFCURVE",
"192 343 OFFCURVE",
"135 306 OFFCURVE",
"113 279 QCURVE SMOOTH",
"85 246 OFFCURVE",
"40 164 OFFCURVE",
"22 85 OFFCURVE",
"41 20 OFFCURVE",
"78 4 QCURVE",
"94 -1 OFFCURVE",
"125 5 OFFCURVE",
"153 21 OFFCURVE",
"178 44 OFFCURVE",
"189 56 QCURVE SMOOTH",
"192 60 OFFCURVE",
"213 90 OFFCURVE",
"237 124 OFFCURVE",
"257 154 OFFCURVE",
"259 158 QCURVE SMOOTH",
"243 123 OFFCURVE",
"215 67 OFFCURVE",
"181 -1 OFFCURVE",
"138 -92 OFFCURVE",
"108 -162 QCURVE SMOOTH",
"93 -195 OFFCURVE",
"85 -239 OFFCURVE",
"102 -257 QCURVE SMOOTH",
"108 -264 OFFCURVE",
"126 -278 OFFCURVE",
"131 -287 QCURVE",
"133 -272 OFFCURVE",
"159 -196 OFFCURVE",
"199 -96 OFFCURVE",
"247 19 OFFCURVE",
"298 129 OFFCURVE",
"347 224 OFFCURVE",
"366 253 QCURVE",
"366 253 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 342;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"338 198 OFFCURVE",
"325 206 OFFCURVE",
"318 193 QCURVE SMOOTH",
"310 177 OFFCURVE",
"281 120 OFFCURVE",
"246 66 OFFCURVE",
"209 26 OFFCURVE",
"194 26 QCURVE SMOOTH",
"179 27 OFFCURVE",
"174 55 OFFCURVE",
"184 98 OFFCURVE",
"205 150 OFFCURVE",
"228 197 OFFCURVE",
"247 235 OFFCURVE",
"251 243 QCURVE SMOOTH",
"255 252 OFFCURVE",
"265 275 OFFCURVE",
"272 296 OFFCURVE",
"275 315 OFFCURVE",
"272 320 QCURVE",
"235 316 OFFCURVE",
"162 314 OFFCURVE",
"134 316 QCURVE",
"147 325 OFFCURVE",
"184 362 OFFCURVE",
"189 383 QCURVE SMOOTH",
"194 408 OFFCURVE",
"179 441 OFFCURVE",
"156 453 OFFCURVE",
"132 440 OFFCURVE",
"128 419 QCURVE SMOOTH",
"120 377 OFFCURVE",
"93 281 OFFCURVE",
"54 184 OFFCURVE",
"4 91 OFFCURVE",
"-26 52 QCURVE SMOOTH",
"-31 45 OFFCURVE",
"-24 34 OFFCURVE",
"-18 39 QCURVE SMOOTH",
"0 57 OFFCURVE",
"36 112 OFFCURVE",
"68 175 OFFCURVE",
"94 236 OFFCURVE",
"103 260 QCURVE SMOOTH",
"115 292 LINE",
"157 291 OFFCURVE",
"203 270 OFFCURVE",
"192 245 QCURVE SMOOTH",
"188 236 OFFCURVE",
"172 208 OFFCURVE",
"153 176 OFFCURVE",
"136 142 OFFCURVE",
"130 127 QCURVE SMOOTH",
"115 88 OFFCURVE",
"119 37 OFFCURVE",
"141 7 OFFCURVE",
"172 -2 OFFCURVE",
"185 1 QCURVE SMOOTH",
"209 7 OFFCURVE",
"253 48 OFFCURVE",
"289 102 OFFCURVE",
"319 160 OFFCURVE",
"330 183 QCURVE",
"330 183 LINE"
);
}
);
width = 260;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"333 197 OFFCURVE",
"318 203 OFFCURVE",
"314 195 QCURVE SMOOTH",
"306 180 OFFCURVE",
"287 143 OFFCURVE",
"267 107 OFFCURVE",
"248 74 OFFCURVE",
"239 64 QCURVE SMOOTH",
"220 41 OFFCURVE",
"175 14 OFFCURVE",
"149 18 QCURVE SMOOTH",
"142 19 LINE",
"171 39 OFFCURVE",
"211 101 OFFCURVE",
"213 130 QCURVE SMOOTH",
"215 163 OFFCURVE",
"189 219 OFFCURVE",
"177 248 QCURVE SMOOTH",
"171 261 OFFCURVE",
"164 298 OFFCURVE",
"166 335 OFFCURVE",
"181 367 OFFCURVE",
"198 375 QCURVE SMOOTH",
"206 379 OFFCURVE",
"222 377 OFFCURVE",
"230 374 QCURVE SMOOTH",
"244 367 OFFCURVE",
"248 384 OFFCURVE",
"234 391 QCURVE SMOOTH",
"218 399 OFFCURVE",
"197 396 QCURVE SMOOTH",
"184 394 OFFCURVE",
"160 378 OFFCURVE",
"139 354 OFFCURVE",
"121 325 OFFCURVE",
"114 310 QCURVE SMOOTH",
"94 267 OFFCURVE",
"48 175 OFFCURVE",
"28 137 QCURVE",
"10 136 OFFCURVE",
"-13 92 OFFCURVE",
"-8 39 OFFCURVE",
"33 -4 OFFCURVE",
"78 -4 QCURVE SMOOTH",
"96 -4 OFFCURVE",
"119 6 QCURVE",
"161 -7 OFFCURVE",
"227 24 OFFCURVE",
"278 83 OFFCURVE",
"315 158 OFFCURVE",
"329 189 QCURVE",
"329 189 LINE"
);
},
{
closed = 1;
nodes = (
"150 90 OFFCURVE",
"125 39 OFFCURVE",
"108 26 QCURVE",
"91 34 OFFCURVE",
"64 74 OFFCURVE",
"66 103 QCURVE SMOOTH",
"66 115 OFFCURVE",
"60 128 OFFCURVE",
"56 131 QCURVE SMOOTH",
"52 135 OFFCURVE",
"45 135 QCURVE",
"54 151 OFFCURVE",
"78 198 OFFCURVE",
"104 249 OFFCURVE",
"129 300 OFFCURVE",
"139 320 QCURVE",
"136 303 OFFCURVE",
"140 257 OFFCURVE",
"147 206 OFFCURVE",
"153 154 OFFCURVE",
"152 130 QCURVE",
"152 130 LINE"
);
},
{
closed = 1;
nodes = (
"83 13 OFFCURVE",
"71 13 QCURVE SMOOTH",
"56 13 OFFCURVE",
"37 29 OFFCURVE",
"31 52 OFFCURVE",
"39 80 OFFCURVE",
"51 92 QCURVE",
"53 63 OFFCURVE",
"75 27 OFFCURVE",
"91 17 QCURVE",
"91 17 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
51 3 66 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 51 21 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 66 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
56 66 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
72 66 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 27 values pushed */
7 12 23 12 39 12 55 12 71 12 87 12 103 12 119 12 135 12 151 12 167 12 183 12 199 12 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
214 12 230 12 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
39 7 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
72 7 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
75 7 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 256;
}
);
leftKerningGroup = s;
note = s;
unicode = 0073;
},
{
glyphname = t;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"255 380 LINE",
"277 422 OFFCURVE",
"298 466 QCURVE SMOOTH",
"326 526 OFFCURVE",
"320 593 OFFCURVE",
"280 606 OFFCURVE",
"221 567 OFFCURVE",
"195 522 QCURVE SMOOTH",
"176 490 OFFCURVE",
"139 418 OFFCURVE",
"122 380 QCURVE",
"62 380 LINE SMOOTH",
"58 380 OFFCURVE",
"53 373 OFFCURVE",
"52 365 OFFCURVE",
"56 358 OFFCURVE",
"60 358 QCURVE SMOOTH",
"112 358 LINE",
"100 329 OFFCURVE",
"75 261 OFFCURVE",
"54 193 OFFCURVE",
"37 128 OFFCURVE",
"34 103 QCURVE SMOOTH",
"28 62 OFFCURVE",
"55 13 OFFCURVE",
"99 -4 OFFCURVE",
"152 8 OFFCURVE",
"172 28 QCURVE SMOOTH",
"186 42 OFFCURVE",
"208 68 OFFCURVE",
"229 103 OFFCURVE",
"253 149 OFFCURVE",
"270 184 QCURVE SMOOTH",
"278 199 OFFCURVE",
"263 204 OFFCURVE",
"257 190 QCURVE SMOOTH",
"237 149 OFFCURVE",
"186 65 OFFCURVE",
"151 39 QCURVE SMOOTH",
"139 30 OFFCURVE",
"111 25 OFFCURVE",
"91 37 OFFCURVE",
"81 66 OFFCURVE",
"87 91 QCURVE SMOOTH",
"91 113 OFFCURVE",
"95 132 QCURVE SMOOTH",
"99 149 OFFCURVE",
"106 183 OFFCURVE",
"110 193 QCURVE",
"155 234 OFFCURVE",
"217 314 OFFCURVE",
"243 358 QCURVE",
"301 358 LINE SMOOTH",
"305 358 OFFCURVE",
"309 365 OFFCURVE",
"310 373 OFFCURVE",
"307 380 OFFCURVE",
"303 380 QCURVE",
"303 380 LINE"
);
},
{
closed = 1;
nodes = (
"261 430 OFFCURVE",
"233 380 QCURVE",
"183 380 LINE",
"202 423 OFFCURVE",
"236 500 OFFCURVE",
"254 526 QCURVE SMOOTH",
"277 559 OFFCURVE",
"297 565 OFFCURVE",
"300 540 OFFCURVE",
"290 498 OFFCURVE",
"283 482 QCURVE",
"283 482 LINE"
);
},
{
closed = 1;
nodes = (
"220 358 LINE",
"198 322 OFFCURVE",
"148 254 OFFCURVE",
"119 225 QCURVE",
"130 251 OFFCURVE",
"157 321 OFFCURVE",
"173 358 QCURVE",
"173 358 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 200;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"435 199 OFFCURVE",
"420 206 OFFCURVE",
"414 193 QCURVE SMOOTH",
"401 166 OFFCURVE",
"370 107 OFFCURVE",
"336 58 OFFCURVE",
"299 26 OFFCURVE",
"281 26 QCURVE SMOOTH",
"270 27 OFFCURVE",
"255 54 OFFCURVE",
"262 86 QCURVE SMOOTH",
"264 99 OFFCURVE",
"278 136 OFFCURVE",
"297 179 OFFCURVE",
"318 224 OFFCURVE",
"329 245 QCURVE SMOOTH",
"340 268 OFFCURVE",
"356 299 OFFCURVE",
"371 320 OFFCURVE",
"387 335 OFFCURVE",
"398 344 QCURVE",
"344 344 LINE SMOOTH",
"330 344 OFFCURVE",
"311 335 OFFCURVE",
"305 323 QCURVE SMOOTH",
"291 293 OFFCURVE",
"256 223 OFFCURVE",
"218 152 OFFCURVE",
"177 86 OFFCURVE",
"156 62 QCURVE SMOOTH",
"132 34 OFFCURVE",
"94 19 OFFCURVE",
"75 40 OFFCURVE",
"79 92 OFFCURVE",
"97 131 QCURVE SMOOTH",
"104 145 OFFCURVE",
"124 189 OFFCURVE",
"135 210 QCURVE SMOOTH",
"146 234 OFFCURVE",
"160 260 QCURVE SMOOTH",
"170 281 OFFCURVE",
"186 307 OFFCURVE",
"201 325 OFFCURVE",
"215 338 OFFCURVE",
"224 344 QCURVE",
"163 344 LINE SMOOTH",
"149 344 OFFCURVE",
"130 335 OFFCURVE",
"124 323 QCURVE SMOOTH",
"113 300 OFFCURVE",
"83 242 OFFCURVE",
"68 213 QCURVE SMOOTH",
"63 204 OFFCURVE",
"55 186 OFFCURVE",
"50 178 QCURVE SMOOTH",
"45 168 OFFCURVE",
"54 162 OFFCURVE",
"59 162 QCURVE",
"52 148 OFFCURVE",
"37 121 OFFCURVE",
"26 92 OFFCURVE",
"22 62 OFFCURVE",
"25 46 QCURVE SMOOTH",
"28 32 OFFCURVE",
"43 14 OFFCURVE",
"61 4 OFFCURVE",
"80 1 OFFCURVE",
"88 1 QCURVE SMOOTH",
"106 1 OFFCURVE",
"144 24 OFFCURVE",
"179 61 OFFCURVE",
"210 106 OFFCURVE",
"223 129 QCURVE",
"213 99 OFFCURVE",
"213 51 OFFCURVE",
"226 18 OFFCURVE",
"252 1 OFFCURVE",
"269 1 QCURVE SMOOTH",
"296 1 OFFCURVE",
"344 39 OFFCURVE",
"384 95 OFFCURVE",
"416 158 OFFCURVE",
"428 184 QCURVE",
"428 184 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 5 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
75 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 75 23 75 39 75 55 75 71 75 87 75 103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 75 23 75 39 75 55 75 71 75 87 75 103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 75 23 75 39 75 55 75 71 75 87 75 103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 357;
}
);
note = u;
rightKerningGroup = u;
unicode = 0075;
},
{
glyphname = v;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"327 352 OFFCURVE",
"310 368 OFFCURVE",
"280 359 OFFCURVE",
"245 324 OFFCURVE",
"235 291 QCURVE SMOOTH",
"228 271 OFFCURVE",
"232 214 OFFCURVE",
"243 191 QCURVE",
"228 154 OFFCURVE",
"193 88 OFFCURVE",
"157 42 OFFCURVE",
"119 21 OFFCURVE",
"101 29 QCURVE SMOOTH",
"91 33 OFFCURVE",
"89 64 OFFCURVE",
"98 106 OFFCURVE",
"116 156 OFFCURVE",
"125 181 QCURVE SMOOTH",
"135 206 OFFCURVE",
"153 277 OFFCURVE",
"154 302 QCURVE SMOOTH",
"155 320 OFFCURVE",
"152 339 OFFCURVE",
"143 345 OFFCURVE",
"129 344 OFFCURVE",
"118 343 QCURVE",
"115 342 OFFCURVE",
"98 341 OFFCURVE",
"90 339 QCURVE SMOOTH",
"80 337 OFFCURVE",
"69 335 QCURVE",
"79 332 OFFCURVE",
"86 304 OFFCURVE",
"84 266 OFFCURVE",
"73 226 OFFCURVE",
"66 211 QCURVE SMOOTH",
"61 202 OFFCURVE",
"53 185 OFFCURVE",
"48 177 QCURVE SMOOTH",
"43 166 OFFCURVE",
"58 161 OFFCURVE",
"66 174 QCURVE",
"55 145 OFFCURVE",
"38 85 OFFCURVE",
"35 35 OFFCURVE",
"50 -1 OFFCURVE",
"73 -5 QCURVE SMOOTH",
"107 -12 OFFCURVE",
"167 22 OFFCURVE",
"218 85 OFFCURVE",
"259 166 OFFCURVE",
"291 245 OFFCURVE",
"312 313 OFFCURVE",
"318 331 QCURVE",
"318 334 OFFCURVE",
"320 336 QCURVE",
"320 336 LINE"
);
}
);
width = 262;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"507 353 OFFCURVE",
"491 368 OFFCURVE",
"462 360 OFFCURVE",
"430 325 OFFCURVE",
"420 292 QCURVE SMOOTH",
"414 272 OFFCURVE",
"417 215 OFFCURVE",
"428 192 QCURVE",
"414 156 OFFCURVE",
"380 91 OFFCURVE",
"343 43 OFFCURVE",
"302 16 OFFCURVE",
"281 18 QCURVE SMOOTH",
"265 19 OFFCURVE",
"254 44 OFFCURVE",
"257 80 OFFCURVE",
"269 124 OFFCURVE",
"285 164 OFFCURVE",
"299 196 OFFCURVE",
"302 202 QCURVE SMOOTH",
"312 223 OFFCURVE",
"325 251 OFFCURVE",
"337 273 OFFCURVE",
"349 294 OFFCURVE",
"357 307 QCURVE SMOOTH",
"366 323 OFFCURVE",
"391 338 OFFCURVE",
"397 344 QCURVE",
"336 344 LINE SMOOTH",
"322 344 OFFCURVE",
"303 335 OFFCURVE",
"298 323 QCURVE SMOOTH",
"289 305 OFFCURVE",
"254 229 OFFCURVE",
"209 144 OFFCURVE",
"159 64 OFFCURVE",
"136 42 QCURVE SMOOTH",
"117 24 OFFCURVE",
"88 21 OFFCURVE",
"75 46 OFFCURVE",
"81 96 OFFCURVE",
"97 131 QCURVE SMOOTH",
"104 145 OFFCURVE",
"124 189 OFFCURVE",
"135 210 QCURVE SMOOTH",
"146 234 OFFCURVE",
"160 260 QCURVE SMOOTH",
"170 281 OFFCURVE",
"186 307 OFFCURVE",
"201 325 OFFCURVE",
"215 338 OFFCURVE",
"224 344 QCURVE",
"163 344 LINE SMOOTH",
"149 344 OFFCURVE",
"130 335 OFFCURVE",
"124 323 QCURVE SMOOTH",
"113 300 OFFCURVE",
"83 242 OFFCURVE",
"68 213 QCURVE SMOOTH",
"63 204 OFFCURVE",
"55 186 OFFCURVE",
"50 178 QCURVE SMOOTH",
"45 168 OFFCURVE",
"54 162 OFFCURVE",
"59 162 QCURVE",
"52 148 OFFCURVE",
"37 121 OFFCURVE",
"26 92 OFFCURVE",
"22 62 OFFCURVE",
"25 46 QCURVE SMOOTH",
"30 24 OFFCURVE",
"66 0 OFFCURVE",
"87 0 QCURVE SMOOTH",
"108 0 OFFCURVE",
"148 30 OFFCURVE",
"183 73 OFFCURVE",
"211 119 OFFCURVE",
"220 135 QCURVE",
"215 119 OFFCURVE",
"210 76 OFFCURVE",
"215 36 OFFCURVE",
"235 4 OFFCURVE",
"255 0 QCURVE SMOOTH",
"291 -8 OFFCURVE",
"353 26 OFFCURVE",
"403 88 OFFCURVE",
"443 168 OFFCURVE",
"473 247 OFFCURVE",
"493 315 OFFCURVE",
"498 332 QCURVE",
"498 335 OFFCURVE",
"500 337 QCURVE",
"500 337 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 476;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"410 198 OFFCURVE",
"398 206 OFFCURVE",
"390 192 QCURVE SMOOTH",
"376 165 OFFCURVE",
"343 102 OFFCURVE",
"305 50 OFFCURVE",
"263 20 OFFCURVE",
"239 25 QCURVE SMOOTH",
"220 29 OFFCURVE",
"204 90 OFFCURVE",
"212 134 QCURVE",
"220 158 OFFCURVE",
"244 208 OFFCURVE",
"273 254 OFFCURVE",
"305 294 OFFCURVE",
"320 308 QCURVE",
"325 291 OFFCURVE",
"345 291 QCURVE SMOOTH",
"359 291 OFFCURVE",
"382 309 OFFCURVE",
"385 323 QCURVE SMOOTH",
"387 333 OFFCURVE",
"381 346 OFFCURVE",
"369 354 OFFCURVE",
"353 355 OFFCURVE",
"345 353 QCURVE SMOOTH",
"334 350 OFFCURVE",
"304 323 OFFCURVE",
"271 283 OFFCURVE",
"239 234 OFFCURVE",
"226 209 QCURVE",
"230 230 OFFCURVE",
"234 273 OFFCURVE",
"227 309 OFFCURVE",
"206 333 OFFCURVE",
"186 335 QCURVE SMOOTH",
"172 337 OFFCURVE",
"144 323 OFFCURVE",
"130 312 QCURVE SMOOTH",
"120 303 OFFCURVE",
"96 266 OFFCURVE",
"72 222 OFFCURVE",
"51 179 OFFCURVE",
"44 164 QCURVE SMOOTH",
"36 148 OFFCURVE",
"46 139 OFFCURVE",
"53 151 QCURVE SMOOTH",
"57 159 OFFCURVE",
"75 191 OFFCURVE",
"93 227 OFFCURVE",
"110 258 OFFCURVE",
"115 266 QCURVE SMOOTH",
"129 289 OFFCURVE",
"153 308 OFFCURVE",
"170 308 OFFCURVE",
"180 293 OFFCURVE",
"180 281 QCURVE SMOOTH",
"181 262 OFFCURVE",
"175 225 OFFCURVE",
"171 205 QCURVE",
"160 170 OFFCURVE",
"127 102 OFFCURVE",
"90 44 OFFCURVE",
"52 3 OFFCURVE",
"37 -4 QCURVE SMOOTH",
"3 -19 OFFCURVE",
"-14 -4 QCURVE",
"-17 0 OFFCURVE",
"-26 -2 OFFCURVE",
"-32 -8 OFFCURVE",
"-34 -16 OFFCURVE",
"-31 -20 QCURVE",
"-16 -35 OFFCURVE",
"26 -33 OFFCURVE",
"44 -24 QCURVE SMOOTH",
"71 -11 OFFCURVE",
"133 68 OFFCURVE",
"159 118 QCURVE",
"158 113 OFFCURVE",
"158 103 OFFCURVE",
"158 98 QCURVE SMOOTH",
"157 81 OFFCURVE",
"166 47 OFFCURVE",
"184 18 OFFCURVE",
"212 0 OFFCURVE",
"231 0 QCURVE SMOOTH",
"267 0 OFFCURVE",
"321 40 OFFCURVE",
"362 98 OFFCURVE",
"393 162 OFFCURVE",
"405 187 QCURVE",
"405 187 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"476 197 OFFCURVE",
"462 204 OFFCURVE",
"455 191 QCURVE SMOOTH",
"447 177 OFFCURVE",
"415 115 OFFCURVE",
"392 81 QCURVE SMOOTH",
"377 60 OFFCURVE",
"341 27 OFFCURVE",
"303 3 OFFCURVE",
"264 -13 OFFCURVE",
"248 -18 QCURVE",
"270 42 OFFCURVE",
"309 160 OFFCURVE",
"328 211 QCURVE SMOOTH",
"337 236 OFFCURVE",
"353 277 OFFCURVE",
"371 309 OFFCURVE",
"392 334 OFFCURVE",
"406 344 QCURVE",
"352 344 LINE SMOOTH",
"338 344 OFFCURVE",
"319 335 OFFCURVE",
"313 323 QCURVE SMOOTH",
"299 293 OFFCURVE",
"262 223 OFFCURVE",
"221 152 OFFCURVE",
"177 86 OFFCURVE",
"156 62 QCURVE SMOOTH",
"132 34 OFFCURVE",
"94 19 OFFCURVE",
"75 40 OFFCURVE",
"79 92 OFFCURVE",
"97 131 QCURVE SMOOTH",
"118 176 OFFCURVE",
"161 264 OFFCURVE",
"187 308 QCURVE SMOOTH",
"196 324 OFFCURVE",
"217 338 OFFCURVE",
"224 344 QCURVE",
"163 344 LINE SMOOTH",
"149 344 OFFCURVE",
"130 335 OFFCURVE",
"124 323 QCURVE SMOOTH",
"113 300 OFFCURVE",
"83 242 OFFCURVE",
"68 213 QCURVE SMOOTH",
"63 204 OFFCURVE",
"55 186 OFFCURVE",
"50 178 QCURVE SMOOTH",
"45 168 OFFCURVE",
"54 162 OFFCURVE",
"59 162 QCURVE",
"52 148 OFFCURVE",
"37 121 OFFCURVE",
"26 92 OFFCURVE",
"22 62 OFFCURVE",
"25 46 QCURVE SMOOTH",
"28 32 OFFCURVE",
"43 14 OFFCURVE",
"61 4 OFFCURVE",
"80 1 OFFCURVE",
"88 1 QCURVE SMOOTH",
"117 1 OFFCURVE",
"170 42 OFFCURVE",
"215 99 OFFCURVE",
"251 162 OFFCURVE",
"264 185 QCURVE",
"258 165 OFFCURVE",
"240 109 OFFCURVE",
"218 47 OFFCURVE",
"192 -15 OFFCURVE",
"178 -40 QCURVE",
"117 -57 OFFCURVE",
"-14 -88 OFFCURVE",
"-65 -112 QCURVE SMOOTH",
"-94 -126 OFFCURVE",
"-145 -166 OFFCURVE",
"-159 -194 QCURVE SMOOTH",
"-170 -215 OFFCURVE",
"-176 -258 OFFCURVE",
"-159 -294 OFFCURVE",
"-117 -316 OFFCURVE",
"-79 -316 QCURVE SMOOTH",
"-24 -316 OFFCURVE",
"70 -265 OFFCURVE",
"146 -186 OFFCURVE",
"207 -92 OFFCURVE",
"231 -50 QCURVE",
"285 -31 OFFCURVE",
"354 8 OFFCURVE",
"403 59 OFFCURVE",
"443 130 OFFCURVE",
"469 182 QCURVE",
"469 182 LINE"
);
},
{
closed = 1;
nodes = (
"154 -82 OFFCURVE",
"143 -101 OFFCURVE",
"138 -109 QCURVE SMOOTH",
"121 -133 OFFCURVE",
"66 -197 OFFCURVE",
"1 -255 OFFCURVE",
"-69 -296 OFFCURVE",
"-102 -296 QCURVE SMOOTH",
"-134 -296 OFFCURVE",
"-154 -258 OFFCURVE",
"-137 -205 OFFCURVE",
"-86 -151 OFFCURVE",
"-48 -134 QCURVE SMOOTH",
"-27 -125 OFFCURVE",
"25 -108 OFFCURVE",
"81 -92 OFFCURVE",
"136 -78 OFFCURVE",
"160 -72 QCURVE",
"160 -72 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
103 1 10 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 399;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"419 199 OFFCURVE",
"405 205 OFFCURVE",
"398 192 QCURVE SMOOTH",
"383 161 OFFCURVE",
"350 101 OFFCURVE",
"312 52 OFFCURVE",
"269 18 OFFCURVE",
"244 13 QCURVE",
"246 19 OFFCURVE",
"250 39 OFFCURVE",
"253 61 OFFCURVE",
"255 81 OFFCURVE",
"255 86 QCURVE SMOOTH",
"254 114 OFFCURVE",
"224 152 OFFCURVE",
"186 151 QCURVE",
"234 180 OFFCURVE",
"282 256 OFFCURVE",
"284 289 QCURVE SMOOTH",
"285 319 OFFCURVE",
"245 352 OFFCURVE",
"186 351 OFFCURVE",
"121 312 OFFCURVE",
"98 270 QCURVE SMOOTH",
"81 240 OFFCURVE",
"53 182 OFFCURVE",
"39 156 QCURVE SMOOTH",
"31 139 OFFCURVE",
"45 132 OFFCURVE",
"51 145 QCURVE SMOOTH",
"57 157 OFFCURVE",
"71 186 OFFCURVE",
"86 213 OFFCURVE",
"99 237 OFFCURVE",
"104 245 QCURVE SMOOTH",
"127 284 OFFCURVE",
"181 305 OFFCURVE",
"222 288 OFFCURVE",
"236 243 OFFCURVE",
"218 216 QCURVE SMOOTH",
"213 208 OFFCURVE",
"195 185 OFFCURVE",
"168 159 OFFCURVE",
"131 135 OFFCURVE",
"106 128 QCURVE SMOOTH",
"100 126 OFFCURVE",
"96 118 OFFCURVE",
"99 111 OFFCURVE",
"108 107 OFFCURVE",
"114 109 QCURVE SMOOTH",
"126 114 OFFCURVE",
"148 123 OFFCURVE",
"158 128 QCURVE",
"180 132 OFFCURVE",
"195 103 OFFCURVE",
"194 58 OFFCURVE",
"183 7 OFFCURVE",
"177 -11 QCURVE",
"129 -26 OFFCURVE",
"23 -58 OFFCURVE",
"-75 -96 OFFCURVE",
"-154 -143 OFFCURVE",
"-174 -173 QCURVE SMOOTH",
"-194 -204 OFFCURVE",
"-192 -261 OFFCURVE",
"-158 -300 OFFCURVE",
"-98 -314 OFFCURVE",
"-60 -303 QCURVE SMOOTH",
"49 -271 OFFCURVE",
"200 -118 OFFCURVE",
"238 -12 QCURVE",
"270 -6 OFFCURVE",
"319 31 OFFCURVE",
"360 84 OFFCURVE",
"395 149 OFFCURVE",
"412 184 QCURVE",
"412 184 LINE"
);
},
{
closed = 1;
nodes = (
"148 -89 OFFCURVE",
"84 -176 OFFCURVE",
"11 -240 OFFCURVE",
"-62 -280 OFFCURVE",
"-91 -286 QCURVE SMOOTH",
"-130 -294 OFFCURVE",
"-162 -260 OFFCURVE",
"-154 -204 OFFCURVE",
"-113 -142 OFFCURVE",
"-80 -123 QCURVE SMOOTH",
"-58 -110 OFFCURVE",
"0 -87 OFFCURVE",
"65 -66 OFFCURVE",
"135 -47 OFFCURVE",
"168 -36 QCURVE",
"168 -36 LINE"
);
}
);
width = 341;
}
);
note = z;
unicode = 007A;
},
{
glyphname = z.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"270 -7 OFFCURVE",
"322 29 OFFCURVE",
"367 90 OFFCURVE",
"407 169 OFFCURVE",
"424 210 QCURVE SMOOTH",
"430 224 OFFCURVE",
"413 225 OFFCURVE",
"410 218 QCURVE SMOOTH",
"401 200 OFFCURVE",
"375 144 OFFCURVE",
"341 90 OFFCURVE",
"301 46 OFFCURVE",
"278 40 QCURVE SMOOTH",
"267 37 OFFCURVE",
"235 39 OFFCURVE",
"201 45 OFFCURVE",
"169 54 OFFCURVE",
"157 58 QCURVE",
"180 79 OFFCURVE",
"226 145 OFFCURVE",
"274 214 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"103 237 OFFCURVE",
"137 271 OFFCURVE",
"172 281 OFFCURVE",
"196 281 QCURVE SMOOTH",
"216 281 OFFCURVE",
"262 272 OFFCURVE",
"280 267 QCURVE",
"260 246 OFFCURVE",
"216 183 OFFCURVE",
"171 120 OFFCURVE",
"128 69 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE",
"242 -6 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
44 24 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = z.alt;
},
{
glyphname = z.stroke;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"315 156 OFFCURVE",
"311 175 OFFCURVE",
"298 175 QCURVE SMOOTH",
"284 175 OFFCURVE",
"258 176 OFFCURVE",
"247 176 QCURVE",
"272 212 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"103 237 OFFCURVE",
"137 271 OFFCURVE",
"172 281 OFFCURVE",
"196 281 QCURVE SMOOTH",
"216 281 OFFCURVE",
"262 272 OFFCURVE",
"280 267 QCURVE",
"263 250 OFFCURVE",
"233 206 OFFCURVE",
"213 177 QCURVE",
"187 178 OFFCURVE",
"151 178 OFFCURVE",
"137 178 QCURVE SMOOTH",
"129 178 OFFCURVE",
"124 167 OFFCURVE",
"126 154 OFFCURVE",
"133 143 OFFCURVE",
"137 144 QCURVE",
"194 150 LINE",
"171 119 OFFCURVE",
"127 68 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE SMOOTH",
"270 -7 OFFCURVE",
"322 29 OFFCURVE",
"367 90 OFFCURVE",
"407 169 OFFCURVE",
"424 210 QCURVE SMOOTH",
"430 224 OFFCURVE",
"413 225 OFFCURVE",
"410 218 QCURVE SMOOTH",
"401 200 OFFCURVE",
"375 144 OFFCURVE",
"341 90 OFFCURVE",
"301 46 OFFCURVE",
"278 40 QCURVE SMOOTH",
"267 37 OFFCURVE",
"235 39 OFFCURVE",
"201 45 OFFCURVE",
"169 54 OFFCURVE",
"157 58 QCURVE",
"177 76 OFFCURVE",
"210 122 OFFCURVE",
"231 153 QCURVE",
"264 156 OFFCURVE",
"301 156 QCURVE",
"301 156 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
48 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
96 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
99 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = z.stroke;
},
{
glyphname = braceleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"421 726 LINE",
"417 726 LINE SMOOTH",
"318 726 OFFCURVE",
"271 691 QCURVE SMOOTH",
"248 673 OFFCURVE",
"219 613 OFFCURVE",
"200 546 OFFCURVE",
"188 479 OFFCURVE",
"183 454 QCURVE SMOOTH",
"168 377 OFFCURVE",
"136 353 QCURVE SMOOTH",
"106 327 OFFCURVE",
"21 318 QCURVE",
"16 310 OFFCURVE",
"12 304 QCURVE SMOOTH",
"9 299 OFFCURVE",
"8 291 OFFCURVE",
"15 291 QCURVE SMOOTH",
"57 291 OFFCURVE",
"80 282 QCURVE SMOOTH",
"101 273 OFFCURVE",
"115 256 QCURVE SMOOTH",
"137 229 OFFCURVE",
"122 155 QCURVE SMOOTH",
"119 138 OFFCURVE",
"100 68 OFFCURVE",
"87 -8 OFFCURVE",
"88 -78 OFFCURVE",
"105 -96 QCURVE SMOOTH",
"138 -131 OFFCURVE",
"236 -131 QCURVE SMOOTH",
"241 -131 LINE SMOOTH",
"245 -131 OFFCURVE",
"250 -124 OFFCURVE",
"251 -115 OFFCURVE",
"248 -109 OFFCURVE",
"244 -109 QCURVE SMOOTH",
"176 -109 OFFCURVE",
"154 -83 QCURVE SMOOTH",
"132 -58 OFFCURVE",
"147 18 QCURVE SMOOTH",
"151 36 OFFCURVE",
"166 100 OFFCURVE",
"178 168 OFFCURVE",
"180 232 OFFCURVE",
"170 250 QCURVE SMOOTH",
"147 289 OFFCURVE",
"67 304 QCURVE",
"162 321 OFFCURVE",
"200 368 QCURVE SMOOTH",
"224 398 OFFCURVE",
"247 485 OFFCURVE",
"265 575 OFFCURVE",
"289 655 OFFCURVE",
"313 676 QCURVE SMOOTH",
"343 703 OFFCURVE",
"416 703 QCURVE SMOOTH",
"419 703 OFFCURVE",
"428 710 OFFCURVE",
"432 719 OFFCURVE",
"430 726 OFFCURVE",
"421 726 QCURVE",
"421 726 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
25 1 30 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
49 2 44 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
14 44 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 369;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"264 -231 LINE",
"264 749 LINE",
"221 749 LINE",
"221 -231 LINE",
"221 -231 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 3 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 485;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"400 311 OFFCURVE",
"381 337 QCURVE SMOOTH",
"369 353 OFFCURVE",
"373 407 OFFCURVE",
"392 472 OFFCURVE",
"416 544 OFFCURVE",
"433 611 OFFCURVE",
"434 669 OFFCURVE",
"420 687 QCURVE SMOOTH",
"394 722 OFFCURVE",
"291 722 QCURVE SMOOTH",
"286 722 LINE",
"279 715 OFFCURVE",
"275 710 QCURVE SMOOTH",
"272 705 OFFCURVE",
"272 699 OFFCURVE",
"280 699 QCURVE SMOOTH",
"352 699 OFFCURVE",
"370 672 QCURVE SMOOTH",
"388 646 OFFCURVE",
"365 572 QCURVE SMOOTH",
"360 554 OFFCURVE",
"340 493 OFFCURVE",
"324 426 OFFCURVE",
"318 363 OFFCURVE",
"327 344 QCURVE SMOOTH",
"348 303 OFFCURVE",
"423 290 QCURVE",
"336 273 OFFCURVE",
"293 235 QCURVE SMOOTH",
"261 206 OFFCURVE",
"226 116 OFFCURVE",
"198 22 OFFCURVE",
"167 -60 OFFCURVE",
"140 -82 QCURVE SMOOTH",
"107 -109 OFFCURVE",
"34 -109 QCURVE SMOOTH",
"24 -109 OFFCURVE",
"17 -130 OFFCURVE",
"26 -131 QCURVE SMOOTH",
"31 -131 LINE SMOOTH",
"129 -131 OFFCURVE",
"178 -97 QCURVE SMOOTH",
"204 -79 OFFCURVE",
"239 -23 OFFCURVE",
"262 42 OFFCURVE",
"280 111 OFFCURVE",
"301 174 OFFCURVE",
"328 226 OFFCURVE",
"349 242 QCURVE SMOOTH",
"394 277 OFFCURVE",
"468 277 QCURVE",
"475 284 OFFCURVE",
"479 290 QCURVE SMOOTH",
"482 295 OFFCURVE",
"483 303 OFFCURVE",
"477 304 QCURVE",
"477 304 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
45 2 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 2 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
29 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 485;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"454 495 OFFCURVE",
"448 498 OFFCURVE",
"440 499 OFFCURVE",
"433 498 OFFCURVE",
"432 496 QCURVE SMOOTH",
"424 479 OFFCURVE",
"397 459 OFFCURVE",
"377 461 QCURVE SMOOTH",
"362 462 OFFCURVE",
"333 473 OFFCURVE",
"303 485 OFFCURVE",
"272 496 OFFCURVE",
"256 497 QCURVE SMOOTH",
"239 498 OFFCURVE",
"209 485 OFFCURVE",
"185 462 OFFCURVE",
"165 435 OFFCURVE",
"158 422 QCURVE SMOOTH",
"157 420 OFFCURVE",
"164 417 OFFCURVE",
"172 416 OFFCURVE",
"180 418 OFFCURVE",
"181 420 QCURVE SMOOTH",
"189 434 OFFCURVE",
"215 455 OFFCURVE",
"233 453 QCURVE SMOOTH",
"248 452 OFFCURVE",
"278 441 OFFCURVE",
"308 427 OFFCURVE",
"338 415 OFFCURVE",
"354 414 QCURVE SMOOTH",
"372 412 OFFCURVE",
"402 427 OFFCURVE",
"427 451 OFFCURVE",
"446 480 OFFCURVE",
"453 494 QCURVE",
"453 494 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
23 2 10 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 485;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = DEL;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 196;
}
);
note = DEL;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 602, 372}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"860 702 OFFCURVE",
"769 773 OFFCURVE",
"688 773 QCURVE SMOOTH",
"615 773 OFFCURVE",
"480 731 OFFCURVE",
"357 659 OFFCURVE",
"247 564 OFFCURVE",
"200 512 QCURVE",
"144 538 OFFCURVE",
"112 575 QCURVE SMOOTH",
"95 595 OFFCURVE",
"81 631 OFFCURVE",
"91 654 QCURVE SMOOTH",
"99 672 OFFCURVE",
"82 685 OFFCURVE",
"73 673 QCURVE",
"65 667 OFFCURVE",
"58 639 OFFCURVE",
"60 606 OFFCURVE",
"71 572 OFFCURVE",
"82 560 QCURVE SMOOTH",
"101 539 OFFCURVE",
"152 505 OFFCURVE",
"182 491 QCURVE",
"156 462 OFFCURVE",
"113 398 OFFCURVE",
"94 364 QCURVE SMOOTH",
"56 296 OFFCURVE",
"19 166 OFFCURVE",
"18 58 OFFCURVE",
"54 -20 OFFCURVE",
"90 -35 QCURVE SMOOTH",
"125 -50 OFFCURVE",
"203 -42 OFFCURVE",
"280 -8 OFFCURVE",
"356 46 OFFCURVE",
"423 107 OFFCURVE",
"481 168 OFFCURVE",
"501 192 QCURVE",
"485 160 OFFCURVE",
"461 72 OFFCURVE",
"466 31 QCURVE SMOOTH",
"470 -9 OFFCURVE",
"498 -50 OFFCURVE",
"538 -63 OFFCURVE",
"586 -51 OFFCURVE",
"634 -24 OFFCURVE",
"676 14 OFFCURVE",
"691 34 QCURVE SMOOTH",
"705 52 OFFCURVE",
"732 93 OFFCURVE",
"756 134 OFFCURVE",
"774 171 OFFCURVE",
"780 186 QCURVE SMOOTH",
"783 195 OFFCURVE",
"782 203 OFFCURVE",
"776 202 OFFCURVE",
"767 193 OFFCURVE",
"764 186 QCURVE SMOOTH",
"747 148 OFFCURVE",
"701 74 OFFCURVE",
"678 44 QCURVE SMOOTH",
"648 7 OFFCURVE",
"586 -35 OFFCURVE",
"540 -31 OFFCURVE",
"519 27 OFFCURVE",
"531 90 QCURVE SMOOTH",
"538 127 OFFCURVE",
"565 202 OFFCURVE",
"600 272 OFFCURVE",
"641 334 OFFCURVE",
"662 358 QCURVE SMOOTH",
"684 382 OFFCURVE",
"689 429 OFFCURVE",
"668 449 OFFCURVE",
"628 429 OFFCURVE",
"605 386 QCURVE SMOOTH",
"585 349 OFFCURVE",
"527 266 OFFCURVE",
"458 183 OFFCURVE",
"382 104 OFFCURVE",
"343 71 QCURVE SMOOTH",
"274 14 OFFCURVE",
"153 -27 OFFCURVE",
"78 9 OFFCURVE",
"64 122 OFFCURVE",
"102 218 QCURVE SMOOTH",
"115 251 OFFCURVE",
"154 324 OFFCURVE",
"195 392 OFFCURVE",
"233 451 OFFCURVE",
"247 470 QCURVE",
"318 447 OFFCURVE",
"464 439 OFFCURVE",
"549 447 QCURVE SMOOTH",
"636 455 OFFCURVE",
"755 498 OFFCURVE",
"828 555 OFFCURVE",
"860 619 OFFCURVE",
"860 646 QCURVE",
"860 646 LINE"
);
},
{
closed = 1;
nodes = (
"819 621 OFFCURVE",
"781 557 OFFCURVE",
"711 508 OFFCURVE",
"611 476 OFFCURVE",
"549 471 QCURVE SMOOTH",
"454 463 OFFCURVE",
"321 471 OFFCURVE",
"263 490 QCURVE",
"305 540 OFFCURVE",
"397 633 OFFCURVE",
"501 704 OFFCURVE",
"621 747 OFFCURVE",
"691 747 QCURVE SMOOTH",
"746 747 OFFCURVE",
"819 703 OFFCURVE",
"819 658 QCURVE",
"819 658 LINE"
);
},
{
closed = 1;
nodes = (
"756 876 OFFCURVE",
"775 897 OFFCURVE",
"788 898 QCURVE SMOOTH",
"801 899 OFFCURVE",
"818 878 OFFCURVE",
"816 862 QCURVE SMOOTH",
"814 846 OFFCURVE",
"796 823 OFFCURVE",
"782 823 QCURVE SMOOTH",
"769 823 OFFCURVE",
"753 844 OFFCURVE",
"754 860 QCURVE",
"754 860 LINE"
);
},
{
closed = 1;
nodes = (
"716 836 OFFCURVE",
"751 805 OFFCURVE",
"779 806 QCURVE SMOOTH",
"807 807 OFFCURVE",
"849 839 OFFCURVE",
"852 862 QCURVE SMOOTH",
"854 884 OFFCURVE",
"820 915 OFFCURVE",
"792 914 QCURVE SMOOTH",
"765 912 OFFCURVE",
"721 881 OFFCURVE",
"719 858 QCURVE",
"719 858 LINE"
);
}
);
width = 712;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 164, -93}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 710;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Eacute;
lastChange = "2020-07-16 15:58:57 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 624, 422}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 902;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = asciitilde;
transform = "{1, 0, 0, 1, 706, 419}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1039;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 458, 385}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 784;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 762, 262}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Udieresis;
unicode = 00DC;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 164, -18}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 130, -1}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 25, 21}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 177, -4}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = asciitilde;
transform = "{1, 0, 0, 1, -5, 27}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 141, -33}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, -54, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 147, -18}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 94, -10}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -18, 21}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 123, -23}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = iacute;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = acute;
transform = "{1, 0, 0, 1, 131, 2}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 168;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = igrave;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = grave;
transform = "{1, 0, 0, 1, 45, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 168;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = icircumflex;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -68, 17}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 168;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 69, -34}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 168;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = asciitilde;
transform = "{1, 0, 0, 1, -15, -4}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 195, 5}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 116, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -1, 21}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 157, -6}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = asciitilde;
transform = "{1, 0, 0, 1, -19, 17}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 187, -6}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 133, 3}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 22, 32}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 165, 13}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = dagger;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"429 366 OFFCURVE",
"412 366 QCURVE SMOOTH",
"406 366 LINE SMOOTH",
"383 366 OFFCURVE",
"350 362 OFFCURVE",
"338 360 QCURVE SMOOTH",
"331 358 OFFCURVE",
"318 358 OFFCURVE",
"312 357 QCURVE",
"325 374 OFFCURVE",
"360 416 OFFCURVE",
"396 457 OFFCURVE",
"428 494 OFFCURVE",
"438 506 QCURVE SMOOTH",
"443 511 OFFCURVE",
"440 515 QCURVE SMOOTH",
"434 522 OFFCURVE",
"416 527 OFFCURVE",
"398 526 OFFCURVE",
"384 520 OFFCURVE",
"381 517 QCURVE SMOOTH",
"341 472 OFFCURVE",
"274 391 OFFCURVE",
"245 350 QCURVE",
"195 343 LINE SMOOTH",
"123 334 OFFCURVE",
"112 325 QCURVE",
"103 320 OFFCURVE",
"91 311 OFFCURVE",
"91 306 QCURVE SMOOTH",
"91 303 OFFCURVE",
"94 302 QCURVE",
"96 298 OFFCURVE",
"102 298 QCURVE SMOOTH",
"103 298 OFFCURVE",
"113 300 QCURVE",
"116 300 LINE",
"146 305 OFFCURVE",
"199 314 OFFCURVE",
"222 318 QCURVE",
"146 211 OFFCURVE",
"59 28 OFFCURVE",
"33 -57 QCURVE SMOOTH",
"28 -78 OFFCURVE",
"20 -103 OFFCURVE",
"20 -108 QCURVE SMOOTH",
"20 -110 LINE SMOOTH",
"20 -118 OFFCURVE",
"33 -118 QCURVE SMOOTH",
"38 -118 OFFCURVE",
"42 -112 QCURVE",
"47 -89 OFFCURVE",
"53 -65 OFFCURVE",
"55 -58 QCURVE SMOOTH",
"67 -25 OFFCURVE",
"115 66 OFFCURVE",
"178 169 OFFCURVE",
"253 278 OFFCURVE",
"291 330 QCURVE",
"302 333 OFFCURVE",
"319 336 OFFCURVE",
"327 338 QCURVE SMOOTH",
"412 354 LINE SMOOTH",
"431 357 OFFCURVE",
"431 363 QCURVE",
"431 363 LINE"
);
}
);
width = 441;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = degree;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"227 714 OFFCURVE",
"189 752 OFFCURVE",
"163 752 QCURVE SMOOTH",
"137 752 OFFCURVE",
"99 714 OFFCURVE",
"99 688 QCURVE SMOOTH",
"99 662 OFFCURVE",
"133 624 OFFCURVE",
"163 624 QCURVE SMOOTH",
"189 624 OFFCURVE",
"227 661 OFFCURVE",
"227 688 QCURVE",
"227 688 LINE"
);
},
{
closed = 1;
nodes = (
"208 669 OFFCURVE",
"180 639 OFFCURVE",
"162 639 QCURVE SMOOTH",
"158 639 OFFCURVE",
"142 642 OFFCURVE",
"127 653 OFFCURVE",
"116 672 OFFCURVE",
"116 687 QCURVE SMOOTH",
"116 707 OFFCURVE",
"143 733 OFFCURVE",
"162 733 QCURVE SMOOTH",
"182 733 OFFCURVE",
"208 707 OFFCURVE",
"208 687 QCURVE",
"208 687 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
0 6 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 27 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
213 0 229 0 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 323;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"338 827 OFFCURVE",
"335 840 OFFCURVE",
"328 845 OFFCURVE",
"317 839 OFFCURVE",
"311 826 QCURVE SMOOTH",
"295 788 OFFCURVE",
"260 702 OFFCURVE",
"242 657 QCURVE",
"236 657 LINE SMOOTH",
"218 657 OFFCURVE",
"181 644 OFFCURVE",
"146 623 OFFCURVE",
"115 596 OFFCURVE",
"103 583 QCURVE SMOOTH",
"87 564 OFFCURVE",
"58 510 OFFCURVE",
"38 449 OFFCURVE",
"31 388 OFFCURVE",
"44 338 OFFCURVE",
"81 304 OFFCURVE",
"114 301 QCURVE",
"110 288 OFFCURVE",
"87 238 OFFCURVE",
"62 177 OFFCURVE",
"40 112 OFFCURVE",
"34 54 OFFCURVE",
"49 12 OFFCURVE",
"73 4 QCURVE SMOOTH",
"79 2 OFFCURVE",
"89 6 OFFCURVE",
"93 13 OFFCURVE",
"89 20 OFFCURVE",
"82 22 QCURVE SMOOTH",
"65 26 OFFCURVE",
"60 66 OFFCURVE",
"71 122 OFFCURVE",
"94 188 OFFCURVE",
"118 248 OFFCURVE",
"138 293 OFFCURVE",
"141 301 QCURVE",
"183 303 OFFCURVE",
"245 345 OFFCURVE",
"269 379 QCURVE SMOOTH",
"271 382 OFFCURVE",
"271 391 OFFCURVE",
"268 397 OFFCURVE",
"261 397 OFFCURVE",
"257 392 QCURVE SMOOTH",
"234 363 OFFCURVE",
"177 318 OFFCURVE",
"146 318 QCURVE SMOOTH",
"124 318 OFFCURVE",
"93 347 OFFCURVE",
"91 384 QCURVE SMOOTH",
"89 429 OFFCURVE",
"123 512 OFFCURVE",
"149 548 QCURVE SMOOTH",
"163 567 OFFCURVE",
"197 600 OFFCURVE",
"231 624 OFFCURVE",
"264 635 OFFCURVE",
"277 632 QCURVE SMOOTH",
"285 630 OFFCURVE",
"302 607 OFFCURVE",
"299 590 QCURVE",
"297 596 OFFCURVE",
"275 608 OFFCURVE",
"265 608 QCURVE SMOOTH",
"245 609 OFFCURVE",
"219 583 OFFCURVE",
"218 563 QCURVE SMOOTH",
"217 543 OFFCURVE",
"245 515 OFFCURVE",
"265 515 QCURVE SMOOTH",
"289 515 OFFCURVE",
"318 552 OFFCURVE",
"319 577 QCURVE SMOOTH",
"320 603 OFFCURVE",
"291 644 OFFCURVE",
"267 652 QCURVE",
"292 714 OFFCURVE",
"330 805 OFFCURVE",
"336 821 QCURVE",
"336 821 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 3 12 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 12 26 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
18 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
75 9 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
18 9 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 316;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"818 546 OFFCURVE",
"805 567 OFFCURVE",
"785 580 OFFCURVE",
"759 587 OFFCURVE",
"746 587 QCURVE SMOOTH",
"712 587 OFFCURVE",
"646 554 OFFCURVE",
"583 501 OFFCURVE",
"526 433 OFFCURVE",
"476 363 OFFCURVE",
"435 295 OFFCURVE",
"420 269 QCURVE",
"397 272 OFFCURVE",
"375 272 QCURVE SMOOTH",
"355 272 OFFCURVE",
"312 267 OFFCURVE",
"294 258 QCURVE SMOOTH",
"291 256 OFFCURVE",
"291 250 QCURVE SMOOTH",
"291 248 OFFCURVE",
"293 237 OFFCURVE",
"296 237 QCURVE SMOOTH",
"298 237 OFFCURVE",
"301 239 OFFCURVE",
"303 240 QCURVE SMOOTH",
"321 246 LINE SMOOTH",
"335 249 OFFCURVE",
"361 251 OFFCURVE",
"375 251 QCURVE SMOOTH",
"383 251 OFFCURVE",
"401 250 OFFCURVE",
"409 249 QCURVE",
"393 222 OFFCURVE",
"359 161 OFFCURVE",
"322 103 OFFCURVE",
"280 49 OFFCURVE",
"256 29 QCURVE",
"239 42 OFFCURVE",
"203 69 OFFCURVE",
"165 90 OFFCURVE",
"124 104 OFFCURVE",
"101 104 QCURVE SMOOTH",
"88 104 OFFCURVE",
"61 97 OFFCURVE",
"38 82 OFFCURVE",
"24 60 OFFCURVE",
"24 45 QCURVE SMOOTH",
"24 26 OFFCURVE",
"50 -1 OFFCURVE",
"87 -19 OFFCURVE",
"128 -27 OFFCURVE",
"143 -27 QCURVE SMOOTH",
"165 -27 OFFCURVE",
"206 -16 OFFCURVE",
"226 -7 QCURVE",
"239 -14 OFFCURVE",
"293 -36 OFFCURVE",
"354 -57 OFFCURVE",
"411 -75 OFFCURVE",
"426 -78 QCURVE SMOOTH",
"449 -83 OFFCURVE",
"497 -90 OFFCURVE",
"521 -90 QCURVE SMOOTH",
"543 -90 OFFCURVE",
"589 -82 OFFCURVE",
"628 -62 OFFCURVE",
"654 -27 OFFCURVE",
"657 -1 QCURVE SMOOTH",
"657 1 LINE SMOOTH",
"657 8 OFFCURVE",
"653 8 QCURVE SMOOTH",
"649 8 OFFCURVE",
"649 3 QCURVE SMOOTH",
"649 -21 OFFCURVE",
"625 -53 OFFCURVE",
"589 -72 OFFCURVE",
"546 -81 OFFCURVE",
"527 -81 QCURVE SMOOTH",
"502 -81 OFFCURVE",
"478 -75 QCURVE SMOOTH",
"460 -71 OFFCURVE",
"405 -51 OFFCURVE",
"347 -27 OFFCURVE",
"295 0 OFFCURVE",
"279 11 QCURVE",
"352 53 OFFCURVE",
"447 166 OFFCURVE",
"485 239 QCURVE",
"500 237 OFFCURVE",
"529 235 OFFCURVE",
"543 235 QCURVE SMOOTH",
"554 235 OFFCURVE",
"582 239 OFFCURVE",
"592 243 QCURVE SMOOTH",
"594 244 OFFCURVE",
"595 249 OFFCURVE",
"595 251 QCURVE SMOOTH",
"595 253 OFFCURVE",
"594 264 OFFCURVE",
"590 264 QCURVE SMOOTH",
"589 264 OFFCURVE",
"574 260 OFFCURVE",
"572 259 QCURVE",
"557 256 OFFCURVE",
"543 256 QCURVE SMOOTH",
"518 256 OFFCURVE",
"496 259 QCURVE",
"505 279 OFFCURVE",
"523 317 OFFCURVE",
"531 337 QCURVE SMOOTH",
"542 363 OFFCURVE",
"568 412 OFFCURVE",
"584 435 QCURVE SMOOTH",
"598 455 OFFCURVE",
"638 500 OFFCURVE",
"686 539 OFFCURVE",
"739 565 OFFCURVE",
"766 565 QCURVE SMOOTH",
"783 565 OFFCURVE",
"804 550 OFFCURVE",
"804 532 QCURVE SMOOTH",
"804 510 OFFCURVE",
"779 463 OFFCURVE",
"743 418 OFFCURVE",
"702 380 OFFCURVE",
"687 367 QCURVE SMOOTH",
"681 363 OFFCURVE",
"681 359 QCURVE SMOOTH",
"681 355 OFFCURVE",
"686 355 QCURVE SMOOTH",
"693 355 OFFCURVE",
"698 360 QCURVE",
"715 372 OFFCURVE",
"757 412 OFFCURVE",
"793 458 OFFCURVE",
"818 508 OFFCURVE",
"818 531 QCURVE",
"818 531 LINE"
);
},
{
closed = 1;
nodes = (
"176 -18 OFFCURVE",
"136 -18 QCURVE SMOOTH",
"131 -18 OFFCURVE",
"123 -18 OFFCURVE",
"118 -17 QCURVE SMOOTH",
"105 -16 OFFCURVE",
"75 -5 OFFCURVE",
"49 13 OFFCURVE",
"32 37 OFFCURVE",
"32 52 QCURVE SMOOTH",
"32 66 OFFCURVE",
"50 80 OFFCURVE",
"63 80 QCURVE SMOOTH",
"77 80 OFFCURVE",
"117 62 OFFCURVE",
"159 36 OFFCURVE",
"198 10 OFFCURVE",
"211 2 QCURVE",
"211 2 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
82 3 85 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 82 21 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
137 85 82 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
100 2 150 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
52 150 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
137 150 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
150 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
153 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
153 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 573;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = bullet;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"455 15 OFFCURVE",
"576 67 OFFCURVE",
"666 157 OFFCURVE",
"718 277 OFFCURVE",
"718 346 QCURVE SMOOTH",
"718 415 OFFCURVE",
"666 535 OFFCURVE",
"576 625 OFFCURVE",
"455 677 OFFCURVE",
"386 677 QCURVE SMOOTH",
"317 677 OFFCURVE",
"197 625 OFFCURVE",
"107 535 OFFCURVE",
"55 415 OFFCURVE",
"55 346 QCURVE SMOOTH",
"55 277 OFFCURVE",
"107 157 OFFCURVE",
"197 67 OFFCURVE",
"317 15 OFFCURVE",
"386 15 QCURVE",
"386 15 LINE"
);
}
);
width = 766;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"604 654 LINE",
"432 654 LINE SMOOTH",
"407 654 OFFCURVE",
"356 650 OFFCURVE",
"330 640 QCURVE SMOOTH",
"282 621 OFFCURVE",
"213 549 OFFCURVE",
"197 505 QCURVE SMOOTH",
"171 434 OFFCURVE",
"227 363 OFFCURVE",
"295 363 QCURVE",
"162 0 LINE",
"229 0 LINE",
"450 604 LINE",
"499 604 LINE",
"278 0 LINE",
"345 0 LINE",
"566 604 LINE",
"586 604 LINE",
"586 604 LINE"
);
}
);
width = 403;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = germandbls;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"299 270 OFFCURVE",
"312 229 OFFCURVE",
"324 186 OFFCURVE",
"333 146 OFFCURVE",
"332 130 QCURVE SMOOTH",
"330 90 OFFCURVE",
"305 39 OFFCURVE",
"288 26 QCURVE",
"271 34 OFFCURVE",
"244 74 OFFCURVE",
"246 103 QCURVE SMOOTH",
"247 124 OFFCURVE",
"223 139 OFFCURVE",
"208 137 QCURVE SMOOTH",
"190 136 OFFCURVE",
"167 92 OFFCURVE",
"172 39 OFFCURVE",
"213 -4 OFFCURVE",
"258 -4 QCURVE SMOOTH",
"276 -4 OFFCURVE",
"299 6 QCURVE",
"341 -7 OFFCURVE",
"407 24 OFFCURVE",
"458 83 OFFCURVE",
"495 158 OFFCURVE",
"509 189 QCURVE SMOOTH",
"513 197 OFFCURVE",
"498 203 OFFCURVE",
"494 195 QCURVE SMOOTH",
"486 180 OFFCURVE",
"467 143 OFFCURVE",
"447 107 OFFCURVE",
"428 74 OFFCURVE",
"419 64 QCURVE SMOOTH",
"400 41 OFFCURVE",
"355 14 OFFCURVE",
"329 18 QCURVE SMOOTH",
"322 19 LINE",
"351 39 OFFCURVE",
"391 101 OFFCURVE",
"393 130 QCURVE SMOOTH",
"394 146 OFFCURVE",
"381 189 OFFCURVE",
"360 232 OFFCURVE",
"337 274 OFFCURVE",
"327 289 QCURVE SMOOTH",
"310 316 OFFCURVE",
"325 362 OFFCURVE",
"363 398 OFFCURVE",
"408 427 OFFCURVE",
"422 438 QCURVE SMOOTH",
"489 495 OFFCURVE",
"491 567 QCURVE SMOOTH",
"491 586 OFFCURVE",
"486 621 OFFCURVE",
"469 651 OFFCURVE",
"438 675 OFFCURVE",
"414 684 QCURVE SMOOTH",
"372 698 OFFCURVE",
"310 692 OFFCURVE",
"260 659 OFFCURVE",
"222 604 OFFCURVE",
"204 570 QCURVE",
"167 481 OFFCURVE",
"123 370 OFFCURVE",
"94 298 OFFCURVE",
"76 250 OFFCURVE",
"56 198 OFFCURVE",
"29 128 OFFCURVE",
"6 69 QCURVE SMOOTH",
"-28 -16 OFFCURVE",
"-96 -142 OFFCURVE",
"-170 -231 OFFCURVE",
"-249 -284 OFFCURVE",
"-294 -296 QCURVE SMOOTH",
"-305 -299 OFFCURVE",
"-329 -298 OFFCURVE",
"-352 -292 OFFCURVE",
"-370 -279 OFFCURVE",
"-374 -270 QCURVE",
"-360 -282 OFFCURVE",
"-344 -282 QCURVE SMOOTH",
"-324 -282 OFFCURVE",
"-292 -253 OFFCURVE",
"-290 -233 QCURVE SMOOTH",
"-288 -213 OFFCURVE",
"-314 -184 OFFCURVE",
"-334 -184 QCURVE SMOOTH",
"-349 -184 OFFCURVE",
"-374 -197 OFFCURVE",
"-392 -218 OFFCURVE",
"-402 -245 OFFCURVE",
"-401 -260 QCURVE SMOOTH",
"-398 -298 OFFCURVE",
"-337 -328 OFFCURVE",
"-294 -325 QCURVE SMOOTH",
"-264 -323 OFFCURVE",
"-201 -296 OFFCURVE",
"-140 -254 OFFCURVE",
"-82 -200 OFFCURVE",
"-57 -171 QCURVE SMOOTH",
"-15 -123 OFFCURVE",
"58 37 OFFCURVE",
"127 232 OFFCURVE",
"197 450 OFFCURVE",
"236 557 QCURVE SMOOTH",
"243 576 OFFCURVE",
"271 622 OFFCURVE",
"312 658 OFFCURVE",
"363 674 OFFCURVE",
"392 664 QCURVE SMOOTH",
"422 653 OFFCURVE",
"448 604 OFFCURVE",
"446 542 OFFCURVE",
"422 479 OFFCURVE",
"401 455 QCURVE SMOOTH",
"381 432 OFFCURVE",
"339 397 OFFCURVE",
"306 361 OFFCURVE",
"290 318 OFFCURVE",
"296 288 QCURVE",
"296 288 LINE"
);
},
{
closed = 1;
nodes = (
"263 13 OFFCURVE",
"251 13 QCURVE SMOOTH",
"236 13 OFFCURVE",
"217 29 OFFCURVE",
"211 52 OFFCURVE",
"219 80 OFFCURVE",
"231 92 QCURVE",
"233 63 OFFCURVE",
"255 27 OFFCURVE",
"271 17 QCURVE",
"271 17 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
131 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
113 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
131 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
41 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
10 113 26 113 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
113 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
75 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
116 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
116 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
121 28 116 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
124 28 116 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
46 2 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
33 39 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
41 39 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 437;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = registered;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"76 321 OFFCURVE",
"133 423 OFFCURVE",
"220 500 OFFCURVE",
"331 546 OFFCURVE",
"391 548 QCURVE SMOOTH",
"451 549 OFFCURVE",
"551 509 OFFCURVE",
"621 436 OFFCURVE",
"655 337 OFFCURVE",
"649 280 QCURVE SMOOTH",
"642 223 OFFCURVE",
"585 122 OFFCURVE",
"498 46 OFFCURVE",
"388 -1 OFFCURVE",
"328 -2 QCURVE SMOOTH",
"268 -4 OFFCURVE",
"167 36 OFFCURVE",
"97 109 OFFCURVE",
"64 207 OFFCURVE",
"70 264 QCURVE",
"70 264 LINE"
);
},
{
closed = 1;
nodes = (
"19 204 OFFCURVE",
"60 100 OFFCURVE",
"142 24 OFFCURVE",
"258 -18 OFFCURVE",
"327 -16 QCURVE SMOOTH",
"396 -15 OFFCURVE",
"523 34 OFFCURVE",
"623 115 OFFCURVE",
"687 222 OFFCURVE",
"694 282 QCURVE SMOOTH",
"701 342 OFFCURVE",
"661 445 OFFCURVE",
"579 522 OFFCURVE",
"462 564 OFFCURVE",
"393 563 QCURVE SMOOTH",
"324 561 OFFCURVE",
"197 512 OFFCURVE",
"97 431 OFFCURVE",
"33 324 OFFCURVE",
"26 264 QCURVE",
"26 264 LINE"
);
},
{
closed = 1;
nodes = (
"574 227 OFFCURVE",
"566 225 OFFCURVE",
"563 220 QCURVE SMOOTH",
"560 213 OFFCURVE",
"539 173 OFFCURVE",
"524 158 QCURVE SMOOTH",
"501 135 OFFCURVE",
"468 151 OFFCURVE",
"452 175 QCURVE SMOOTH",
"440 193 OFFCURVE",
"424 232 OFFCURVE",
"413 268 OFFCURVE",
"407 294 OFFCURVE",
"406 299 QCURVE",
"413 299 OFFCURVE",
"448 302 OFFCURVE",
"460 304 QCURVE SMOOTH",
"509 312 OFFCURVE",
"571 350 OFFCURVE",
"588 393 OFFCURVE",
"557 436 OFFCURVE",
"514 448 QCURVE SMOOTH",
"505 450 OFFCURVE",
"484 454 OFFCURVE",
"473 456 QCURVE",
"476 466 OFFCURVE",
"472 472 OFFCURVE",
"458 458 QCURVE",
"388 468 OFFCURVE",
"299 456 QCURVE SMOOTH",
"264 451 OFFCURVE",
"212 429 OFFCURVE",
"175 399 OFFCURVE",
"155 364 OFFCURVE",
"154 348 QCURVE SMOOTH",
"152 321 OFFCURVE",
"176 288 OFFCURVE",
"212 276 OFFCURVE",
"254 286 OFFCURVE",
"270 303 QCURVE",
"283 314 OFFCURVE",
"286 336 QCURVE SMOOTH",
"287 340 OFFCURVE",
"282 345 OFFCURVE",
"281 337 QCURVE SMOOTH",
"281 333 OFFCURVE",
"273 318 OFFCURVE",
"265 310 QCURVE SMOOTH",
"251 296 OFFCURVE",
"217 288 OFFCURVE",
"188 299 OFFCURVE",
"171 327 OFFCURVE",
"175 348 QCURVE SMOOTH",
"181 374 OFFCURVE",
"240 427 OFFCURVE",
"294 438 QCURVE SMOOTH",
"336 447 OFFCURVE",
"414 451 OFFCURVE",
"449 448 QCURVE",
"423 419 OFFCURVE",
"376 334 OFFCURVE",
"350 289 QCURVE SMOOTH",
"333 260 OFFCURVE",
"299 204 OFFCURVE",
"259 162 OFFCURVE",
"213 137 OFFCURVE",
"186 139 QCURVE SMOOTH",
"164 140 OFFCURVE",
"148 166 OFFCURVE",
"155 192 OFFCURVE",
"185 207 OFFCURVE",
"210 198 QCURVE SMOOTH",
"215 196 OFFCURVE",
"218 201 OFFCURVE",
"213 203 QCURVE SMOOTH",
"177 215 OFFCURVE",
"131 198 OFFCURVE",
"118 165 OFFCURVE",
"142 131 OFFCURVE",
"175 127 QCURVE SMOOTH",
"212 122 OFFCURVE",
"281 142 OFFCURVE",
"308 172 QCURVE SMOOTH",
"334 200 OFFCURVE",
"367 257 OFFCURVE",
"382 287 QCURVE",
"383 277 OFFCURVE",
"388 242 OFFCURVE",
"398 203 OFFCURVE",
"415 163 OFFCURVE",
"429 148 QCURVE SMOOTH",
"439 137 OFFCURVE",
"465 126 OFFCURVE",
"492 126 OFFCURVE",
"518 135 OFFCURVE",
"528 146 QCURVE SMOOTH",
"535 153 OFFCURVE",
"548 175 OFFCURVE",
"560 197 OFFCURVE",
"569 215 OFFCURVE",
"571 220 QCURVE",
"571 220 LINE"
);
},
{
closed = 1;
nodes = (
"540 427 OFFCURVE",
"550 390 OFFCURVE",
"528 352 OFFCURVE",
"481 321 OFFCURVE",
"452 317 QCURVE SMOOTH",
"438 315 OFFCURVE",
"414 313 OFFCURVE",
"404 312 QCURVE",
"421 347 OFFCURVE",
"458 410 OFFCURVE",
"476 443 QCURVE",
"486 441 OFFCURVE",
"504 438 OFFCURVE",
"512 436 QCURVE",
"512 436 LINE"
);
}
);
width = 717;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"76 321 OFFCURVE",
"133 423 OFFCURVE",
"220 500 OFFCURVE",
"331 546 OFFCURVE",
"391 548 QCURVE SMOOTH",
"451 549 OFFCURVE",
"551 509 OFFCURVE",
"621 436 OFFCURVE",
"655 337 OFFCURVE",
"649 280 QCURVE SMOOTH",
"642 223 OFFCURVE",
"585 122 OFFCURVE",
"498 46 OFFCURVE",
"388 -1 OFFCURVE",
"328 -2 QCURVE SMOOTH",
"268 -4 OFFCURVE",
"167 36 OFFCURVE",
"97 109 OFFCURVE",
"64 207 OFFCURVE",
"70 264 QCURVE",
"70 264 LINE"
);
},
{
closed = 1;
nodes = (
"19 204 OFFCURVE",
"60 100 OFFCURVE",
"142 24 OFFCURVE",
"258 -18 OFFCURVE",
"327 -16 QCURVE SMOOTH",
"396 -15 OFFCURVE",
"523 34 OFFCURVE",
"623 115 OFFCURVE",
"687 222 OFFCURVE",
"694 282 QCURVE SMOOTH",
"701 342 OFFCURVE",
"661 445 OFFCURVE",
"579 522 OFFCURVE",
"462 564 OFFCURVE",
"393 563 QCURVE SMOOTH",
"324 561 OFFCURVE",
"197 512 OFFCURVE",
"97 431 OFFCURVE",
"33 324 OFFCURVE",
"26 264 QCURVE",
"26 264 LINE"
);
},
{
closed = 1;
nodes = (
"406 182 OFFCURVE",
"355 139 OFFCURVE",
"320 139 QCURVE SMOOTH",
"292 139 OFFCURVE",
"269 180 OFFCURVE",
"269 206 QCURVE SMOOTH",
"269 225 OFFCURVE",
"279 264 OFFCURVE",
"294 300 OFFCURVE",
"310 330 OFFCURVE",
"316 338 QCURVE SMOOTH",
"325 351 OFFCURVE",
"347 378 OFFCURVE",
"372 399 OFFCURVE",
"397 413 OFFCURVE",
"409 413 QCURVE SMOOTH",
"421 413 OFFCURVE",
"432 393 OFFCURVE",
"426 370 QCURVE SMOOTH",
"423 359 OFFCURVE",
"407 334 OFFCURVE",
"399 326 QCURVE",
"406 319 OFFCURVE",
"425 323 OFFCURVE",
"442 339 OFFCURVE",
"455 361 OFFCURVE",
"457 372 QCURVE SMOOTH",
"460 398 OFFCURVE",
"430 432 OFFCURVE",
"397 432 QCURVE SMOOTH",
"366 432 OFFCURVE",
"306 395 OFFCURVE",
"282 363 QCURVE SMOOTH",
"258 331 OFFCURVE",
"223 249 OFFCURVE",
"220 175 OFFCURVE",
"260 124 OFFCURVE",
"311 124 QCURVE SMOOTH",
"359 124 OFFCURVE",
"419 168 OFFCURVE",
"441 203 QCURVE SMOOTH",
"448 214 OFFCURVE",
"435 225 OFFCURVE",
"426 211 QCURVE",
"426 211 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
78 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
217 81 233 81 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
8 81 24 81 40 81 56 81 72 81 88 81 104 81 120 81 136 81 152 81 168 81 184 81 200 81 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 717;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"654 426 OFFCURVE",
"660 491 OFFCURVE",
"665 524 QCURVE SMOOTH",
"667 538 OFFCURVE",
"677 563 OFFCURVE",
"678 578 QCURVE SMOOTH",
"678 585 OFFCURVE",
"673 603 OFFCURVE",
"665 603 QCURVE",
"656 598 OFFCURVE",
"617 546 OFFCURVE",
"572 486 OFFCURVE",
"528 438 OFFCURVE",
"514 438 QCURVE SMOOTH",
"500 438 OFFCURVE",
"484 463 OFFCURVE",
"475 501 OFFCURVE",
"469 546 OFFCURVE",
"464 584 OFFCURVE",
"455 609 OFFCURVE",
"448 609 QCURVE SMOOTH",
"437 609 OFFCURVE",
"426 594 OFFCURVE",
"420 573 OFFCURVE",
"418 550 OFFCURVE",
"416 542 QCURVE SMOOTH",
"413 531 OFFCURVE",
"389 481 OFFCURVE",
"362 429 OFFCURVE",
"339 384 OFFCURVE",
"339 378 QCURVE SMOOTH",
"339 373 OFFCURVE",
"350 369 OFFCURVE",
"354 369 QCURVE SMOOTH",
"370 369 OFFCURVE",
"393 403 OFFCURVE",
"411 448 OFFCURVE",
"425 495 OFFCURVE",
"431 508 QCURVE",
"435 495 OFFCURVE",
"448 462 OFFCURVE",
"466 433 OFFCURVE",
"489 413 OFFCURVE",
"504 413 QCURVE SMOOTH",
"518 413 OFFCURVE",
"553 433 OFFCURVE",
"588 461 OFFCURVE",
"619 493 OFFCURVE",
"629 504 QCURVE",
"627 497 OFFCURVE",
"618 463 OFFCURVE",
"608 425 OFFCURVE",
"600 393 OFFCURVE",
"600 389 QCURVE SMOOTH",
"599 383 OFFCURVE",
"609 378 OFFCURVE",
"614 378 QCURVE SMOOTH",
"624 378 OFFCURVE",
"642 384 OFFCURVE",
"649 394 QCURVE",
"649 394 LINE"
);
},
{
closed = 1;
nodes = (
"152 364 OFFCURVE",
"160 373 QCURVE SMOOTH",
"169 384 OFFCURVE",
"189 437 OFFCURVE",
"212 498 OFFCURVE",
"235 557 OFFCURVE",
"246 573 QCURVE SMOOTH",
"250 578 OFFCURVE",
"292 584 OFFCURVE",
"338 590 OFFCURVE",
"376 598 OFFCURVE",
"376 606 QCURVE SMOOTH",
"376 614 OFFCURVE",
"358 617 OFFCURVE",
"353 617 QCURVE SMOOTH",
"345 617 OFFCURVE",
"303 616 OFFCURVE",
"250 612 OFFCURVE",
"191 608 OFFCURVE",
"141 602 OFFCURVE",
"106 594 OFFCURVE",
"103 590 QCURVE",
"106 581 OFFCURVE",
"121 575 OFFCURVE",
"129 575 QCURVE SMOOTH",
"144 575 OFFCURVE",
"175 579 OFFCURVE",
"189 579 QCURVE SMOOTH",
"194 579 OFFCURVE",
"203 578 OFFCURVE",
"208 577 QCURVE",
"208 566 OFFCURVE",
"180 510 OFFCURVE",
"147 447 OFFCURVE",
"119 390 OFFCURVE",
"118 378 QCURVE SMOOTH",
"118 369 OFFCURVE",
"131 364 OFFCURVE",
"138 364 QCURVE",
"138 364 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
57 4 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 736;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"251 510 OFFCURVE",
"246 525 OFFCURVE",
"238 529 QCURVE SMOOTH",
"223 537 OFFCURVE",
"192 526 OFFCURVE",
"180 517 QCURVE SMOOTH",
"174 512 OFFCURVE",
"135 485 OFFCURVE",
"93 455 OFFCURVE",
"58 429 OFFCURVE",
"57 426 QCURVE",
"51 418 OFFCURVE",
"60 413 QCURVE SMOOTH",
"62 412 OFFCURVE",
"90 422 OFFCURVE",
"130 439 OFFCURVE",
"176 461 OFFCURVE",
"217 481 OFFCURVE",
"245 498 OFFCURVE",
"247 502 QCURVE",
"247 502 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 267;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"233 479 OFFCURVE",
"213 497 OFFCURVE",
"199 497 QCURVE SMOOTH",
"185 497 OFFCURVE",
"167 478 OFFCURVE",
"167 464 QCURVE SMOOTH",
"167 449 OFFCURVE",
"187 431 OFFCURVE",
"201 431 QCURVE SMOOTH",
"215 431 OFFCURVE",
"233 450 OFFCURVE",
"233 464 QCURVE",
"233 464 LINE"
);
},
{
closed = 1;
nodes = (
"104 479 OFFCURVE",
"84 497 OFFCURVE",
"70 497 QCURVE SMOOTH",
"56 497 OFFCURVE",
"38 478 OFFCURVE",
"38 464 QCURVE SMOOTH",
"38 449 OFFCURVE",
"58 431 OFFCURVE",
"72 431 QCURVE SMOOTH",
"86 431 OFFCURVE",
"104 450 OFFCURVE",
"104 464 QCURVE",
"104 464 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 6 26 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 12 21 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 278;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = notequal;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"402 211 OFFCURVE",
"410 219 OFFCURVE",
"408 229 OFFCURVE",
"397 238 OFFCURVE",
"388 238 QCURVE SMOOTH",
"351 239 OFFCURVE",
"291 240 OFFCURVE",
"265 241 QCURVE",
"279 258 OFFCURVE",
"306 292 OFFCURVE",
"320 309 QCURVE",
"337 310 OFFCURVE",
"373 311 OFFCURVE",
"392 311 QCURVE SMOOTH",
"402 311 OFFCURVE",
"410 319 OFFCURVE",
"408 330 OFFCURVE",
"397 338 OFFCURVE",
"388 338 QCURVE SMOOTH",
"343 339 LINE",
"351 350 OFFCURVE",
"367 372 OFFCURVE",
"375 383 QCURVE SMOOTH",
"379 389 OFFCURVE",
"376 394 OFFCURVE",
"366 393 OFFCURVE",
"353 386 OFFCURVE",
"349 380 QCURVE SMOOTH",
"341 369 OFFCURVE",
"327 350 OFFCURVE",
"319 340 QCURVE",
"262 341 OFFCURVE",
"189 342 OFFCURVE",
"164 342 QCURVE SMOOTH",
"153 342 OFFCURVE",
"146 326 OFFCURVE",
"149 308 OFFCURVE",
"159 293 OFFCURVE",
"164 294 QCURVE SMOOTH",
"192 297 OFFCURVE",
"257 305 OFFCURVE",
"294 307 QCURVE",
"240 241 LINE",
"216 242 OFFCURVE",
"179 242 OFFCURVE",
"164 242 QCURVE SMOOTH",
"153 242 OFFCURVE",
"146 226 OFFCURVE",
"149 208 OFFCURVE",
"159 193 OFFCURVE",
"164 194 QCURVE SMOOTH",
"206 199 LINE",
"167 148 LINE SMOOTH",
"162 142 OFFCURVE",
"166 136 OFFCURVE",
"177 136 OFFCURVE",
"189 142 OFFCURVE",
"194 148 QCURVE SMOOTH",
"204 162 OFFCURVE",
"224 188 OFFCURVE",
"235 202 QCURVE",
"270 206 OFFCURVE",
"347 211 OFFCURVE",
"392 211 QCURVE",
"392 211 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
59 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 2 50 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 458;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = AE;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1283 226 OFFCURVE",
"1263 227 OFFCURVE",
"1256 221 OFFCURVE",
"1268 210 OFFCURVE",
"1287 206 QCURVE SMOOTH",
"1309 201 OFFCURVE",
"1321 170 OFFCURVE",
"1306 127 OFFCURVE",
"1268 78 OFFCURVE",
"1241 55 QCURVE SMOOTH",
"1209 28 OFFCURVE",
"1117 -24 OFFCURVE",
"1009 -65 OFFCURVE",
"888 -90 OFFCURVE",
"827 -90 QCURVE SMOOTH",
"735 -90 OFFCURVE",
"619 -36 OFFCURVE",
"562 47 OFFCURVE",
"558 148 OFFCURVE",
"597 241 OFFCURVE",
"676 316 OFFCURVE",
"731 331 QCURVE SMOOTH",
"780 345 OFFCURVE",
"877 347 OFFCURVE",
"955 345 OFFCURVE",
"1005 348 OFFCURVE",
"1009 364 QCURVE",
"1011 381 OFFCURVE",
"982 400 OFFCURVE",
"934 414 OFFCURVE",
"875 426 OFFCURVE",
"820 448 OFFCURVE",
"778 483 OFFCURVE",
"771 513 QCURVE",
"819 544 OFFCURVE",
"860 615 OFFCURVE",
"860 646 QCURVE SMOOTH",
"860 666 OFFCURVE",
"852 687 QCURVE",
"882 711 OFFCURVE",
"957 747 OFFCURVE",
"1039 771 OFFCURVE",
"1123 780 OFFCURVE",
"1163 776 QCURVE SMOOTH",
"1212 771 OFFCURVE",
"1264 736 OFFCURVE",
"1279 689 OFFCURVE",
"1265 635 OFFCURVE",
"1232 590 OFFCURVE",
"1185 557 OFFCURVE",
"1161 555 QCURVE SMOOTH",
"1143 553 OFFCURVE",
"1123 543 OFFCURVE",
"1122 534 OFFCURVE",
"1142 531 OFFCURVE",
"1165 536 QCURVE SMOOTH",
"1218 548 OFFCURVE",
"1294 593 OFFCURVE",
"1336 647 OFFCURVE",
"1341 706 OFFCURVE",
"1306 757 OFFCURVE",
"1228 795 OFFCURVE",
"1165 802 QCURVE SMOOTH",
"1129 806 OFFCURVE",
"1044 799 OFFCURVE",
"955 779 OFFCURVE",
"868 745 OFFCURVE",
"830 723 QCURVE",
"808 746 OFFCURVE",
"736 773 OFFCURVE",
"688 773 QCURVE SMOOTH",
"615 773 OFFCURVE",
"480 731 OFFCURVE",
"357 659 OFFCURVE",
"247 564 OFFCURVE",
"200 512 QCURVE",
"144 538 OFFCURVE",
"112 575 QCURVE SMOOTH",
"95 595 OFFCURVE",
"81 631 OFFCURVE",
"91 654 QCURVE SMOOTH",
"99 672 OFFCURVE",
"82 685 OFFCURVE",
"73 673 QCURVE",
"65 667 OFFCURVE",
"58 639 OFFCURVE",
"60 606 OFFCURVE",
"71 572 OFFCURVE",
"82 560 QCURVE SMOOTH",
"101 539 OFFCURVE",
"152 505 OFFCURVE",
"182 491 QCURVE",
"156 462 OFFCURVE",
"113 398 OFFCURVE",
"94 364 QCURVE SMOOTH",
"56 296 OFFCURVE",
"19 166 OFFCURVE",
"18 58 OFFCURVE",
"54 -20 OFFCURVE",
"90 -35 QCURVE SMOOTH",
"125 -50 OFFCURVE",
"200 -43 OFFCURVE",
"276 -10 OFFCURVE",
"350 42 OFFCURVE",
"417 101 OFFCURVE",
"474 161 OFFCURVE",
"495 186 QCURVE",
"476 133 OFFCURVE",
"496 26 OFFCURVE",
"578 -60 OFFCURVE",
"721 -114 OFFCURVE",
"825 -114 QCURVE SMOOTH",
"891 -114 OFFCURVE",
"1021 -94 OFFCURVE",
"1139 -57 OFFCURVE",
"1240 -5 OFFCURVE",
"1277 26 QCURVE SMOOTH",
"1310 54 OFFCURVE",
"1348 110 OFFCURVE",
"1354 161 OFFCURVE",
"1328 204 OFFCURVE",
"1297 219 QCURVE",
"1297 219 LINE"
);
},
{
closed = 1;
nodes = (
"819 596 OFFCURVE",
"768 550 QCURVE",
"769 554 LINE",
"771 583 OFFCURVE",
"798 634 OFFCURVE",
"819 657 QCURVE",
"819 657 LINE"
);
},
{
closed = 1;
nodes = (
"752 671 OFFCURVE",
"690 582 OFFCURVE",
"689 528 QCURVE SMOOTH",
"689 521 OFFCURVE",
"691 509 OFFCURVE",
"693 503 QCURVE",
"663 491 OFFCURVE",
"591 474 OFFCURVE",
"549 471 QCURVE SMOOTH",
"454 463 OFFCURVE",
"321 471 OFFCURVE",
"263 490 QCURVE",
"305 540 OFFCURVE",
"397 633 OFFCURVE",
"501 704 OFFCURVE",
"621 747 OFFCURVE",
"691 747 QCURVE SMOOTH",
"729 747 OFFCURVE",
"787 726 OFFCURVE",
"803 706 QCURVE",
"803 706 LINE"
);
},
{
closed = 1;
nodes = (
"803 392 OFFCURVE",
"749 383 OFFCURVE",
"723 375 QCURVE SMOOTH",
"685 364 OFFCURVE",
"657 350 QCURVE",
"661 356 OFFCURVE",
"662 358 QCURVE",
"684 382 OFFCURVE",
"689 429 OFFCURVE",
"668 449 OFFCURVE",
"628 429 OFFCURVE",
"605 386 QCURVE SMOOTH",
"585 349 OFFCURVE",
"527 266 OFFCURVE",
"458 183 OFFCURVE",
"382 104 OFFCURVE",
"343 71 QCURVE SMOOTH",
"274 14 OFFCURVE",
"153 -27 OFFCURVE",
"78 9 OFFCURVE",
"64 122 OFFCURVE",
"102 218 QCURVE SMOOTH",
"115 251 OFFCURVE",
"154 324 OFFCURVE",
"195 392 OFFCURVE",
"233 451 OFFCURVE",
"247 470 QCURVE",
"318 447 OFFCURVE",
"464 439 OFFCURVE",
"549 447 QCURVE SMOOTH",
"596 452 OFFCURVE",
"673 469 OFFCURVE",
"704 480 QCURVE",
"724 450 OFFCURVE",
"795 405 OFFCURVE",
"829 394 QCURVE",
"829 394 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
145 3 126 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 145 26 145 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 145 25 145 41 145 57 145 73 145 89 145 105 145 121 145 137 145 153 145 169 145 185 145 201 145 217 145 233 145 249 145 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
107 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 2 78 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
131 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1373;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = infinity;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"661 413 OFFCURVE",
"640 455 OFFCURVE",
"604 486 OFFCURVE",
"554 504 OFFCURVE",
"525 504 QCURVE SMOOTH",
"500 504 OFFCURVE",
"458 485 OFFCURVE",
"421 457 OFFCURVE",
"390 422 OFFCURVE",
"376 407 QCURVE",
"349 447 OFFCURVE",
"257 500 OFFCURVE",
"202 500 QCURVE SMOOTH",
"138 500 OFFCURVE",
"65 430 OFFCURVE",
"65 376 QCURVE SMOOTH",
"65 353 OFFCURVE",
"82 311 OFFCURVE",
"113 279 OFFCURVE",
"158 260 OFFCURVE",
"186 260 QCURVE SMOOTH",
"211 260 OFFCURVE",
"256 279 OFFCURVE",
"295 307 OFFCURVE",
"328 342 OFFCURVE",
"343 357 QCURVE",
"356 339 OFFCURVE",
"396 301 OFFCURVE",
"444 271 OFFCURVE",
"497 252 OFFCURVE",
"524 252 QCURVE SMOOTH",
"555 252 OFFCURVE",
"605 276 OFFCURVE",
"641 315 OFFCURVE",
"661 364 OFFCURVE",
"661 388 QCURVE",
"661 388 LINE"
);
},
{
closed = 1;
nodes = (
"646 361 OFFCURVE",
"629 328 OFFCURVE",
"601 304 OFFCURVE",
"563 290 OFFCURVE",
"541 290 QCURVE SMOOTH",
"508 290 OFFCURVE",
"477 303 QCURVE SMOOTH",
"457 311 OFFCURVE",
"431 332 OFFCURVE",
"410 356 OFFCURVE",
"393 384 OFFCURVE",
"382 399 QCURVE",
"386 404 OFFCURVE",
"391 413 OFFCURVE",
"395 418 QCURVE SMOOTH",
"417 441 OFFCURVE",
"479 473 OFFCURVE",
"514 473 QCURVE SMOOTH",
"538 473 OFFCURVE",
"585 460 OFFCURVE",
"622 436 OFFCURVE",
"646 402 OFFCURVE",
"646 380 QCURVE",
"646 380 LINE"
);
},
{
closed = 1;
nodes = (
"307 341 OFFCURVE",
"233 297 OFFCURVE",
"188 297 QCURVE SMOOTH",
"169 297 OFFCURVE",
"131 306 OFFCURVE",
"101 325 OFFCURVE",
"83 353 OFFCURVE",
"83 371 QCURVE SMOOTH",
"83 409 OFFCURVE",
"134 463 OFFCURVE",
"179 463 QCURVE SMOOTH",
"204 463 OFFCURVE",
"251 446 OFFCURVE",
"291 419 OFFCURVE",
"324 385 OFFCURVE",
"336 367 QCURVE",
"336 367 LINE"
);
}
);
width = 693;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = plusminus;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"435 288 OFFCURVE",
"366 287 OFFCURVE",
"337 287 QCURVE",
"340 303 OFFCURVE",
"348 343 OFFCURVE",
"356 385 OFFCURVE",
"364 423 OFFCURVE",
"367 437 QCURVE SMOOTH",
"369 447 OFFCURVE",
"363 455 OFFCURVE",
"352 453 OFFCURVE",
"341 442 OFFCURVE",
"339 433 QCURVE SMOOTH",
"335 418 OFFCURVE",
"326 379 OFFCURVE",
"317 339 OFFCURVE",
"308 302 OFFCURVE",
"304 288 QCURVE",
"284 288 OFFCURVE",
"242 289 OFFCURVE",
"204 290 OFFCURVE",
"173 291 OFFCURVE",
"165 291 QCURVE SMOOTH",
"154 291 OFFCURVE",
"143 275 OFFCURVE",
"142 257 OFFCURVE",
"148 242 OFFCURVE",
"153 243 QCURVE SMOOTH",
"164 244 OFFCURVE",
"197 246 OFFCURVE",
"236 248 OFFCURVE",
"277 250 OFFCURVE",
"295 252 QCURVE",
"290 232 OFFCURVE",
"279 191 OFFCURVE",
"269 155 OFFCURVE",
"262 126 OFFCURVE",
"260 117 QCURVE SMOOTH",
"257 106 OFFCURVE",
"271 99 OFFCURVE",
"290 102 OFFCURVE",
"307 112 OFFCURVE",
"308 117 QCURVE SMOOTH",
"310 139 OFFCURVE",
"325 217 OFFCURVE",
"331 254 QCURVE",
"364 256 OFFCURVE",
"435 260 OFFCURVE",
"464 260 QCURVE SMOOTH",
"474 260 OFFCURVE",
"484 268 OFFCURVE",
"484 278 OFFCURVE",
"476 287 OFFCURVE",
"467 287 QCURVE",
"467 287 LINE"
);
},
{
closed = 1;
nodes = (
"423 35 OFFCURVE",
"431 43 OFFCURVE",
"429 54 OFFCURVE",
"418 62 OFFCURVE",
"409 62 QCURVE SMOOTH",
"321 64 OFFCURVE",
"181 70 OFFCURVE",
"149 70 QCURVE SMOOTH",
"138 70 OFFCURVE",
"131 54 OFFCURVE",
"134 36 OFFCURVE",
"144 21 OFFCURVE",
"149 22 QCURVE SMOOTH",
"171 25 OFFCURVE",
"234 29 OFFCURVE",
"304 33 OFFCURVE",
"378 35 OFFCURVE",
"413 35 QCURVE",
"413 35 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
67 2 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 2 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 458;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = lessequal;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"212 99 OFFCURVE",
"204 106 OFFCURVE",
"199 111 QCURVE SMOOTH",
"95 212 LINE",
"112 230 OFFCURVE",
"143 265 OFFCURVE",
"159 283 QCURVE SMOOTH",
"170 294 OFFCURVE",
"190 317 OFFCURVE",
"199 329 QCURVE SMOOTH",
"202 334 OFFCURVE",
"204 345 OFFCURVE",
"204 350 QCURVE SMOOTH",
"204 352 OFFCURVE",
"203 361 OFFCURVE",
"201 361 QCURVE SMOOTH",
"200 361 OFFCURVE",
"180 343 OFFCURVE",
"149 315 OFFCURVE",
"113 281 OFFCURVE",
"80 251 OFFCURVE",
"55 228 OFFCURVE",
"52 224 QCURVE SMOOTH",
"47 219 OFFCURVE",
"46 206 OFFCURVE",
"46 200 QCURVE SMOOTH",
"46 194 OFFCURVE",
"47 181 OFFCURVE",
"52 177 QCURVE SMOOTH",
"58 172 OFFCURVE",
"105 142 OFFCURVE",
"157 109 OFFCURVE",
"201 84 OFFCURVE",
"206 84 QCURVE SMOOTH",
"212 84 OFFCURVE",
"212 91 QCURVE",
"212 91 LINE"
);
},
{
closed = 1;
nodes = (
"209 21 LINE",
"209 42 LINE",
"207 43 LINE",
"17 43 LINE",
"15 42 LINE",
"15 21 LINE",
"17 20 LINE",
"207 20 LINE",
"207 20 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
36 38 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
41 2 36 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 251;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"219 206 OFFCURVE",
"217 219 OFFCURVE",
"212 224 QCURVE SMOOTH",
"201 237 OFFCURVE",
"175 260 OFFCURVE",
"162 271 QCURVE SMOOTH",
"66 360 LINE",
"64 361 LINE",
"61 360 OFFCURVE",
"60 352 OFFCURVE",
"60 350 QCURVE SMOOTH",
"60 345 OFFCURVE",
"62 334 OFFCURVE",
"66 329 QCURVE SMOOTH",
"75 317 OFFCURVE",
"95 294 OFFCURVE",
"105 283 QCURVE SMOOTH",
"121 265 OFFCURVE",
"153 230 OFFCURVE",
"169 212 QCURVE",
"66 111 LINE SMOOTH",
"61 106 OFFCURVE",
"52 99 OFFCURVE",
"52 91 QCURVE SMOOTH",
"52 84 OFFCURVE",
"59 84 QCURVE SMOOTH",
"63 84 OFFCURVE",
"108 109 OFFCURVE",
"160 142 OFFCURVE",
"206 172 OFFCURVE",
"212 177 QCURVE SMOOTH",
"217 181 OFFCURVE",
"219 194 OFFCURVE",
"219 200 QCURVE",
"219 200 LINE"
);
},
{
closed = 1;
nodes = (
"209 21 LINE",
"209 42 LINE",
"207 43 LINE",
"17 43 LINE",
"15 42 LINE",
"15 21 LINE",
"17 20 LINE",
"207 20 LINE",
"207 20 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
34 36 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
39 2 34 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 251;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = yen;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"728 575 OFFCURVE",
"689 615 OFFCURVE",
"662 615 QCURVE SMOOTH",
"630 615 OFFCURVE",
"562 564 OFFCURVE",
"500 492 OFFCURVE",
"448 417 OFFCURVE",
"432 393 QCURVE SMOOTH",
"422 377 OFFCURVE",
"401 339 OFFCURVE",
"390 325 QCURVE SMOOTH",
"387 321 OFFCURVE",
"379 314 OFFCURVE",
"380 308 QCURVE",
"375 300 OFFCURVE",
"365 285 OFFCURVE",
"360 277 QCURVE",
"358 306 OFFCURVE",
"348 365 OFFCURVE",
"338 394 QCURVE SMOOTH",
"329 421 OFFCURVE",
"298 481 OFFCURVE",
"255 531 OFFCURVE",
"201 564 OFFCURVE",
"168 564 QCURVE SMOOTH",
"145 564 OFFCURVE",
"110 540 OFFCURVE",
"85 504 OFFCURVE",
"72 460 OFFCURVE",
"72 440 QCURVE SMOOTH",
"72 419 OFFCURVE",
"85 376 OFFCURVE",
"98 359 QCURVE SMOOTH",
"101 356 OFFCURVE",
"103 356 QCURVE SMOOTH",
"110 356 OFFCURVE",
"110 363 QCURVE SMOOTH",
"110 364 OFFCURVE",
"102 377 OFFCURVE",
"92 398 OFFCURVE",
"84 425 OFFCURVE",
"84 440 QCURVE SMOOTH",
"84 457 OFFCURVE",
"96 496 OFFCURVE",
"118 529 OFFCURVE",
"149 551 OFFCURVE",
"168 551 QCURVE SMOOTH",
"201 551 OFFCURVE",
"252 500 OFFCURVE",
"288 430 OFFCURVE",
"309 354 OFFCURVE",
"314 329 QCURVE",
"191 329 LINE SMOOTH",
"186 329 OFFCURVE",
"173 314 OFFCURVE",
"173 309 QCURVE SMOOTH",
"173 307 OFFCURVE",
"176 307 QCURVE SMOOTH",
"316 307 LINE",
"317 307 LINE",
"320 285 OFFCURVE",
"324 243 OFFCURVE",
"324 221 QCURVE",
"319 213 LINE",
"92 213 LINE SMOOTH",
"87 213 OFFCURVE",
"74 199 OFFCURVE",
"74 194 QCURVE SMOOTH",
"74 191 OFFCURVE",
"77 191 QCURVE SMOOTH",
"304 191 LINE",
"287 165 OFFCURVE",
"234 89 OFFCURVE",
"170 19 OFFCURVE",
"99 -31 OFFCURVE",
"64 -31 QCURVE SMOOTH",
"60 -31 OFFCURVE",
"50 -31 OFFCURVE",
"50 -37 QCURVE SMOOTH",
"50 -44 OFFCURVE",
"64 -44 OFFCURVE",
"69 -44 QCURVE SMOOTH",
"116 -44 OFFCURVE",
"200 3 OFFCURVE",
"272 74 OFFCURVE",
"332 156 OFFCURVE",
"355 191 QCURVE",
"455 191 LINE SMOOTH",
"460 191 OFFCURVE",
"473 205 OFFCURVE",
"473 210 QCURVE SMOOTH",
"473 213 OFFCURVE",
"470 213 QCURVE SMOOTH",
"369 213 LINE",
"383 236 OFFCURVE",
"408 283 OFFCURVE",
"422 307 QCURVE",
"522 307 LINE SMOOTH",
"527 307 OFFCURVE",
"540 321 OFFCURVE",
"540 326 QCURVE SMOOTH",
"540 329 OFFCURVE",
"538 329 QCURVE SMOOTH",
"434 329 LINE",
"443 344 OFFCURVE",
"473 397 OFFCURVE",
"510 457 OFFCURVE",
"554 520 OFFCURVE",
"598 570 OFFCURVE",
"642 602 OFFCURVE",
"662 602 QCURVE SMOOTH",
"683 602 OFFCURVE",
"715 569 OFFCURVE",
"715 548 QCURVE SMOOTH",
"715 545 OFFCURVE",
"713 539 OFFCURVE",
"713 536 QCURVE SMOOTH",
"713 529 OFFCURVE",
"720 529 QCURVE SMOOTH",
"726 529 OFFCURVE",
"728 544 OFFCURVE",
"728 548 QCURVE",
"728 548 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
122 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
0 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
122 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
18 40 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
28 40 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
105 40 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
46 1 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
119 1 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
97 1 75 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 1 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 1 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 722;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = mu;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"413 161 LINE",
"411 163 LINE",
"407 163 LINE",
"405 163 LINE",
"399 148 OFFCURVE",
"370 94 OFFCURVE",
"333 41 OFFCURVE",
"291 2 OFFCURVE",
"270 2 QCURVE SMOOTH",
"260 2 OFFCURVE",
"253 14 OFFCURVE",
"253 22 QCURVE SMOOTH",
"253 37 OFFCURVE",
"269 83 OFFCURVE",
"291 131 OFFCURVE",
"314 175 OFFCURVE",
"322 189 QCURVE SMOOTH",
"400 340 LINE",
"397 341 LINE",
"393 332 OFFCURVE",
"376 321 OFFCURVE",
"366 321 QCURVE SMOOTH",
"353 321 OFFCURVE",
"341 328 QCURVE",
"339 328 LINE",
"322 290 OFFCURVE",
"282 216 OFFCURVE",
"262 180 QCURVE SMOOTH",
"253 164 OFFCURVE",
"218 105 OFFCURVE",
"175 48 OFFCURVE",
"128 5 OFFCURVE",
"107 5 QCURVE SMOOTH",
"93 5 OFFCURVE",
"82 20 OFFCURVE",
"82 32 QCURVE SMOOTH",
"82 47 OFFCURVE",
"95 87 OFFCURVE",
"113 128 OFFCURVE",
"133 166 OFFCURVE",
"141 180 QCURVE SMOOTH",
"153 200 OFFCURVE",
"176 239 OFFCURVE",
"187 259 QCURVE SMOOTH",
"198 279 OFFCURVE",
"221 319 OFFCURVE",
"236 336 QCURVE",
"234 338 LINE",
"225 330 OFFCURVE",
"197 317 OFFCURVE",
"186 317 QCURVE SMOOTH",
"177 317 OFFCURVE",
"170 322 QCURVE",
"168 322 LINE",
"137 276 OFFCURVE",
"89 177 OFFCURVE",
"64 127 QCURVE SMOOTH",
"-129 -252 LINE SMOOTH",
"-130 -254 OFFCURVE",
"-126 -256 OFFCURVE",
"-125 -257 QCURVE",
"-118 -260 OFFCURVE",
"-98 -263 OFFCURVE",
"-90 -263 QCURVE SMOOTH",
"-88 -263 OFFCURVE",
"-79 -262 OFFCURVE",
"-77 -260 QCURVE",
"52 22 LINE",
"59 9 OFFCURVE",
"85 -6 OFFCURVE",
"99 -6 QCURVE SMOOTH",
"118 -6 OFFCURVE",
"156 17 OFFCURVE",
"189 51 OFFCURVE",
"217 88 OFFCURVE",
"226 103 QCURVE",
"216 75 OFFCURVE",
"216 50 QCURVE SMOOTH",
"216 25 OFFCURVE",
"242 -8 OFFCURVE",
"268 -8 QCURVE SMOOTH",
"292 -8 OFFCURVE",
"337 30 OFFCURVE",
"375 84 OFFCURVE",
"404 142 OFFCURVE",
"413 161 QCURVE",
"413 161 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 5 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
18 5 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 5 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
68 5 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 324;
}
);
note = mu;
unicode = "00B5,03BC";
},
{
glyphname = partialdiff;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"362 420 OFFCURVE",
"344 508 OFFCURVE",
"301 578 OFFCURVE",
"231 622 OFFCURVE",
"180 622 QCURVE SMOOTH",
"175 622 OFFCURVE",
"155 621 OFFCURVE",
"136 617 OFFCURVE",
"122 609 OFFCURVE",
"122 601 QCURVE SMOOTH",
"122 596 OFFCURVE",
"129 594 OFFCURVE",
"133 594 QCURVE SMOOTH",
"142 594 OFFCURVE",
"159 598 OFFCURVE",
"169 598 QCURVE SMOOTH",
"212 598 OFFCURVE",
"272 544 OFFCURVE",
"309 466 OFFCURVE",
"326 378 OFFCURVE",
"326 344 QCURVE SMOOTH",
"326 308 OFFCURVE",
"313 236 OFFCURVE",
"299 202 QCURVE",
"310 233 OFFCURVE",
"310 264 QCURVE SMOOTH",
"310 289 OFFCURVE",
"288 322 OFFCURVE",
"261 322 QCURVE SMOOTH",
"231 322 OFFCURVE",
"170 290 OFFCURVE",
"118 241 OFFCURVE",
"80 182 OFFCURVE",
"72 155 QCURVE SMOOTH",
"63 123 OFFCURVE",
"63 90 QCURVE SMOOTH",
"63 75 OFFCURVE",
"69 42 OFFCURVE",
"84 14 OFFCURVE",
"109 -5 OFFCURVE",
"127 -5 QCURVE SMOOTH",
"172 -5 OFFCURVE",
"243 43 OFFCURVE",
"297 116 OFFCURVE",
"334 201 OFFCURVE",
"343 238 QCURVE SMOOTH",
"352 272 OFFCURVE",
"362 341 OFFCURVE",
"362 376 QCURVE",
"362 376 LINE"
);
},
{
closed = 1;
nodes = (
"305 236 OFFCURVE",
"288 183 OFFCURVE",
"275 160 QCURVE SMOOTH",
"266 143 OFFCURVE",
"235 90 OFFCURVE",
"197 39 OFFCURVE",
"153 2 OFFCURVE",
"132 2 QCURVE SMOOTH",
"123 2 OFFCURVE",
"113 12 OFFCURVE",
"108 25 OFFCURVE",
"107 41 OFFCURVE",
"107 47 QCURVE SMOOTH",
"107 72 OFFCURVE",
"119 130 OFFCURVE",
"127 153 QCURVE SMOOTH",
"133 171 OFFCURVE",
"162 226 OFFCURVE",
"201 278 OFFCURVE",
"246 315 OFFCURVE",
"268 315 QCURVE SMOOTH",
"290 315 OFFCURVE",
"305 281 OFFCURVE",
"305 262 QCURVE",
"305 262 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 28 26 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
25 13 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
60 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 60 21 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
44 2 33 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 27 values pushed */
7 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
214 20 230 20 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
25 65 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 368;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = pi;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"406 360 LINE",
"406 362 LINE SMOOTH",
"406 364 OFFCURVE",
"403 364 QCURVE SMOOTH",
"398 364 OFFCURVE",
"391 348 OFFCURVE",
"377 330 OFFCURVE",
"353 314 OFFCURVE",
"332 314 QCURVE SMOOTH",
"308 314 OFFCURVE",
"261 331 OFFCURVE",
"215 350 OFFCURVE",
"168 367 OFFCURVE",
"146 367 QCURVE SMOOTH",
"134 367 OFFCURVE",
"125 363 QCURVE SMOOTH",
"116 359 OFFCURVE",
"94 340 OFFCURVE",
"74 316 OFFCURVE",
"61 290 OFFCURVE",
"61 280 QCURVE SMOOTH",
"61 275 OFFCURVE",
"66 275 QCURVE SMOOTH",
"71 275 OFFCURVE",
"76 288 OFFCURVE",
"84 304 OFFCURVE",
"100 319 OFFCURVE",
"115 321 QCURVE SMOOTH",
"119 322 OFFCURVE",
"127 322 QCURVE SMOOTH",
"132 322 OFFCURVE",
"143 321 OFFCURVE",
"148 320 QCURVE",
"79 -6 LINE",
"97 -6 LINE",
"165 316 LINE",
"197 307 OFFCURVE",
"258 279 OFFCURVE",
"290 272 QCURVE",
"231 -3 LINE",
"249 -3 LINE",
"307 270 LINE",
"323 270 OFFCURVE",
"335 274 QCURVE",
"334 274 LINE",
"343 278 OFFCURVE",
"368 298 OFFCURVE",
"391 323 OFFCURVE",
"407 349 OFFCURVE",
"406 360 QCURVE",
"406 360 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 422;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = integral;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"453 602 OFFCURVE",
"492 591 OFFCURVE",
"512 583 QCURVE",
"514 605 LINE",
"491 613 OFFCURVE",
"442 624 OFFCURVE",
"417 624 QCURVE SMOOTH",
"381 624 OFFCURVE",
"329 600 OFFCURVE",
"291 556 OFFCURVE",
"263 495 OFFCURVE",
"252 459 QCURVE SMOOTH",
"101 -51 LINE SMOOTH",
"90 -88 OFFCURVE",
"58 -139 OFFCURVE",
"20 -170 OFFCURVE",
"-21 -184 OFFCURVE",
"-41 -184 QCURVE SMOOTH",
"-58 -184 OFFCURVE",
"-94 -174 OFFCURVE",
"-110 -166 QCURVE",
"-120 -182 LINE",
"-94 -191 OFFCURVE",
"-44 -203 OFFCURVE",
"-16 -203 QCURVE SMOOTH",
"20 -203 OFFCURVE",
"72 -183 OFFCURVE",
"111 -146 OFFCURVE",
"140 -90 OFFCURVE",
"152 -54 QCURVE SMOOTH",
"328 495 LINE SMOOTH",
"336 516 OFFCURVE",
"353 555 OFFCURVE",
"377 585 OFFCURVE",
"410 602 OFFCURVE",
"433 602 QCURVE",
"433 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
29 1 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"254 523 OFFCURVE",
"246 526 OFFCURVE",
"243 519 QCURVE SMOOTH",
"239 511 OFFCURVE",
"223 482 OFFCURVE",
"205 455 OFFCURVE",
"186 435 OFFCURVE",
"178 435 QCURVE SMOOTH",
"167 435 OFFCURVE",
"174 465 QCURVE SMOOTH",
"176 476 OFFCURVE",
"188 505 OFFCURVE",
"202 533 OFFCURVE",
"216 554 OFFCURVE",
"220 558 QCURVE",
"215 557 OFFCURVE",
"204 560 OFFCURVE",
"199 560 QCURVE",
"187 562 OFFCURVE",
"173 544 OFFCURVE",
"165 528 QCURVE SMOOTH",
"155 510 OFFCURVE",
"134 474 OFFCURVE",
"120 458 QCURVE SMOOTH",
"111 448 OFFCURVE",
"93 436 OFFCURVE",
"80 436 OFFCURVE",
"72 448 OFFCURVE",
"74 461 QCURVE SMOOTH",
"76 475 OFFCURVE",
"92 507 OFFCURVE",
"95 512 QCURVE SMOOTH",
"109 534 OFFCURVE",
"144 574 OFFCURVE",
"161 583 QCURVE SMOOTH",
"175 591 OFFCURVE",
"199 585 OFFCURVE",
"204 571 QCURVE",
"210 569 OFFCURVE",
"214 580 OFFCURVE",
"209 585 QCURVE SMOOTH",
"198 597 OFFCURVE",
"168 602 OFFCURVE",
"135 595 OFFCURVE",
"104 575 OFFCURVE",
"93 562 QCURVE SMOOTH",
"65 528 OFFCURVE",
"48 466 OFFCURVE",
"59 426 OFFCURVE",
"92 418 OFFCURVE",
"113 439 QCURVE SMOOTH",
"124 450 OFFCURVE",
"143 476 OFFCURVE",
"149 486 QCURVE",
"143 466 OFFCURVE",
"145 441 OFFCURVE",
"154 427 OFFCURVE",
"168 422 OFFCURVE",
"174 422 QCURVE SMOOTH",
"186 423 OFFCURVE",
"208 444 OFFCURVE",
"228 473 OFFCURVE",
"244 504 OFFCURVE",
"250 515 QCURVE",
"250 515 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 374;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"248 526 OFFCURVE",
"242 529 OFFCURVE",
"240 525 QCURVE SMOOTH",
"237 519 OFFCURVE",
"225 491 OFFCURVE",
"207 462 OFFCURVE",
"183 440 OFFCURVE",
"170 440 QCURVE SMOOTH",
"152 440 OFFCURVE",
"146 452 QCURVE",
"160 465 OFFCURVE",
"183 497 OFFCURVE",
"188 511 QCURVE SMOOTH",
"195 527 OFFCURVE",
"200 560 OFFCURVE",
"195 585 OFFCURVE",
"178 602 OFFCURVE",
"164 602 QCURVE SMOOTH",
"151 602 OFFCURVE",
"124 589 OFFCURVE",
"98 566 OFFCURVE",
"76 535 OFFCURVE",
"69 518 QCURVE SMOOTH",
"55 484 OFFCURVE",
"64 428 OFFCURVE",
"93 427 QCURVE SMOOTH",
"114 426 OFFCURVE",
"137 444 QCURVE",
"148 431 OFFCURVE",
"165 431 QCURVE SMOOTH",
"182 431 OFFCURVE",
"208 451 OFFCURVE",
"228 479 OFFCURVE",
"241 509 OFFCURVE",
"246 520 QCURVE",
"246 520 LINE"
);
},
{
closed = 1;
nodes = (
"188 581 OFFCURVE",
"185 534 OFFCURVE",
"170 503 QCURVE SMOOTH",
"167 495 OFFCURVE",
"159 482 OFFCURVE",
"155 476 QCURVE",
"155 478 OFFCURVE",
"156 480 OFFCURVE",
"156 482 QCURVE SMOOTH",
"156 488 OFFCURVE",
"147 496 OFFCURVE",
"141 496 QCURVE SMOOTH",
"131 496 OFFCURVE",
"124 484 OFFCURVE",
"123 475 QCURVE SMOOTH",
"123 463 OFFCURVE",
"131 450 QCURVE",
"113 435 OFFCURVE",
"97 438 QCURVE SMOOTH",
"83 442 OFFCURVE",
"89 488 OFFCURVE",
"103 519 QCURVE SMOOTH",
"117 549 OFFCURVE",
"158 590 OFFCURVE",
"174 585 QCURVE",
"174 585 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
17 5 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
54 5 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 273;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = summation;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"6 -6 LINE",
"426 -6 LINE",
"388 37 LINE",
"104 32 LINE",
"329 226 LINE",
"174 404 LINE",
"409 396 LINE",
"440 439 LINE",
"60 439 LINE",
"256 214 LINE",
"256 214 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 473;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = Omega;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"374 -14 OFFCURVE",
"419 13 OFFCURVE",
"423 37 QCURVE",
"422 41 OFFCURVE",
"417 49 OFFCURVE",
"414 46 QCURVE SMOOTH",
"411 43 OFFCURVE",
"404 31 OFFCURVE",
"395 20 OFFCURVE",
"382 12 OFFCURVE",
"372 12 QCURVE SMOOTH",
"350 12 OFFCURVE",
"322 17 OFFCURVE",
"309 19 QCURVE",
"328 40 OFFCURVE",
"366 84 OFFCURVE",
"397 132 OFFCURVE",
"417 187 OFFCURVE",
"418 219 QCURVE SMOOTH",
"419 254 OFFCURVE",
"394 305 OFFCURVE",
"352 337 OFFCURVE",
"298 352 OFFCURVE",
"270 352 QCURVE SMOOTH",
"237 352 OFFCURVE",
"165 333 OFFCURVE",
"106 293 OFFCURVE",
"66 231 OFFCURVE",
"65 188 QCURVE SMOOTH",
"64 165 OFFCURVE",
"77 116 OFFCURVE",
"99 70 OFFCURVE",
"126 28 OFFCURVE",
"140 12 QCURVE",
"117 17 OFFCURVE",
"61 33 OFFCURVE",
"38 33 QCURVE SMOOTH",
"32 33 OFFCURVE",
"16 31 OFFCURVE",
"1 25 OFFCURVE",
"-10 14 OFFCURVE",
"-10 5 QCURVE SMOOTH",
"-11 -3 OFFCURVE",
"-4 -11 OFFCURVE",
"6 -13 OFFCURVE",
"15 -7 OFFCURVE",
"17 0 QCURVE",
"20 4 LINE",
"25 5 OFFCURVE",
"35 5 QCURVE SMOOTH",
"59 5 OFFCURVE",
"104 -6 OFFCURVE",
"129 -6 QCURVE SMOOTH",
"133 -6 OFFCURVE",
"145 -5 OFFCURVE",
"157 -2 OFFCURVE",
"167 5 OFFCURVE",
"167 12 QCURVE SMOOTH",
"167 14 OFFCURVE",
"148 41 OFFCURVE",
"126 85 OFFCURVE",
"108 144 OFFCURVE",
"109 179 QCURVE SMOOTH",
"110 212 OFFCURVE",
"136 261 OFFCURVE",
"178 292 OFFCURVE",
"229 307 OFFCURVE",
"256 307 QCURVE SMOOTH",
"278 307 OFFCURVE",
"320 297 OFFCURVE",
"353 273 OFFCURVE",
"373 234 OFFCURVE",
"372 206 QCURVE SMOOTH",
"371 179 OFFCURVE",
"351 121 OFFCURVE",
"319 68 OFFCURVE",
"279 24 OFFCURVE",
"257 12 QCURVE",
"256 10 OFFCURVE",
"254 4 OFFCURVE",
"254 2 QCURVE SMOOTH",
"253 -6 OFFCURVE",
"262 -14 OFFCURVE",
"268 -14 QCURVE SMOOTH",
"275 -14 OFFCURVE",
"288 -7 OFFCURVE",
"296 -7 QCURVE SMOOTH",
"311 -7 OFFCURVE",
"340 -14 OFFCURVE",
"354 -14 QCURVE",
"354 -14 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 17 26 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
27 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 25 values pushed */
6 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 12 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 9 values pushed */
198 27 214 27 230 27 246 27 4 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 27 21 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
56 61 87 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
76 61 87 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
66 2 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
53 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 53 23 53 39 53 55 53 71 53 87 53 103 53 119 53 135 53 151 53 167 53 183 53 199 53 215 53 231 53 247 53 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 53 23 53 39 53 55 53 71 53 87 53 103 53 119 53 135 53 151 53 167 53 183 53 199 53 215 53 231 53 247 53 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 53 23 53 39 53 55 53 71 53 87 53 103 53 119 53 135 53 151 53 167 53 183 53 199 53 215 53 231 53 247 53 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
56 43 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
76 43 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 445;
}
);
note = Omega;
unicode = "03A9,2126";
},
{
glyphname = ae;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"513 195 OFFCURVE",
"510 202 OFFCURVE",
"503 202 OFFCURVE",
"494 195 OFFCURVE",
"491 188 QCURVE SMOOTH",
"482 168 OFFCURVE",
"453 110 OFFCURVE",
"412 56 OFFCURVE",
"359 17 OFFCURVE",
"326 17 QCURVE SMOOTH",
"303 17 OFFCURVE",
"281 46 OFFCURVE",
"275 87 OFFCURVE",
"283 131 OFFCURVE",
"289 146 QCURVE SMOOTH",
"293 154 LINE",
"303 154 OFFCURVE",
"335 161 OFFCURVE",
"370 173 OFFCURVE",
"403 189 OFFCURVE",
"415 198 QCURVE SMOOTH",
"439 216 OFFCURVE",
"473 258 OFFCURVE",
"489 299 OFFCURVE",
"485 333 OFFCURVE",
"470 344 QCURVE SMOOTH",
"446 362 OFFCURVE",
"377 346 OFFCURVE",
"343 321 QCURVE",
"341 323 OFFCURVE",
"340 325 QCURVE",
"319 348 OFFCURVE",
"258 360 OFFCURVE",
"193 344 OFFCURVE",
"130 306 OFFCURVE",
"108 279 QCURVE SMOOTH",
"70 234 OFFCURVE",
"31 147 OFFCURVE",
"21 74 OFFCURVE",
"36 20 OFFCURVE",
"70 -5 OFFCURVE",
"119 5 OFFCURVE",
"148 33 QCURVE SMOOTH",
"170 54 OFFCURVE",
"208 107 OFFCURVE",
"220 127 QCURVE",
"215 81 OFFCURVE",
"240 28 OFFCURVE",
"259 15 QCURVE SMOOTH",
"286 -4 OFFCURVE",
"318 -4 QCURVE SMOOTH",
"360 -4 OFFCURVE",
"419 33 OFFCURVE",
"463 90 OFFCURVE",
"495 157 OFFCURVE",
"509 187 QCURVE",
"509 187 LINE"
);
},
{
closed = 1;
nodes = (
"392 204 OFFCURVE",
"362 188 OFFCURVE",
"333 177 OFFCURVE",
"308 171 OFFCURVE",
"301 171 QCURVE",
"311 193 OFFCURVE",
"322 213 QCURVE SMOOTH",
"330 226 OFFCURVE",
"349 253 OFFCURVE",
"359 265 QCURVE SMOOTH",
"390 302 OFFCURVE",
"432 333 OFFCURVE",
"456 334 OFFCURVE",
"462 310 OFFCURVE",
"452 274 OFFCURVE",
"425 232 OFFCURVE",
"405 215 QCURVE",
"405 215 LINE"
);
},
{
closed = 1;
nodes = (
"303 286 OFFCURVE",
"265 237 OFFCURVE",
"251 211 QCURVE SMOOTH",
"231 174 OFFCURVE",
"189 103 OFFCURVE",
"162 71 QCURVE SMOOTH",
"144 50 OFFCURVE",
"108 27 OFFCURVE",
"81 27 OFFCURVE",
"66 51 OFFCURVE",
"70 77 QCURVE SMOOTH",
"72 91 OFFCURVE",
"83 122 OFFCURVE",
"96 151 OFFCURVE",
"108 173 OFFCURVE",
"111 178 QCURVE SMOOTH",
"138 223 OFFCURVE",
"210 302 OFFCURVE",
"244 321 QCURVE SMOOTH",
"269 335 OFFCURVE",
"314 327 OFFCURVE",
"325 306 QCURVE",
"325 306 LINE"
);
}
);
width = 436;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = questiondown;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"33 -166 OFFCURVE",
"4 -236 OFFCURVE",
"11 -288 OFFCURVE",
"49 -320 OFFCURVE",
"105 -329 OFFCURVE",
"174 -315 OFFCURVE",
"209 -295 QCURVE SMOOTH",
"229 -283 OFFCURVE",
"272 -251 OFFCURVE",
"282 -229 QCURVE SMOOTH",
"293 -203 OFFCURVE",
"284 -163 OFFCURVE",
"256 -142 OFFCURVE",
"216 -144 OFFCURVE",
"196 -159 QCURVE SMOOTH",
"179 -173 OFFCURVE",
"170 -208 OFFCURVE",
"183 -234 OFFCURVE",
"214 -244 OFFCURVE",
"236 -232 QCURVE SMOOTH",
"248 -225 OFFCURVE",
"268 -208 OFFCURVE",
"271 -196 QCURVE",
"274 -214 OFFCURVE",
"238 -254 OFFCURVE",
"215 -265 QCURVE SMOOTH",
"179 -283 OFFCURVE",
"113 -281 OFFCURVE",
"77 -249 OFFCURVE",
"81 -189 OFFCURVE",
"114 -147 QCURVE SMOOTH",
"142 -112 OFFCURVE",
"205 -37 OFFCURVE",
"262 40 OFFCURVE",
"306 117 OFFCURVE",
"315 155 QCURVE SMOOTH",
"317 165 OFFCURVE",
"300 171 OFFCURVE",
"296 162 QCURVE SMOOTH",
"277 111 OFFCURVE",
"226 38 OFFCURVE",
"168 -25 OFFCURVE",
"104 -85 OFFCURVE",
"72 -122 QCURVE",
"72 -122 LINE"
);
},
{
closed = 1;
nodes = (
"291 278 OFFCURVE",
"311 254 OFFCURVE",
"328 254 QCURVE SMOOTH",
"345 254 OFFCURVE",
"374 278 OFFCURVE",
"376 295 QCURVE SMOOTH",
"379 312 OFFCURVE",
"359 336 OFFCURVE",
"342 336 QCURVE SMOOTH",
"325 336 OFFCURVE",
"297 312 OFFCURVE",
"294 295 QCURVE",
"294 295 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
47 53 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 396;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = exclamdown;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"-42 -295 LINE",
"-37 -297 LINE",
"-27 -297 OFFCURVE",
"-3 -298 OFFCURVE",
"21 -296 OFFCURVE",
"41 -287 OFFCURVE",
"46 -277 QCURVE SMOOTH",
"300 207 LINE",
"301 214 LINE",
"291 215 LINE",
"284 204 OFFCURVE",
"249 152 OFFCURVE",
"200 81 OFFCURVE",
"143 -4 OFFCURVE",
"85 -90 OFFCURVE",
"30 -172 OFFCURVE",
"-14 -239 OFFCURVE",
"-42 -283 OFFCURVE",
"-44 -289 QCURVE",
"-44 -289 LINE"
);
},
{
closed = 1;
nodes = (
"291 278 OFFCURVE",
"311 254 OFFCURVE",
"328 254 QCURVE SMOOTH",
"345 254 OFFCURVE",
"374 278 OFFCURVE",
"376 295 QCURVE SMOOTH",
"379 312 OFFCURVE",
"359 336 OFFCURVE",
"342 336 QCURVE SMOOTH",
"325 336 OFFCURVE",
"297 312 OFFCURVE",
"294 295 QCURVE",
"294 295 LINE"
);
}
);
width = 401;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"669 277 LINE",
"101 277 LINE SMOOTH",
"97 277 OFFCURVE",
"86 269 OFFCURVE",
"77 258 OFFCURVE",
"71 246 OFFCURVE",
"71 242 QCURVE SMOOTH",
"71 234 OFFCURVE",
"85 229 OFFCURVE",
"91 229 QCURVE SMOOTH",
"222 229 OFFCURVE",
"482 230 OFFCURVE",
"613 229 QCURVE",
"572 36 LINE SMOOTH",
"570 28 OFFCURVE",
"583 14 OFFCURVE",
"591 14 QCURVE SMOOTH",
"602 14 OFFCURVE",
"616 26 OFFCURVE",
"618 36 QCURVE",
"618 36 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
19 3 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 808;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = radical;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"168 207 LINE",
"219 -3 LINE",
"316 139 OFFCURVE",
"508 417 OFFCURVE",
"608 557 QCURVE",
"603 562 OFFCURVE",
"588 572 OFFCURVE",
"585 567 QCURVE SMOOTH",
"573 546 OFFCURVE",
"518 470 OFFCURVE",
"448 378 OFFCURVE",
"369 278 OFFCURVE",
"300 190 OFFCURVE",
"248 122 OFFCURVE",
"238 108 QCURVE",
"233 122 OFFCURVE",
"222 166 OFFCURVE",
"210 212 OFFCURVE",
"197 252 OFFCURVE",
"189 262 QCURVE",
"163 236 OFFCURVE",
"114 196 OFFCURVE",
"79 165 OFFCURVE",
"65 144 OFFCURVE",
"75 139 QCURVE",
"101 153 OFFCURVE",
"145 190 OFFCURVE",
"168 207 QCURVE",
"168 207 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 622;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = florin;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"-275 -261 LINE",
"-281 -275 OFFCURVE",
"-280 -299 QCURVE SMOOTH",
"-279 -325 OFFCURVE",
"-271 -338 QCURVE SMOOTH",
"-250 -373 OFFCURVE",
"-206 -373 QCURVE SMOOTH",
"-122 -373 OFFCURVE",
"-65 -284 QCURVE SMOOTH",
"-61 -277 OFFCURVE",
"-49 -256 OFFCURVE",
"-27 -208 OFFCURVE",
"8 -125 OFFCURVE",
"64 13 OFFCURVE",
"146 215 OFFCURVE",
"202 358 QCURVE",
"336 358 LINE",
"348 380 LINE",
"211 380 LINE",
"242 449 OFFCURVE",
"283 535 OFFCURVE",
"294 554 QCURVE SMOOTH",
"352 660 OFFCURVE",
"405 660 QCURVE SMOOTH",
"426 660 OFFCURVE",
"444 639 QCURVE SMOOTH",
"461 618 OFFCURVE",
"449 572 QCURVE",
"466 573 LINE",
"472 587 OFFCURVE",
"471 611 QCURVE SMOOTH",
"469 636 OFFCURVE",
"462 650 QCURVE SMOOTH",
"441 685 OFFCURVE",
"397 685 QCURVE SMOOTH",
"313 685 OFFCURVE",
"256 596 QCURVE SMOOTH",
"242 575 OFFCURVE",
"208 510 OFFCURVE",
"188 464 QCURVE SMOOTH",
"179 444 OFFCURVE",
"162 403 OFFCURVE",
"153 380 QCURVE",
"78 380 LINE",
"66 358 LINE",
"144 358 LINE",
"135 338 OFFCURVE",
"106 265 OFFCURVE",
"70 169 OFFCURVE",
"27 55 OFFCURVE",
"-22 -65 OFFCURVE",
"-75 -187 OFFCURVE",
"-103 -242 QCURVE SMOOTH",
"-130 -296 OFFCURVE",
"-188 -348 OFFCURVE",
"-214 -348 QCURVE SMOOTH",
"-235 -348 OFFCURVE",
"-253 -327 QCURVE SMOOTH",
"-270 -306 OFFCURVE",
"-258 -260 QCURVE",
"-258 -260 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
4 2 53 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 2 36 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 1 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = approxequal;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"316 303 LINE",
"314 305 OFFCURVE",
"313 305 QCURVE SMOOTH",
"309 305 OFFCURVE",
"302 294 OFFCURVE",
"289 282 OFFCURVE",
"268 271 OFFCURVE",
"251 271 QCURVE SMOOTH",
"233 271 OFFCURVE",
"198 283 OFFCURVE",
"163 296 OFFCURVE",
"129 308 OFFCURVE",
"111 308 QCURVE SMOOTH",
"101 308 OFFCURVE",
"76 297 OFFCURVE",
"53 279 OFFCURVE",
"37 259 OFFCURVE",
"37 250 QCURVE SMOOTH",
"37 246 OFFCURVE",
"41 246 QCURVE SMOOTH",
"45 246 OFFCURVE",
"50 255 OFFCURVE",
"57 265 OFFCURVE",
"71 275 OFFCURVE",
"85 277 QCURVE",
"88 278 OFFCURVE",
"95 278 QCURVE SMOOTH",
"114 278 OFFCURVE",
"149 266 OFFCURVE",
"183 253 OFFCURVE",
"216 241 OFFCURVE",
"233 241 QCURVE SMOOTH",
"242 241 OFFCURVE",
"251 244 QCURVE SMOOTH",
"257 246 OFFCURVE",
"280 259 OFFCURVE",
"301 275 OFFCURVE",
"316 294 OFFCURVE",
"316 302 QCURVE",
"316 302 LINE"
);
},
{
closed = 1;
nodes = (
"316 207 LINE",
"314 209 OFFCURVE",
"313 209 QCURVE SMOOTH",
"309 209 OFFCURVE",
"302 198 OFFCURVE",
"289 186 OFFCURVE",
"268 175 OFFCURVE",
"251 175 QCURVE SMOOTH",
"233 175 OFFCURVE",
"198 187 OFFCURVE",
"163 200 OFFCURVE",
"129 212 OFFCURVE",
"111 212 QCURVE SMOOTH",
"101 212 OFFCURVE",
"76 201 OFFCURVE",
"53 183 OFFCURVE",
"37 163 OFFCURVE",
"37 154 QCURVE SMOOTH",
"37 150 OFFCURVE",
"41 150 QCURVE SMOOTH",
"45 150 OFFCURVE",
"50 159 OFFCURVE",
"57 169 OFFCURVE",
"71 179 OFFCURVE",
"85 181 QCURVE",
"88 182 OFFCURVE",
"95 182 QCURVE SMOOTH",
"114 182 OFFCURVE",
"149 170 OFFCURVE",
"183 157 OFFCURVE",
"216 145 OFFCURVE",
"233 145 QCURVE SMOOTH",
"242 145 OFFCURVE",
"251 148 QCURVE SMOOTH",
"257 150 OFFCURVE",
"280 163 OFFCURVE",
"301 179 OFFCURVE",
"316 198 OFFCURVE",
"316 206 QCURVE",
"316 206 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
26 2 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
21 31 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 46 24 46 40 46 56 46 72 46 88 46 104 46 120 46 136 46 152 46 168 46 184 46 200 46 216 46 232 46 248 46 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 46 24 46 40 46 56 46 72 46 88 46 104 46 120 46 136 46 152 46 168 46 184 46 200 46 216 46 232 46 248 46 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 46 24 46 40 46 56 46 72 46 88 46 104 46 120 46 136 46 152 46 168 46 184 46 200 46 216 46 232 46 248 46 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
60 70 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 374;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = Delta;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"476 -10 LINE",
"493 -1 OFFCURVE",
"524 32 OFFCURVE",
"525 55 QCURVE",
"523 64 LINE",
"354 444 LINE",
"350 448 OFFCURVE",
"343 448 QCURVE SMOOTH",
"335 448 OFFCURVE",
"312 426 OFFCURVE",
"308 417 QCURVE",
"307 416 OFFCURVE",
"287 382 OFFCURVE",
"254 328 OFFCURVE",
"214 258 OFFCURVE",
"171 185 OFFCURVE",
"131 114 OFFCURVE",
"99 59 OFFCURVE",
"79 24 OFFCURVE",
"79 23 QCURVE SMOOTH",
"79 15 OFFCURVE",
"93 -10 OFFCURVE",
"102 -10 QCURVE",
"102 -10 LINE"
);
},
{
closed = 1;
nodes = (
"318 360 LINE",
"456 41 LINE",
"131 41 LINE",
"131 41 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
23 0 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 580;
}
);
note = Delta;
unicode = "0394,2206";
},
{
glyphname = guillemotleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"476 304 LINE",
"470 307 LINE",
"467 307 OFFCURVE",
"437 290 OFFCURVE",
"393 264 OFFCURVE",
"343 232 OFFCURVE",
"297 204 OFFCURVE",
"262 182 OFFCURVE",
"257 179 QCURVE",
"260 167 OFFCURVE",
"269 122 OFFCURVE",
"279 75 OFFCURVE",
"290 33 OFFCURVE",
"295 24 QCURVE",
"303 21 LINE",
"310 24 LINE",
"315 34 LINE",
"316 170 LINE",
"328 179 OFFCURVE",
"376 212 OFFCURVE",
"426 249 OFFCURVE",
"469 285 OFFCURVE",
"477 297 QCURVE",
"477 297 LINE"
);
},
{
closed = 1;
nodes = (
"332 304 LINE",
"325 307 LINE",
"322 307 OFFCURVE",
"292 290 OFFCURVE",
"248 264 OFFCURVE",
"197 232 OFFCURVE",
"152 204 OFFCURVE",
"117 182 OFFCURVE",
"112 179 QCURVE",
"121 141 OFFCURVE",
"136 59 OFFCURVE",
"150 24 QCURVE",
"153 21 OFFCURVE",
"158 21 QCURVE",
"165 24 LINE",
"170 34 LINE",
"171 170 LINE",
"181 178 OFFCURVE",
"230 211 OFFCURVE",
"282 249 OFFCURVE",
"326 286 OFFCURVE",
"333 297 QCURVE",
"333 297 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 451;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"393 150 LINE",
"391 158 OFFCURVE",
"382 205 OFFCURVE",
"370 256 OFFCURVE",
"359 299 OFFCURVE",
"355 303 QCURVE",
"347 307 LINE",
"339 303 LINE",
"336 297 OFFCURVE",
"333 257 OFFCURVE",
"333 211 OFFCURVE",
"334 168 OFFCURVE",
"334 158 QCURVE",
"322 149 OFFCURVE",
"275 116 OFFCURVE",
"224 80 OFFCURVE",
"181 44 OFFCURVE",
"173 32 QCURVE",
"173 23 LINE",
"180 21 LINE",
"188 22 LINE",
"188 22 LINE"
);
},
{
closed = 1;
nodes = (
"248 150 LINE",
"240 187 OFFCURVE",
"226 268 OFFCURVE",
"212 303 QCURVE",
"203 307 LINE",
"195 303 LINE",
"193 301 OFFCURVE",
"192 296 OFFCURVE",
"190 294 QCURVE",
"189 158 LINE",
"188 157 OFFCURVE",
"163 140 OFFCURVE",
"127 115 OFFCURVE",
"86 84 OFFCURVE",
"50 55 OFFCURVE",
"27 32 OFFCURVE",
"27 27 QCURVE",
"28 23 LINE",
"32 21 OFFCURVE",
"36 21 QCURVE SMOOTH",
"43 22 LINE",
"43 22 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 451;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = ellipsis;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"507 44 OFFCURVE",
"487 68 OFFCURVE",
"470 68 QCURVE SMOOTH",
"453 68 OFFCURVE",
"424 44 OFFCURVE",
"422 27 QCURVE SMOOTH",
"419 10 OFFCURVE",
"439 -14 OFFCURVE",
"456 -14 QCURVE SMOOTH",
"473 -14 OFFCURVE",
"501 10 OFFCURVE",
"504 27 QCURVE",
"504 27 LINE"
);
},
{
closed = 1;
nodes = (
"301 44 OFFCURVE",
"281 68 OFFCURVE",
"264 68 QCURVE SMOOTH",
"247 68 OFFCURVE",
"218 44 OFFCURVE",
"216 27 QCURVE SMOOTH",
"213 10 OFFCURVE",
"233 -14 OFFCURVE",
"250 -14 QCURVE SMOOTH",
"267 -14 OFFCURVE",
"295 10 OFFCURVE",
"298 27 QCURVE",
"298 27 LINE"
);
},
{
closed = 1;
nodes = (
"107 44 OFFCURVE",
"87 68 OFFCURVE",
"70 68 QCURVE SMOOTH",
"53 68 OFFCURVE",
"24 44 OFFCURVE",
"22 27 QCURVE SMOOTH",
"19 10 OFFCURVE",
"39 -14 OFFCURVE",
"56 -14 QCURVE SMOOTH",
"73 -14 OFFCURVE",
"101 10 OFFCURVE",
"104 27 QCURVE",
"104 27 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 537;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = nonbreakingspace;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 259;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 596, 403}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = asciitilde;
transform = "{1, 0, 0, 1, 442, 406}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = asciitilde;
transform = "{1, 0, 0, 1, 266, 403}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 784;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1403 226 OFFCURVE",
"1382 227 OFFCURVE",
"1375 221 OFFCURVE",
"1387 210 OFFCURVE",
"1406 206 QCURVE SMOOTH",
"1428 201 OFFCURVE",
"1441 170 OFFCURVE",
"1426 127 OFFCURVE",
"1388 78 OFFCURVE",
"1360 55 QCURVE SMOOTH",
"1328 28 OFFCURVE",
"1237 -24 OFFCURVE",
"1129 -65 OFFCURVE",
"1008 -90 OFFCURVE",
"946 -90 QCURVE SMOOTH",
"854 -90 OFFCURVE",
"738 -36 OFFCURVE",
"681 47 OFFCURVE",
"677 148 OFFCURVE",
"716 241 OFFCURVE",
"795 316 OFFCURVE",
"850 331 QCURVE SMOOTH",
"899 345 OFFCURVE",
"996 347 OFFCURVE",
"1074 345 OFFCURVE",
"1125 348 OFFCURVE",
"1129 364 QCURVE",
"1131 382 OFFCURVE",
"1099 401 OFFCURVE",
"1049 415 OFFCURVE",
"988 428 OFFCURVE",
"933 452 OFFCURVE",
"892 491 OFFCURVE",
"888 524 QCURVE",
"898 537 OFFCURVE",
"904 547 QCURVE SMOOTH",
"910 556 OFFCURVE",
"908 566 OFFCURVE",
"901 568 OFFCURVE",
"892 563 OFFCURVE",
"889 558 QCURVE SMOOTH",
"888 557 LINE",
"894 608 OFFCURVE",
"971 693 OFFCURVE",
"1085 753 OFFCURVE",
"1219 782 OFFCURVE",
"1282 776 QCURVE SMOOTH",
"1331 771 OFFCURVE",
"1383 736 OFFCURVE",
"1399 689 OFFCURVE",
"1384 635 OFFCURVE",
"1351 590 OFFCURVE",
"1304 557 OFFCURVE",
"1280 555 QCURVE SMOOTH",
"1262 553 OFFCURVE",
"1242 543 OFFCURVE",
"1242 534 OFFCURVE",
"1262 531 OFFCURVE",
"1285 536 QCURVE SMOOTH",
"1338 548 OFFCURVE",
"1414 593 OFFCURVE",
"1455 647 OFFCURVE",
"1461 706 OFFCURVE",
"1425 757 OFFCURVE",
"1347 795 OFFCURVE",
"1285 802 QCURVE SMOOTH",
"1242 807 OFFCURVE",
"1138 796 OFFCURVE",
"1033 765 OFFCURVE",
"933 717 OFFCURVE",
"856 653 OFFCURVE",
"809 574 OFFCURVE",
"809 528 QCURVE SMOOTH",
"809 502 OFFCURVE",
"824 480 QCURVE",
"808 467 OFFCURVE",
"776 443 OFFCURVE",
"759 432 QCURVE",
"763 525 OFFCURVE",
"703 657 OFFCURVE",
"600 740 OFFCURVE",
"467 777 OFFCURVE",
"329 771 OFFCURVE",
"198 725 OFFCURVE",
"98 644 OFFCURVE",
"44 529 OFFCURVE",
"51 457 QCURVE SMOOTH",
"55 415 OFFCURVE",
"96 353 OFFCURVE",
"128 331 QCURVE",
"102 266 OFFCURVE",
"96 141 OFFCURVE",
"126 39 OFFCURVE",
"188 -34 OFFCURVE",
"231 -48 QCURVE SMOOTH",
"281 -65 OFFCURVE",
"382 -57 OFFCURVE",
"478 -19 OFFCURVE",
"567 45 OFFCURVE",
"605 85 QCURVE",
"612 45 OFFCURVE",
"660 -27 OFFCURVE",
"744 -82 OFFCURVE",
"865 -114 OFFCURVE",
"944 -114 QCURVE SMOOTH",
"1010 -114 OFFCURVE",
"1140 -94 OFFCURVE",
"1258 -57 OFFCURVE",
"1359 -5 OFFCURVE",
"1396 26 QCURVE SMOOTH",
"1429 54 OFFCURVE",
"1467 110 OFFCURVE",
"1474 161 OFFCURVE",
"1448 204 OFFCURVE",
"1417 219 QCURVE",
"1417 219 LINE"
);
},
{
closed = 1;
nodes = (
"922 392 OFFCURVE",
"869 383 OFFCURVE",
"842 375 QCURVE SMOOTH",
"789 359 OFFCURVE",
"744 333 QCURVE",
"754 368 OFFCURVE",
"755 397 QCURVE",
"778 411 OFFCURVE",
"819 444 OFFCURVE",
"837 463 QCURVE",
"858 439 OFFCURVE",
"919 404 OFFCURVE",
"948 394 QCURVE",
"948 394 LINE"
);
},
{
closed = 1;
nodes = (
"637 367 OFFCURVE",
"498 323 OFFCURVE",
"363 305 OFFCURVE",
"241 316 OFFCURVE",
"197 338 QCURVE",
"207 361 OFFCURVE",
"246 428 OFFCURVE",
"297 498 OFFCURVE",
"358 564 OFFCURVE",
"423 612 OFFCURVE",
"490 634 OFFCURVE",
"521 624 QCURVE SMOOTH",
"531 621 OFFCURVE",
"540 632 OFFCURVE",
"529 638 QCURVE SMOOTH",
"491 659 OFFCURVE",
"413 652 OFFCURVE",
"337 613 OFFCURVE",
"266 548 OFFCURVE",
"206 475 OFFCURVE",
"160 401 OFFCURVE",
"146 372 QCURVE",
"112 401 OFFCURVE",
"106 448 QCURVE SMOOTH",
"96 515 OFFCURVE",
"140 625 OFFCURVE",
"225 705 OFFCURVE",
"340 752 OFFCURVE",
"460 759 OFFCURVE",
"575 723 OFFCURVE",
"661 638 OFFCURVE",
"707 499 OFFCURVE",
"698 400 QCURVE",
"698 400 LINE"
);
},
{
closed = 1;
nodes = (
"690 348 OFFCURVE",
"680 311 OFFCURVE",
"674 294 QCURVE SMOOTH",
"672 287 OFFCURVE",
"666 274 OFFCURVE",
"663 267 QCURVE",
"641 242 OFFCURVE",
"614 188 OFFCURVE",
"607 160 QCURVE",
"572 107 OFFCURVE",
"485 21 OFFCURVE",
"388 -31 OFFCURVE",
"285 -41 OFFCURVE",
"234 -16 QCURVE SMOOTH",
"198 2 OFFCURVE",
"159 71 OFFCURVE",
"148 158 OFFCURVE",
"164 256 OFFCURVE",
"182 303 QCURVE",
"231 283 OFFCURVE",
"357 273 OFFCURVE",
"492 289 OFFCURVE",
"630 332 OFFCURVE",
"692 365 QCURVE",
"692 365 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
185 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
185 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
128 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 37 21 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 42 26 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 42 25 42 41 42 57 42 73 42 89 42 105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
121 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
121 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
123 128 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
128 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
161 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
161 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
100 2 10 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1493;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"527 195 OFFCURVE",
"525 202 OFFCURVE",
"518 202 OFFCURVE",
"509 195 OFFCURVE",
"506 188 QCURVE SMOOTH",
"497 168 OFFCURVE",
"468 110 OFFCURVE",
"427 56 OFFCURVE",
"374 17 OFFCURVE",
"341 17 QCURVE SMOOTH",
"316 17 OFFCURVE",
"295 50 OFFCURVE",
"292 94 OFFCURVE",
"301 140 OFFCURVE",
"307 154 QCURVE",
"317 154 OFFCURVE",
"349 161 OFFCURVE",
"384 173 OFFCURVE",
"418 189 OFFCURVE",
"429 198 QCURVE SMOOTH",
"453 216 OFFCURVE",
"488 258 OFFCURVE",
"504 299 OFFCURVE",
"499 333 OFFCURVE",
"485 344 QCURVE SMOOTH",
"468 356 OFFCURVE",
"425 356 OFFCURVE",
"378 337 OFFCURVE",
"333 302 OFFCURVE",
"314 279 QCURVE SMOOTH",
"311 275 LINE",
"308 307 OFFCURVE",
"274 349 OFFCURVE",
"241 350 QCURVE SMOOTH",
"215 351 OFFCURVE",
"161 324 OFFCURVE",
"110 278 OFFCURVE",
"66 216 OFFCURVE",
"51 182 QCURVE SMOOTH",
"37 149 OFFCURVE",
"27 84 OFFCURVE",
"38 33 OFFCURVE",
"71 1 OFFCURVE",
"100 0 QCURVE SMOOTH",
"117 0 OFFCURVE",
"153 13 OFFCURVE",
"189 37 OFFCURVE",
"222 69 OFFCURVE",
"237 86 QCURVE",
"239 42 OFFCURVE",
"297 -4 OFFCURVE",
"332 -4 QCURVE SMOOTH",
"374 -4 OFFCURVE",
"434 33 OFFCURVE",
"478 90 OFFCURVE",
"510 157 OFFCURVE",
"524 187 QCURVE",
"524 187 LINE"
);
},
{
closed = 1;
nodes = (
"406 204 OFFCURVE",
"375 187 OFFCURVE",
"345 176 OFFCURVE",
"320 171 OFFCURVE",
"313 171 QCURVE",
"317 178 OFFCURVE",
"329 200 OFFCURVE",
"345 226 OFFCURVE",
"364 253 OFFCURVE",
"374 265 QCURVE SMOOTH",
"405 302 OFFCURVE",
"447 333 OFFCURVE",
"471 334 OFFCURVE",
"477 310 OFFCURVE",
"467 274 OFFCURVE",
"440 232 OFFCURVE",
"420 215 QCURVE",
"420 215 LINE"
);
},
{
closed = 1;
nodes = (
"251 183 OFFCURVE",
"240 128 QCURVE",
"229 110 OFFCURVE",
"197 69 OFFCURVE",
"161 36 OFFCURVE",
"124 18 OFFCURVE",
"108 23 QCURVE SMOOTH",
"94 27 OFFCURVE",
"84 56 OFFCURVE",
"88 100 OFFCURVE",
"105 155 OFFCURVE",
"120 186 QCURVE SMOOTH",
"134 216 OFFCURVE",
"170 267 OFFCURVE",
"208 304 OFFCURVE",
"246 321 OFFCURVE",
"262 317 QCURVE SMOOTH",
"279 312 OFFCURVE",
"289 267 OFFCURVE",
"282 234 QCURVE",
"282 234 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
23 2 77 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 103 47 119 47 135 47 151 47 167 47 183 47 199 47 215 47 231 47 247 47 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 103 47 119 47 135 47 151 47 167 47 183 47 199 47 215 47 231 47 247 47 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 103 47 119 47 135 47 151 47 167 47 183 47 199 47 215 47 231 47 247 47 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 452;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = endash;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"522 211 OFFCURVE",
"530 219 OFFCURVE",
"528 229 OFFCURVE",
"517 238 OFFCURVE",
"508 238 QCURVE SMOOTH",
"464 239 OFFCURVE",
"358 241 OFFCURVE",
"259 242 OFFCURVE",
"180 242 OFFCURVE",
"164 242 QCURVE SMOOTH",
"153 242 OFFCURVE",
"146 226 OFFCURVE",
"149 208 OFFCURVE",
"159 193 OFFCURVE",
"164 194 QCURVE SMOOTH",
"186 197 OFFCURVE",
"275 203 OFFCURVE",
"377 208 OFFCURVE",
"477 211 OFFCURVE",
"512 211 QCURVE",
"512 211 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
15 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 534;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"808 211 OFFCURVE",
"816 219 OFFCURVE",
"814 229 OFFCURVE",
"803 238 OFFCURVE",
"794 238 QCURVE SMOOTH",
"765 239 OFFCURVE",
"655 240 OFFCURVE",
"522 241 OFFCURVE",
"381 241 OFFCURVE",
"260 242 OFFCURVE",
"174 242 OFFCURVE",
"164 242 QCURVE SMOOTH",
"153 242 OFFCURVE",
"146 226 OFFCURVE",
"149 208 OFFCURVE",
"159 193 OFFCURVE",
"164 194 QCURVE SMOOTH",
"179 196 OFFCURVE",
"272 200 OFFCURVE",
"397 203 OFFCURVE",
"541 207 OFFCURVE",
"672 209 OFFCURVE",
"775 211 OFFCURVE",
"798 211 QCURVE",
"798 211 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 7 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 819;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"295 721 OFFCURVE",
"294 732 OFFCURVE",
"284 729 QCURVE SMOOTH",
"267 724 OFFCURVE",
"229 704 OFFCURVE",
"194 676 OFFCURVE",
"169 637 OFFCURVE",
"165 612 QCURVE SMOOTH",
"162 592 OFFCURVE",
"176 558 OFFCURVE",
"198 558 QCURVE SMOOTH",
"215 558 OFFCURVE",
"247 582 OFFCURVE",
"252 599 QCURVE SMOOTH",
"258 616 OFFCURVE",
"241 640 OFFCURVE",
"224 640 QCURVE SMOOTH",
"208 640 OFFCURVE",
"195 631 QCURVE",
"204 664 OFFCURVE",
"255 708 OFFCURVE",
"284 717 QCURVE",
"284 717 LINE"
);
},
{
closed = 1;
nodes = (
"176 721 OFFCURVE",
"175 732 OFFCURVE",
"165 729 QCURVE SMOOTH",
"148 724 OFFCURVE",
"110 704 OFFCURVE",
"75 676 OFFCURVE",
"50 637 OFFCURVE",
"46 612 QCURVE SMOOTH",
"43 592 OFFCURVE",
"57 558 OFFCURVE",
"79 558 QCURVE SMOOTH",
"96 558 OFFCURVE",
"128 582 OFFCURVE",
"133 599 QCURVE SMOOTH",
"139 616 OFFCURVE",
"122 640 OFFCURVE",
"105 640 QCURVE SMOOTH",
"89 640 OFFCURVE",
"76 631 QCURVE",
"85 664 OFFCURVE",
"136 708 OFFCURVE",
"165 717 QCURVE",
"165 717 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
5 11 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 11 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 11 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 304;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"387 680 OFFCURVE",
"368 714 OFFCURVE",
"346 714 QCURVE SMOOTH",
"329 714 OFFCURVE",
"300 690 OFFCURVE",
"298 673 QCURVE SMOOTH",
"295 656 OFFCURVE",
"315 632 OFFCURVE",
"332 632 QCURVE SMOOTH",
"347 632 OFFCURVE",
"360 642 QCURVE",
"356 608 OFFCURVE",
"312 564 OFFCURVE",
"284 555 QCURVE SMOOTH",
"274 552 OFFCURVE",
"277 540 OFFCURVE",
"286 544 QCURVE SMOOTH",
"302 549 OFFCURVE",
"337 568 OFFCURVE",
"367 597 OFFCURVE",
"387 635 OFFCURVE",
"387 660 QCURVE",
"387 660 LINE"
);
},
{
closed = 1;
nodes = (
"268 680 OFFCURVE",
"249 714 OFFCURVE",
"227 714 QCURVE SMOOTH",
"210 714 OFFCURVE",
"181 690 OFFCURVE",
"179 673 QCURVE SMOOTH",
"176 656 OFFCURVE",
"196 632 OFFCURVE",
"213 632 QCURVE SMOOTH",
"228 632 OFFCURVE",
"241 642 QCURVE",
"237 608 OFFCURVE",
"193 564 OFFCURVE",
"165 555 QCURVE SMOOTH",
"155 552 OFFCURVE",
"158 540 OFFCURVE",
"167 544 QCURVE SMOOTH",
"183 549 OFFCURVE",
"218 568 OFFCURVE",
"248 597 OFFCURVE",
"268 635 OFFCURVE",
"268 660 QCURVE",
"268 660 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
0 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
22 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
19 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 13 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
33 13 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 393;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"176 721 OFFCURVE",
"176 732 OFFCURVE",
"166 729 QCURVE SMOOTH",
"149 724 OFFCURVE",
"111 704 OFFCURVE",
"76 676 OFFCURVE",
"51 637 OFFCURVE",
"47 612 QCURVE SMOOTH",
"44 592 OFFCURVE",
"57 558 OFFCURVE",
"80 558 QCURVE SMOOTH",
"97 558 OFFCURVE",
"129 582 OFFCURVE",
"134 599 QCURVE SMOOTH",
"139 616 OFFCURVE",
"123 640 OFFCURVE",
"106 640 QCURVE SMOOTH",
"89 640 OFFCURVE",
"76 631 QCURVE",
"86 664 OFFCURVE",
"137 708 OFFCURVE",
"166 717 QCURVE",
"166 717 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
5 11 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 11 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"268 680 OFFCURVE",
"249 714 OFFCURVE",
"227 714 QCURVE SMOOTH",
"210 714 OFFCURVE",
"181 690 OFFCURVE",
"179 673 QCURVE SMOOTH",
"176 656 OFFCURVE",
"196 632 OFFCURVE",
"213 632 QCURVE SMOOTH",
"228 632 OFFCURVE",
"241 642 QCURVE",
"237 608 OFFCURVE",
"193 564 OFFCURVE",
"165 555 QCURVE SMOOTH",
"155 552 OFFCURVE",
"158 540 OFFCURVE",
"167 544 QCURVE SMOOTH",
"183 549 OFFCURVE",
"218 568 OFFCURVE",
"248 597 OFFCURVE",
"268 635 OFFCURVE",
"268 660 QCURVE",
"268 660 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
19 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 13 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 158;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = Euro;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"673 655 OFFCURVE",
"650 706 OFFCURVE",
"610 740 OFFCURVE",
"555 758 OFFCURVE",
"524 758 QCURVE SMOOTH",
"461 758 OFFCURVE",
"343 693 OFFCURVE",
"242 594 OFFCURVE",
"163 476 OFFCURVE",
"141 423 QCURVE",
"104 423 LINE",
"91 398 LINE",
"130 398 LINE",
"124 384 OFFCURVE",
"121 370 OFFCURVE",
"116 355 QCURVE",
"74 355 LINE",
"63 329 LINE",
"110 329 LINE",
"102 296 OFFCURVE",
"92 229 OFFCURVE",
"92 195 QCURVE SMOOTH",
"92 148 OFFCURVE",
"113 66 OFFCURVE",
"159 6 OFFCURVE",
"231 -28 OFFCURVE",
"283 -28 QCURVE SMOOTH",
"340 -28 OFFCURVE",
"439 3 OFFCURVE",
"525 59 OFFCURVE",
"598 136 OFFCURVE",
"629 181 QCURVE",
"631 185 OFFCURVE",
"632 197 OFFCURVE",
"631 205 OFFCURVE",
"625 204 OFFCURVE",
"619 196 QCURVE SMOOTH",
"596 167 OFFCURVE",
"530 96 OFFCURVE",
"452 34 OFFCURVE",
"367 -8 OFFCURVE",
"327 -8 QCURVE SMOOTH",
"280 -8 OFFCURVE",
"217 28 OFFCURVE",
"178 87 OFFCURVE",
"161 163 OFFCURVE",
"161 204 QCURVE SMOOTH",
"161 236 OFFCURVE",
"169 298 OFFCURVE",
"177 329 QCURVE",
"398 329 LINE",
"409 355 LINE",
"183 355 LINE",
"188 370 OFFCURVE",
"192 384 OFFCURVE",
"198 398 QCURVE",
"375 398 LINE",
"426 398 LINE",
"439 423 LINE",
"210 423 LINE",
"234 474 OFFCURVE",
"308 582 OFFCURVE",
"403 672 OFFCURVE",
"515 729 OFFCURVE",
"577 729 QCURVE SMOOTH",
"612 729 OFFCURVE",
"641 688 OFFCURVE",
"641 656 QCURVE SMOOTH",
"641 627 OFFCURVE",
"622 569 OFFCURVE",
"600 521 OFFCURVE",
"581 491 OFFCURVE",
"581 490 QCURVE SMOOTH",
"581 485 OFFCURVE",
"588 483 OFFCURVE",
"592 483 QCURVE SMOOTH",
"612 483 OFFCURVE",
"643 514 OFFCURVE",
"663 558 OFFCURVE",
"673 606 OFFCURVE",
"673 622 QCURVE",
"673 622 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
13 0 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 3 59 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
218 13 234 13 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
21 59 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 59 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
28 59 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
29 59 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 34 21 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
68 59 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
39 1 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 2 16 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 661;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 146, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 773, 139}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 959;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = fraction;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"533 589 OFFCURVE",
"469 506 OFFCURVE",
"381 395 OFFCURVE",
"280 268 OFFCURVE",
"182 147 OFFCURVE",
"94 42 OFFCURVE",
"65 9 QCURVE SMOOTH",
"57 -1 OFFCURVE",
"63 -9 OFFCURVE",
"76 -1 QCURVE SMOOTH",
"96 12 OFFCURVE",
"176 96 OFFCURVE",
"276 212 OFFCURVE",
"385 345 OFFCURVE",
"486 471 OFFCURVE",
"567 574 OFFCURVE",
"589 601 QCURVE SMOOTH",
"595 608 OFFCURVE",
"586 616 OFFCURVE",
"570 618 OFFCURVE",
"551 612 OFFCURVE",
"545 606 QCURVE",
"545 606 LINE"
);
}
);
width = 548;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = currency;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"654 536 LINE",
"436 406 LINE",
"419 419 OFFCURVE",
"377 430 OFFCURVE",
"356 430 QCURVE SMOOTH",
"333 430 OFFCURVE",
"285 417 OFFCURVE",
"264 406 QCURVE",
"110 530 LINE",
"214 368 LINE",
"194 348 OFFCURVE",
"170 296 OFFCURVE",
"169 267 QCURVE SMOOTH",
"167 238 OFFCURVE",
"181 212 QCURVE",
"1 42 LINE",
"217 173 LINE",
"253 150 OFFCURVE",
"299 150 QCURVE SMOOTH",
"345 150 OFFCURVE",
"389 174 QCURVE",
"545 47 LINE",
"439 211 LINE",
"456 231 OFFCURVE",
"483 280 OFFCURVE",
"484 307 QCURVE SMOOTH",
"486 340 OFFCURVE",
"471 365 QCURVE",
"471 365 LINE"
);
},
{
closed = 1;
nodes = (
"348 392 OFFCURVE",
"385 377 OFFCURVE",
"413 349 OFFCURVE",
"429 311 OFFCURVE",
"428 289 QCURVE SMOOTH",
"427 266 OFFCURVE",
"408 228 OFFCURVE",
"379 201 OFFCURVE",
"341 186 OFFCURVE",
"322 186 QCURVE SMOOTH",
"303 186 OFFCURVE",
"267 201 OFFCURVE",
"240 229 OFFCURVE",
"225 266 OFFCURVE",
"226 289 QCURVE SMOOTH",
"227 311 OFFCURVE",
"245 349 OFFCURVE",
"273 377 OFFCURVE",
"310 392 OFFCURVE",
"329 392 QCURVE",
"329 392 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
2 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
33 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 33 21 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 9 24 9 40 9 56 9 72 9 88 9 104 9 120 9 136 9 152 9 168 9 184 9 200 9 216 9 232 9 248 9 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 9 24 9 40 9 56 9 72 9 88 9 104 9 120 9 136 9 152 9 168 9 184 9 200 9 216 9 232 9 248 9 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 9 24 9 40 9 56 9 72 9 88 9 104 9 120 9 136 9 152 9 168 9 184 9 200 9 216 9 232 9 248 9 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 671;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"303 491 OFFCURVE",
"291 491 QCURVE SMOOTH",
"277 491 OFFCURVE",
"263 477 QCURVE SMOOTH",
"248 463 OFFCURVE",
"195 410 OFFCURVE",
"159 371 QCURVE SMOOTH",
"117 326 OFFCURVE",
"74 276 OFFCURVE",
"72 269 QCURVE",
"72 259 OFFCURVE",
"77 258 QCURVE",
"106 228 OFFCURVE",
"146 183 OFFCURVE",
"173 150 OFFCURVE",
"189 127 OFFCURVE",
"194 118 QCURVE",
"208 113 OFFCURVE",
"221 122 OFFCURVE",
"223 130 QCURVE",
"206 164 OFFCURVE",
"158 243 OFFCURVE",
"136 289 QCURVE",
"213 383 OFFCURVE",
"297 471 OFFCURVE",
"299 480 QCURVE",
"299 480 LINE"
);
},
{
closed = 1;
nodes = (
"507 491 OFFCURVE",
"494 491 QCURVE SMOOTH",
"489 491 OFFCURVE",
"473 484 OFFCURVE",
"466 477 QCURVE SMOOTH",
"451 463 OFFCURVE",
"398 410 OFFCURVE",
"362 371 QCURVE SMOOTH",
"320 326 OFFCURVE",
"277 276 OFFCURVE",
"275 269 QCURVE",
"275 265 OFFCURVE",
"276 259 OFFCURVE",
"281 258 QCURVE",
"310 228 OFFCURVE",
"350 183 OFFCURVE",
"377 150 OFFCURVE",
"392 127 OFFCURVE",
"397 118 QCURVE",
"411 113 OFFCURVE",
"424 122 OFFCURVE",
"426 130 QCURVE",
"409 164 OFFCURVE",
"362 243 OFFCURVE",
"339 289 QCURVE",
"416 383 OFFCURVE",
"500 471 OFFCURVE",
"502 480 QCURVE",
"502 480 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"275 111 OFFCURVE",
"287 111 QCURVE SMOOTH",
"301 111 OFFCURVE",
"315 125 QCURVE SMOOTH",
"330 139 OFFCURVE",
"383 192 OFFCURVE",
"419 231 QCURVE SMOOTH",
"461 276 OFFCURVE",
"504 326 OFFCURVE",
"506 333 QCURVE",
"506 343 OFFCURVE",
"501 344 QCURVE",
"472 374 OFFCURVE",
"432 419 OFFCURVE",
"405 452 OFFCURVE",
"389 475 OFFCURVE",
"384 484 QCURVE",
"370 489 OFFCURVE",
"357 480 OFFCURVE",
"355 472 QCURVE",
"372 438 OFFCURVE",
"420 359 OFFCURVE",
"442 313 QCURVE",
"365 219 OFFCURVE",
"281 131 OFFCURVE",
"279 122 QCURVE",
"279 122 LINE"
);
},
{
closed = 1;
nodes = (
"73 116 OFFCURVE",
"79 111 OFFCURVE",
"84 111 QCURVE SMOOTH",
"89 111 OFFCURVE",
"105 118 OFFCURVE",
"112 125 QCURVE SMOOTH",
"127 139 OFFCURVE",
"180 192 OFFCURVE",
"216 231 QCURVE SMOOTH",
"258 276 OFFCURVE",
"301 326 OFFCURVE",
"303 333 QCURVE",
"303 337 OFFCURVE",
"302 343 OFFCURVE",
"297 344 QCURVE",
"268 374 OFFCURVE",
"228 419 OFFCURVE",
"201 452 OFFCURVE",
"186 475 OFFCURVE",
"181 484 QCURVE",
"167 489 OFFCURVE",
"154 480 OFFCURVE",
"152 472 QCURVE",
"169 438 OFFCURVE",
"216 359 OFFCURVE",
"239 313 QCURVE",
"162 219 OFFCURVE",
"78 131 OFFCURVE",
"76 122 QCURVE",
"76 122 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"270 200 LINE",
"193 190 LINE",
"216 225 OFFCURVE",
"265 296 OFFCURVE",
"291 330 QCURVE",
"302 333 OFFCURVE",
"319 336 OFFCURVE",
"327 338 QCURVE SMOOTH",
"412 354 LINE SMOOTH",
"431 357 OFFCURVE",
"431 363 QCURVE",
"429 366 OFFCURVE",
"412 366 QCURVE SMOOTH",
"406 366 LINE SMOOTH",
"383 366 OFFCURVE",
"350 362 OFFCURVE",
"338 360 QCURVE SMOOTH",
"331 358 OFFCURVE",
"318 358 OFFCURVE",
"312 357 QCURVE",
"325 374 OFFCURVE",
"360 416 OFFCURVE",
"396 457 OFFCURVE",
"428 494 OFFCURVE",
"438 506 QCURVE SMOOTH",
"443 511 OFFCURVE",
"440 515 QCURVE SMOOTH",
"434 522 OFFCURVE",
"416 527 OFFCURVE",
"398 526 OFFCURVE",
"384 520 OFFCURVE",
"381 517 QCURVE SMOOTH",
"341 472 OFFCURVE",
"274 391 OFFCURVE",
"245 350 QCURVE",
"195 343 LINE SMOOTH",
"123 334 OFFCURVE",
"112 325 QCURVE",
"103 320 OFFCURVE",
"91 311 OFFCURVE",
"91 306 QCURVE SMOOTH",
"91 303 OFFCURVE",
"94 302 QCURVE",
"96 298 OFFCURVE",
"102 298 QCURVE SMOOTH",
"103 298 OFFCURVE",
"113 300 QCURVE",
"116 300 LINE",
"146 305 OFFCURVE",
"199 314 OFFCURVE",
"222 318 QCURVE",
"196 282 OFFCURVE",
"153 215 OFFCURVE",
"136 183 QCURVE",
"109 179 OFFCURVE",
"75 174 OFFCURVE",
"54 169 OFFCURVE",
"45 166 OFFCURVE",
"44 165 QCURVE",
"24 153 OFFCURVE",
"24 146 QCURVE SMOOTH",
"24 143 OFFCURVE",
"26 142 QCURVE",
"26 138 OFFCURVE",
"34 138 QCURVE SMOOTH",
"36 138 OFFCURVE",
"44 140 QCURVE",
"48 140 LINE",
"67 143 OFFCURVE",
"102 148 OFFCURVE",
"118 151 QCURVE",
"89 95 OFFCURVE",
"48 -7 OFFCURVE",
"33 -57 QCURVE SMOOTH",
"28 -78 OFFCURVE",
"20 -103 OFFCURVE",
"20 -108 QCURVE SMOOTH",
"20 -110 LINE SMOOTH",
"20 -118 OFFCURVE",
"33 -118 QCURVE SMOOTH",
"38 -118 OFFCURVE",
"42 -112 QCURVE",
"47 -89 OFFCURVE",
"53 -65 OFFCURVE",
"55 -58 QCURVE SMOOTH",
"70 -17 OFFCURVE",
"133 97 OFFCURVE",
"175 162 QCURVE",
"195 167 OFFCURVE",
"238 174 OFFCURVE",
"260 178 QCURVE SMOOTH",
"344 194 LINE SMOOTH",
"363 197 OFFCURVE",
"364 203 QCURVE",
"361 206 OFFCURVE",
"345 206 QCURVE SMOOTH",
"339 206 LINE SMOOTH",
"316 206 OFFCURVE",
"283 202 OFFCURVE",
"270 200 QCURVE",
"270 200 LINE"
);
}
);
width = 441;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"188 136 OFFCURVE",
"169 171 OFFCURVE",
"147 171 QCURVE SMOOTH",
"130 171 OFFCURVE",
"102 146 OFFCURVE",
"99 129 QCURVE SMOOTH",
"96 112 OFFCURVE",
"116 88 OFFCURVE",
"133 88 QCURVE SMOOTH",
"147 88 OFFCURVE",
"162 98 QCURVE",
"157 64 OFFCURVE",
"113 21 OFFCURVE",
"85 11 QCURVE SMOOTH",
"76 8 OFFCURVE",
"78 -4 OFFCURVE",
"88 0 QCURVE SMOOTH",
"104 5 OFFCURVE",
"139 24 OFFCURVE",
"169 53 OFFCURVE",
"188 91 OFFCURVE",
"188 116 QCURVE",
"188 116 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
19 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 13 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 154;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"225 226 OFFCURVE",
"205 226 QCURVE SMOOTH",
"191 226 OFFCURVE",
"174 208 OFFCURVE",
"176 194 QCURVE",
"184 28 LINE",
"194 28 LINE",
"197 39 OFFCURVE",
"210 90 OFFCURVE",
"222 145 OFFCURVE",
"230 195 OFFCURVE",
"228 206 QCURVE",
"228 206 LINE"
);
},
{
closed = 1;
nodes = (
"116 226 OFFCURVE",
"97 226 QCURVE SMOOTH",
"84 226 OFFCURVE",
"66 206 OFFCURVE",
"67 193 QCURVE SMOOTH",
"76 28 LINE",
"86 28 LINE",
"89 40 OFFCURVE",
"102 90 OFFCURVE",
"114 146 OFFCURVE",
"121 196 OFFCURVE",
"119 207 QCURVE",
"119 207 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 245;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = perthousand;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"659 210 OFFCURVE",
"621 252 OFFCURVE",
"587 252 QCURVE SMOOTH",
"554 252 OFFCURVE",
"500 219 OFFCURVE",
"461 167 OFFCURVE",
"440 104 OFFCURVE",
"440 74 QCURVE SMOOTH",
"440 56 OFFCURVE",
"449 22 OFFCURVE",
"467 -5 OFFCURVE",
"496 -21 OFFCURVE",
"516 -21 QCURVE SMOOTH",
"547 -21 OFFCURVE",
"599 21 OFFCURVE",
"637 82 OFFCURVE",
"659 150 OFFCURVE",
"659 176 QCURVE",
"659 176 LINE"
);
},
{
closed = 1;
nodes = (
"488 651 LINE",
"456 651 LINE",
"356 483 LINE SMOOTH",
"350 473 OFFCURVE",
"319 456 OFFCURVE",
"307 456 QCURVE SMOOTH",
"298 456 OFFCURVE",
"288 461 QCURVE",
"287 463 LINE",
"306 484 OFFCURVE",
"328 552 OFFCURVE",
"328 580 QCURVE SMOOTH",
"328 611 OFFCURVE",
"296 656 OFFCURVE",
"262 656 QCURVE SMOOTH",
"229 656 OFFCURVE",
"176 623 OFFCURVE",
"137 571 OFFCURVE",
"116 508 OFFCURVE",
"116 478 QCURVE SMOOTH",
"116 461 OFFCURVE",
"124 428 OFFCURVE",
"142 400 OFFCURVE",
"169 383 OFFCURVE",
"188 383 QCURVE SMOOTH",
"203 383 OFFCURVE",
"231 396 OFFCURVE",
"256 417 OFFCURVE",
"276 443 OFFCURVE",
"283 455 QCURVE",
"293 448 OFFCURVE",
"308 448 QCURVE SMOOTH",
"326 448 OFFCURVE",
"343 460 QCURVE",
"32 -15 LINE",
"64 -15 LINE",
"64 -15 LINE"
);
},
{
closed = 1;
nodes = (
"417 210 OFFCURVE",
"380 252 OFFCURVE",
"345 252 QCURVE SMOOTH",
"312 252 OFFCURVE",
"259 219 OFFCURVE",
"220 167 OFFCURVE",
"199 104 OFFCURVE",
"199 74 QCURVE SMOOTH",
"199 56 OFFCURVE",
"208 22 OFFCURVE",
"226 -5 OFFCURVE",
"254 -21 OFFCURVE",
"274 -21 QCURVE SMOOTH",
"305 -21 OFFCURVE",
"357 21 OFFCURVE",
"395 82 OFFCURVE",
"417 150 OFFCURVE",
"417 176 QCURVE",
"417 176 LINE"
);
},
{
closed = 1;
nodes = (
"316 572 OFFCURVE",
"310 573 OFFCURVE",
"307 573 QCURVE SMOOTH",
"295 573 OFFCURVE",
"278 560 OFFCURVE",
"267 540 OFFCURVE",
"263 517 OFFCURVE",
"263 507 QCURVE SMOOTH",
"263 493 OFFCURVE",
"270 472 OFFCURVE",
"277 461 QCURVE",
"275 457 LINE SMOOTH",
"270 446 OFFCURVE",
"253 424 OFFCURVE",
"231 404 OFFCURVE",
"206 392 OFFCURVE",
"193 392 QCURVE SMOOTH",
"180 392 OFFCURVE",
"165 407 OFFCURVE",
"157 428 OFFCURVE",
"155 452 OFFCURVE",
"155 462 QCURVE SMOOTH",
"155 490 OFFCURVE",
"162 514 QCURVE SMOOTH",
"167 531 OFFCURVE",
"187 576 OFFCURVE",
"216 615 OFFCURVE",
"253 642 OFFCURVE",
"274 642 QCURVE SMOOTH",
"289 642 OFFCURVE",
"307 629 OFFCURVE",
"316 608 OFFCURVE",
"319 583 OFFCURVE",
"319 572 QCURVE",
"319 572 LINE"
);
},
{
closed = 1;
nodes = (
"643 163 OFFCURVE",
"623 96 OFFCURVE",
"589 34 OFFCURVE",
"542 -11 OFFCURVE",
"515 -11 QCURVE SMOOTH",
"503 -11 OFFCURVE",
"489 4 OFFCURVE",
"482 26 OFFCURVE",
"479 50 OFFCURVE",
"479 59 QCURVE SMOOTH",
"479 72 OFFCURVE",
"483 98 OFFCURVE",
"486 111 QCURVE SMOOTH",
"491 128 OFFCURVE",
"511 173 OFFCURVE",
"540 212 OFFCURVE",
"577 239 OFFCURVE",
"598 239 QCURVE SMOOTH",
"622 239 OFFCURVE",
"643 207 OFFCURVE",
"643 185 QCURVE",
"643 185 LINE"
);
},
{
closed = 1;
nodes = (
"401 163 OFFCURVE",
"381 96 OFFCURVE",
"347 34 OFFCURVE",
"301 -11 OFFCURVE",
"274 -11 QCURVE SMOOTH",
"262 -11 OFFCURVE",
"247 4 OFFCURVE",
"240 26 OFFCURVE",
"237 50 OFFCURVE",
"237 59 QCURVE SMOOTH",
"237 84 OFFCURVE",
"245 111 QCURVE SMOOTH",
"249 128 OFFCURVE",
"270 173 OFFCURVE",
"299 212 OFFCURVE",
"336 239 OFFCURVE",
"357 239 QCURVE SMOOTH",
"381 239 OFFCURVE",
"401 207 OFFCURVE",
"401 185 QCURVE",
"401 185 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
127 4 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
106 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 3 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
137 3 64 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 3 117 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 10 26 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
20 34 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
53 34 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 84 21 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
9 127 25 127 41 127 57 127 73 127 89 127 105 127 121 127 137 127 153 127 169 127 185 127 201 127 217 127 233 127 249 127 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 127 25 127 41 127 57 127 73 127 89 127 105 127 121 127 137 127 153 127 169 127 185 127 201 127 217 127 233 127 249 127 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 127 25 127 41 127 57 127 73 127 89 127 105 127 121 127 137 127 153 127 169 127 185 127 201 127 217 127 233 127 249 127 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
6 137 22 137 38 137 54 137 70 137 86 137 102 137 118 137 134 137 150 137 166 137 182 137 198 137 214 137 230 137 246 137 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 137 21 137 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
15 5 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
39 29 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
19 5 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 29 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 688;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 422, 422}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 437, 453}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 902;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 644, 402}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 583, 422}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 902;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 606, 426}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 902;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Iacute;
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 823, 389}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 906;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 791, 450}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 906;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 934, 427}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 906;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Igrave;
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, 934, 434}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 906;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 486, 397}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 784;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 284, 433}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 784;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = apple;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"331 39 OFFCURVE",
"351 31 OFFCURVE",
"368 31 QCURVE SMOOTH",
"386 31 OFFCURVE",
"419 54 OFFCURVE",
"447 90 OFFCURVE",
"469 133 OFFCURVE",
"476 154 QCURVE",
"449 165 OFFCURVE",
"414 213 OFFCURVE",
"412 243 QCURVE SMOOTH",
"411 263 OFFCURVE",
"420 295 OFFCURVE",
"435 319 OFFCURVE",
"455 337 OFFCURVE",
"464 342 QCURVE",
"451 363 OFFCURVE",
"418 384 OFFCURVE",
"387 391 OFFCURVE",
"362 390 OFFCURVE",
"358 388 QCURVE SMOOTH",
"351 385 OFFCURVE",
"322 376 OFFCURVE",
"309 372 QCURVE SMOOTH",
"299 370 OFFCURVE",
"280 368 OFFCURVE",
"269 371 QCURVE SMOOTH",
"256 375 OFFCURVE",
"228 385 OFFCURVE",
"220 388 QCURVE SMOOTH",
"215 390 OFFCURVE",
"190 390 OFFCURVE",
"158 379 OFFCURVE",
"123 352 OFFCURVE",
"110 327 QCURVE SMOOTH",
"95 299 OFFCURVE",
"88 231 OFFCURVE",
"99 163 OFFCURVE",
"127 100 OFFCURVE",
"146 77 QCURVE SMOOTH",
"163 57 OFFCURVE",
"193 30 OFFCURVE",
"211 30 QCURVE SMOOTH",
"228 30 OFFCURVE",
"247 39 OFFCURVE",
"253 43 QCURVE SMOOTH",
"259 47 OFFCURVE",
"278 52 OFFCURVE",
"299 52 OFFCURVE",
"319 47 OFFCURVE",
"326 43 QCURVE",
"326 43 LINE"
);
},
{
closed = 1;
nodes = (
"296 436 OFFCURVE",
"288 392 OFFCURVE",
"292 383 QCURVE",
"319 381 OFFCURVE",
"359 407 OFFCURVE",
"382 445 OFFCURVE",
"387 485 OFFCURVE",
"378 498 QCURVE",
"374 499 OFFCURVE",
"357 495 OFFCURVE",
"337 485 OFFCURVE",
"318 468 OFFCURVE",
"311 458 QCURVE",
"311 458 LINE"
);
},
{
closed = 1;
nodes = (
"156 324 LINE",
"156 315 LINE",
"158 315 LINE",
"158 328 LINE",
"156 328 LINE",
"156 327 OFFCURVE",
"155 327 QCURVE",
"155 326 OFFCURVE",
"154 326 QCURVE SMOOTH",
"153 326 LINE",
"153 324 LINE",
"153 324 LINE"
);
},
{
closed = 1;
nodes = (
"164 328 OFFCURVE",
"166 328 QCURVE SMOOTH",
"170 328 OFFCURVE",
"170 326 QCURVE",
"171 325 OFFCURVE",
"171 322 QCURVE SMOOTH",
"171 319 OFFCURVE",
"170 318 QCURVE",
"170 315 OFFCURVE",
"166 315 QCURVE SMOOTH",
"164 315 OFFCURVE",
"164 316 QCURVE",
"162 316 OFFCURVE",
"162 318 QCURVE",
"165 318 LINE",
"165 317 LINE",
"166 317 LINE SMOOTH",
"168 317 OFFCURVE",
"168 318 QCURVE SMOOTH",
"168 320 LINE",
"167 319 OFFCURVE",
"166 319 QCURVE SMOOTH",
"165 319 OFFCURVE",
"164 320 OFFCURVE",
"163 320 QCURVE",
"162 321 OFFCURVE",
"162 323 QCURVE SMOOTH",
"162 326 OFFCURVE",
"163 327 QCURVE",
"163 327 LINE"
);
},
{
closed = 1;
nodes = (
"168 322 OFFCURVE",
"168 324 QCURVE SMOOTH",
"168 325 LINE",
"167 326 OFFCURVE",
"166 326 QCURVE SMOOTH",
"165 326 LINE",
"165 324 LINE",
"165 322 LINE",
"166 321 LINE",
"167 321 OFFCURVE",
"167 322 QCURVE",
"167 322 LINE"
);
},
{
closed = 1;
nodes = (
"174 328 OFFCURVE",
"176 328 QCURVE SMOOTH",
"179 328 OFFCURVE",
"181 326 QCURVE",
"181 322 LINE",
"181 318 LINE",
"179 315 OFFCURVE",
"176 315 QCURVE SMOOTH",
"175 315 OFFCURVE",
"174 316 QCURVE",
"174 316 OFFCURVE",
"172 318 QCURVE",
"175 318 LINE",
"175 317 LINE",
"176 317 LINE SMOOTH",
"178 317 OFFCURVE",
"178 318 QCURVE SMOOTH",
"178 319 OFFCURVE",
"179 319 OFFCURVE",
"179 320 QCURVE",
"178 320 LINE",
"177 319 OFFCURVE",
"176 319 QCURVE SMOOTH",
"175 319 OFFCURVE",
"174 320 OFFCURVE",
"173 320 QCURVE",
"173 321 OFFCURVE",
"172 322 OFFCURVE",
"172 323 QCURVE SMOOTH",
"172 325 OFFCURVE",
"173 326 OFFCURVE",
"173 327 QCURVE",
"173 327 LINE"
);
},
{
closed = 1;
nodes = (
"178 324 LINE",
"178 325 LINE SMOOTH",
"178 326 OFFCURVE",
"177 326 QCURVE SMOOTH",
"175 326 LINE",
"175 324 LINE",
"175 322 LINE",
"176 322 OFFCURVE",
"176 321 OFFCURVE",
"177 321 QCURVE",
"177 321 OFFCURVE",
"178 322 QCURVE",
"178 322 LINE"
);
},
{
closed = 1;
nodes = (
"182 320 OFFCURVE",
"182 319 QCURVE SMOOTH",
"182 318 OFFCURVE",
"183 317 OFFCURVE",
"183 316 QCURVE",
"184 315 OFFCURVE",
"187 315 QCURVE SMOOTH",
"189 315 OFFCURVE",
"190 316 QCURVE SMOOTH",
"191 317 OFFCURVE",
"191 319 QCURVE SMOOTH",
"191 321 LINE",
"190 321 OFFCURVE",
"190 322 OFFCURVE",
"189 322 QCURVE",
"190 322 OFFCURVE",
"190 323 OFFCURVE",
"191 323 QCURVE",
"191 325 LINE SMOOTH",
"191 326 OFFCURVE",
"190 326 OFFCURVE",
"190 327 QCURVE",
"189 328 OFFCURVE",
"187 328 QCURVE SMOOTH",
"184 328 OFFCURVE",
"184 327 QCURVE",
"183 326 OFFCURVE",
"183 325 QCURVE SMOOTH",
"183 323 LINE",
"184 322 LINE",
"183 321 LINE",
"183 321 LINE"
);
},
{
closed = 1;
nodes = (
"187 317 LINE",
"188 317 LINE",
"188 318 OFFCURVE",
"189 318 OFFCURVE",
"189 319 QCURVE SMOOTH",
"189 320 OFFCURVE",
"188 320 QCURVE",
"188 321 OFFCURVE",
"187 321 QCURVE SMOOTH",
"186 321 OFFCURVE",
"185 320 QCURVE",
"185 319 LINE",
"185 317 LINE",
"185 317 LINE"
);
},
{
closed = 1;
nodes = (
"187 323 LINE",
"188 323 LINE",
"188 324 LINE",
"188 326 LINE",
"187 326 LINE",
"186 326 LINE",
"185 325 OFFCURVE",
"185 324 QCURVE",
"186 323 LINE",
"186 323 LINE"
);
},
{
closed = 1;
nodes = (
"192 319 LINE",
"197 319 LINE",
"197 321 LINE",
"192 321 LINE",
"192 321 LINE"
);
},
{
closed = 1;
nodes = (
"199 315 LINE",
"207 315 LINE",
"207 317 LINE",
"202 317 LINE",
"202 318 LINE",
"203 318 OFFCURVE",
"203 319 OFFCURVE",
"204 319 QCURVE",
"205 320 LINE",
"206 320 OFFCURVE",
"206 321 OFFCURVE",
"207 321 QCURVE",
"207 324 LINE SMOOTH",
"207 326 OFFCURVE",
"206 327 QCURVE SMOOTH",
"205 328 OFFCURVE",
"203 328 QCURVE SMOOTH",
"201 328 OFFCURVE",
"199 326 QCURVE",
"199 324 LINE",
"201 324 LINE",
"201 324 OFFCURVE",
"202 325 QCURVE",
"202 326 OFFCURVE",
"203 326 QCURVE SMOOTH",
"204 326 OFFCURVE",
"204 325 QCURVE",
"205 325 OFFCURVE",
"205 324 QCURVE SMOOTH",
"205 323 OFFCURVE",
"204 322 QCURVE SMOOTH",
"202 320 LINE",
"198 318 OFFCURVE",
"199 318 QCURVE",
"199 318 LINE"
);
},
{
closed = 1;
nodes = (
"216 328 OFFCURVE",
"213 328 QCURVE SMOOTH",
"210 328 OFFCURVE",
"210 326 QCURVE",
"209 325 OFFCURVE",
"209 321 QCURVE SMOOTH",
"209 318 OFFCURVE",
"210 317 QCURVE",
"210 315 OFFCURVE",
"213 315 QCURVE SMOOTH",
"216 315 OFFCURVE",
"217 317 QCURVE",
"217 318 OFFCURVE",
"218 319 OFFCURVE",
"218 321 QCURVE SMOOTH",
"218 323 OFFCURVE",
"217 325 OFFCURVE",
"217 326 QCURVE",
"217 326 LINE"
);
},
{
closed = 1;
nodes = (
"212 317 OFFCURVE",
"213 317 QCURVE SMOOTH",
"215 317 OFFCURVE",
"215 318 QCURVE SMOOTH",
"215 321 LINE",
"215 325 LINE SMOOTH",
"215 326 OFFCURVE",
"213 326 QCURVE",
"213 326 OFFCURVE",
"212 325 QCURVE",
"212 324 OFFCURVE",
"211 323 OFFCURVE",
"211 321 QCURVE SMOOTH",
"211 320 OFFCURVE",
"212 319 OFFCURVE",
"212 318 QCURVE",
"212 318 LINE"
);
},
{
closed = 1;
nodes = (
"223 324 LINE",
"223 315 LINE",
"225 315 LINE",
"225 328 LINE",
"223 328 LINE",
"223 327 LINE",
"222 326 OFFCURVE",
"221 326 QCURVE SMOOTH",
"220 326 LINE",
"220 324 LINE",
"220 324 LINE"
);
},
{
closed = 1;
nodes = (
"236 328 OFFCURVE",
"234 328 QCURVE SMOOTH",
"231 328 OFFCURVE",
"230 326 QCURVE SMOOTH",
"229 325 OFFCURVE",
"229 321 QCURVE SMOOTH",
"229 318 OFFCURVE",
"230 317 QCURVE SMOOTH",
"231 315 OFFCURVE",
"234 315 QCURVE SMOOTH",
"236 315 OFFCURVE",
"237 317 QCURVE SMOOTH",
"238 318 OFFCURVE",
"238 321 QCURVE SMOOTH",
"238 325 OFFCURVE",
"237 326 QCURVE",
"237 326 LINE"
);
},
{
closed = 1;
nodes = (
"232 317 OFFCURVE",
"234 317 QCURVE",
"234 317 OFFCURVE",
"235 318 QCURVE",
"235 321 LINE",
"235 325 LINE SMOOTH",
"235 326 OFFCURVE",
"234 326 QCURVE SMOOTH",
"232 326 OFFCURVE",
"232 325 QCURVE SMOOTH",
"232 321 LINE",
"232 318 LINE",
"232 318 LINE"
);
},
{
closed = 1;
nodes = (
"252 328 LINE",
"245 328 LINE",
"245 315 LINE",
"248 315 LINE",
"248 320 LINE",
"251 320 LINE",
"252 320 LINE SMOOTH",
"253 320 OFFCURVE",
"253 318 QCURVE SMOOTH",
"253 317 LINE",
"253 316 LINE",
"253 315 LINE",
"256 315 LINE",
"256 316 LINE",
"255 316 OFFCURVE",
"255 317 QCURVE SMOOTH",
"255 318 LINE",
"255 320 LINE SMOOTH",
"255 321 OFFCURVE",
"254 321 QCURVE",
"255 322 OFFCURVE",
"255 323 QCURVE",
"256 323 OFFCURVE",
"256 325 QCURVE SMOOTH",
"256 326 LINE",
"255 326 OFFCURVE",
"255 327 QCURVE",
"254 328 LINE",
"254 328 LINE"
);
},
{
closed = 1;
nodes = (
"248 322 LINE",
"251 322 LINE SMOOTH",
"252 322 OFFCURVE",
"252 323 QCURVE",
"253 323 OFFCURVE",
"253 324 QCURVE SMOOTH",
"253 325 OFFCURVE",
"252 326 QCURVE",
"251 326 LINE",
"248 326 LINE",
"248 326 LINE"
);
},
{
closed = 1;
nodes = (
"268 318 OFFCURVE",
"268 320 QCURVE SMOOTH",
"268 322 OFFCURVE",
"266 324 QCURVE",
"266 325 OFFCURVE",
"263 325 QCURVE SMOOTH",
"260 325 OFFCURVE",
"259 324 QCURVE SMOOTH",
"258 323 OFFCURVE",
"258 320 QCURVE SMOOTH",
"258 317 OFFCURVE",
"259 316 QCURVE SMOOTH",
"260 315 OFFCURVE",
"263 315 QCURVE SMOOTH",
"266 315 OFFCURVE",
"266 316 QCURVE",
"266 316 LINE"
);
},
{
closed = 1;
nodes = (
"265 318 OFFCURVE",
"265 320 QCURVE SMOOTH",
"265 322 OFFCURVE",
"264 322 QCURVE",
"264 323 OFFCURVE",
"263 323 QCURVE SMOOTH",
"261 323 OFFCURVE",
"261 322 QCURVE",
"260 322 OFFCURVE",
"260 320 QCURVE SMOOTH",
"260 318 OFFCURVE",
"261 318 QCURVE",
"261 317 OFFCURVE",
"263 317 QCURVE",
"263 317 OFFCURVE",
"264 318 QCURVE",
"264 318 LINE"
);
},
{
closed = 1;
nodes = (
"277 325 OFFCURVE",
"275 325 QCURVE SMOOTH",
"273 325 LINE",
"273 324 OFFCURVE",
"272 324 QCURVE",
"272 328 LINE",
"269 328 LINE",
"269 315 LINE",
"272 315 LINE",
"272 316 LINE",
"272 316 OFFCURVE",
"273 315 QCURVE",
"275 315 LINE SMOOTH",
"277 315 OFFCURVE",
"278 316 QCURVE",
"278 317 OFFCURVE",
"279 319 OFFCURVE",
"279 320 QCURVE SMOOTH",
"279 322 OFFCURVE",
"278 323 OFFCURVE",
"278 324 QCURVE",
"278 324 LINE"
);
},
{
closed = 1;
nodes = (
"276 320 LINE",
"276 322 LINE",
"276 322 OFFCURVE",
"274 323 QCURVE",
"273 323 OFFCURVE",
"272 322 QCURVE",
"272 320 LINE",
"272 318 LINE",
"273 317 OFFCURVE",
"274 317 QCURVE SMOOTH",
"275 317 OFFCURVE",
"276 318 QCURVE",
"276 318 LINE"
);
},
{
closed = 1;
nodes = (
"285 325 LINE SMOOTH",
"282 325 OFFCURVE",
"281 324 QCURVE SMOOTH",
"280 323 OFFCURVE",
"280 320 QCURVE SMOOTH",
"280 317 OFFCURVE",
"281 316 QCURVE SMOOTH",
"282 315 OFFCURVE",
"285 315 QCURVE SMOOTH",
"288 315 OFFCURVE",
"288 316 QCURVE",
"289 317 OFFCURVE",
"289 318 QCURVE",
"287 318 LINE",
"286 317 LINE",
"285 317 LINE",
"283 317 LINE",
"283 318 OFFCURVE",
"282 318 OFFCURVE",
"282 319 QCURVE",
"289 319 LINE",
"290 320 OFFCURVE",
"289 321 QCURVE",
"289 323 LINE",
"287 325 LINE",
"287 325 LINE"
);
},
{
closed = 1;
nodes = (
"282 321 LINE",
"287 321 LINE",
"287 322 OFFCURVE",
"286 322 QCURVE",
"286 323 OFFCURVE",
"285 323 QCURVE SMOOTH",
"283 323 OFFCURVE",
"283 322 QCURVE",
"283 322 LINE"
);
},
{
closed = 1;
nodes = (
"295 325 OFFCURVE",
"294 324 QCURVE SMOOTH",
"293 323 LINE",
"293 325 LINE",
"291 325 LINE",
"291 315 LINE",
"293 315 LINE",
"293 320 LINE SMOOTH",
"293 321 OFFCURVE",
"294 321 QCURVE",
"294 322 OFFCURVE",
"296 322 QCURVE",
"296 325 LINE",
"296 325 LINE"
);
},
{
closed = 1;
nodes = (
"298 323 LINE",
"298 317 LINE SMOOTH",
"298 316 OFFCURVE",
"299 316 QCURVE",
"299 315 OFFCURVE",
"301 315 QCURVE SMOOTH",
"302 315 LINE",
"302 317 LINE",
"301 317 LINE",
"301 318 LINE",
"301 323 LINE",
"302 323 LINE",
"302 325 LINE",
"301 325 LINE",
"301 327 LINE",
"298 327 LINE",
"298 325 LINE",
"297 325 LINE",
"297 323 LINE",
"297 323 LINE"
);
},
{
closed = 1;
nodes = (
"319 328 LINE",
"309 328 LINE",
"309 315 LINE",
"319 315 LINE",
"319 317 LINE",
"312 317 LINE",
"312 321 LINE",
"318 321 LINE",
"318 323 LINE",
"312 323 LINE",
"312 326 LINE",
"319 326 LINE",
"319 326 LINE"
);
},
{
closed = 1;
nodes = (
"332 315 LINE",
"341 315 LINE",
"341 317 LINE",
"334 317 LINE",
"334 328 LINE",
"332 328 LINE",
"332 328 LINE"
);
},
{
closed = 1;
nodes = (
"347 325 LINE SMOOTH",
"344 325 OFFCURVE",
"343 324 QCURVE SMOOTH",
"342 323 OFFCURVE",
"342 320 QCURVE SMOOTH",
"342 317 OFFCURVE",
"343 316 QCURVE SMOOTH",
"344 315 OFFCURVE",
"347 315 QCURVE SMOOTH",
"350 315 OFFCURVE",
"350 316 QCURVE",
"351 317 OFFCURVE",
"351 318 QCURVE",
"349 318 LINE",
"348 317 LINE",
"347 317 LINE",
"345 317 LINE",
"345 318 OFFCURVE",
"344 318 OFFCURVE",
"344 319 QCURVE",
"352 319 LINE",
"352 321 OFFCURVE",
"351 321 QCURVE",
"351 323 LINE",
"349 325 LINE",
"349 325 LINE"
);
},
{
closed = 1;
nodes = (
"344 321 LINE",
"349 321 LINE",
"349 322 OFFCURVE",
"348 322 QCURVE",
"348 323 OFFCURVE",
"347 323 QCURVE SMOOTH",
"346 323 OFFCURVE",
"345 322 QCURVE",
"345 322 LINE"
);
},
{
closed = 1;
nodes = (
"353 325 LINE",
"353 319 LINE",
"353 316 LINE",
"354 315 OFFCURVE",
"356 315 QCURVE SMOOTH",
"357 315 LINE SMOOTH",
"358 315 OFFCURVE",
"359 316 QCURVE",
"359 315 LINE",
"362 315 LINE",
"362 325 LINE",
"359 325 LINE",
"359 320 LINE",
"359 318 LINE",
"358 317 OFFCURVE",
"357 317 QCURVE SMOOTH",
"356 317 OFFCURVE",
"356 318 QCURVE",
"355 318 OFFCURVE",
"355 319 QCURVE SMOOTH",
"355 325 LINE",
"355 325 LINE"
);
},
{
closed = 1;
nodes = (
"363 318 LINE",
"363 317 OFFCURVE",
"364 316 QCURVE SMOOTH",
"365 315 OFFCURVE",
"368 315 QCURVE SMOOTH",
"370 315 OFFCURVE",
"371 316 QCURVE",
"372 316 OFFCURVE",
"372 318 QCURVE SMOOTH",
"372 320 LINE",
"371 320 OFFCURVE",
"370 321 OFFCURVE",
"369 321 QCURVE SMOOTH",
"368 321 OFFCURVE",
"367 322 QCURVE",
"366 322 LINE",
"366 323 OFFCURVE",
"367 323 QCURVE SMOOTH",
"368 323 LINE",
"369 323 LINE",
"369 322 LINE",
"372 322 LINE",
"372 323 OFFCURVE",
"371 324 QCURVE SMOOTH",
"370 325 OFFCURVE",
"368 325 QCURVE SMOOTH",
"365 325 OFFCURVE",
"365 324 QCURVE",
"364 323 OFFCURVE",
"364 322 QCURVE SMOOTH",
"364 320 LINE",
"365 320 OFFCURVE",
"366 319 OFFCURVE",
"367 319 QCURVE SMOOTH",
"368 319 OFFCURVE",
"369 318 QCURVE",
"370 318 LINE",
"370 317 OFFCURVE",
"369 317 QCURVE SMOOTH",
"368 317 LINE",
"366 317 LINE",
"366 318 LINE",
"366 318 LINE"
);
},
{
closed = 1;
nodes = (
"383 321 LINE",
"381 324 OFFCURVE",
"381 324 QCURVE",
"380 325 OFFCURVE",
"378 325 QCURVE SMOOTH",
"376 325 OFFCURVE",
"375 324 QCURVE SMOOTH",
"374 323 OFFCURVE",
"374 320 QCURVE SMOOTH",
"374 317 OFFCURVE",
"375 316 QCURVE",
"375 315 OFFCURVE",
"378 315 QCURVE SMOOTH",
"381 315 OFFCURVE",
"382 316 QCURVE",
"382 317 OFFCURVE",
"383 318 OFFCURVE",
"383 319 QCURVE",
"380 319 LINE",
"380 317 LINE",
"378 317 LINE SMOOTH",
"377 317 OFFCURVE",
"377 318 QCURVE",
"376 319 OFFCURVE",
"376 320 QCURVE SMOOTH",
"376 321 OFFCURVE",
"377 322 QCURVE",
"377 322 OFFCURVE",
"378 323 QCURVE",
"379 323 OFFCURVE",
"380 322 QCURVE",
"380 321 LINE",
"380 321 LINE"
);
},
{
closed = 1;
nodes = (
"390 325 LINE",
"388 325 LINE",
"387 324 LINE",
"387 328 LINE",
"384 328 LINE",
"384 315 LINE",
"387 315 LINE",
"387 320 LINE",
"387 322 LINE",
"388 323 OFFCURVE",
"389 323 QCURVE SMOOTH",
"390 323 OFFCURVE",
"390 322 QCURVE",
"390 322 OFFCURVE",
"391 321 QCURVE",
"391 315 LINE",
"393 315 LINE",
"393 321 LINE",
"393 323 LINE",
"393 324 LINE",
"392 324 OFFCURVE",
"392 325 OFFCURVE",
"391 325 QCURVE",
"391 325 LINE"
);
},
{
closed = 1;
nodes = (
"395 315 LINE",
"398 315 LINE",
"398 318 LINE",
"399 319 LINE",
"401 315 LINE",
"405 315 LINE",
"401 321 LINE",
"404 325 LINE",
"401 325 LINE",
"398 321 LINE",
"398 328 LINE",
"395 328 LINE",
"395 328 LINE"
);
},
{
closed = 1;
nodes = (
"410 325 LINE SMOOTH",
"407 325 OFFCURVE",
"406 324 QCURVE SMOOTH",
"405 323 OFFCURVE",
"405 320 QCURVE SMOOTH",
"405 317 OFFCURVE",
"406 316 QCURVE SMOOTH",
"407 315 OFFCURVE",
"410 315 QCURVE SMOOTH",
"413 315 OFFCURVE",
"414 316 QCURVE",
"414 318 LINE",
"412 318 LINE",
"412 318 OFFCURVE",
"411 317 QCURVE",
"410 317 LINE",
"409 317 LINE",
"408 318 OFFCURVE",
"408 319 QCURVE",
"415 319 LINE",
"415 321 LINE",
"414 322 OFFCURVE",
"414 323 QCURVE",
"412 325 LINE",
"412 325 LINE"
);
},
{
closed = 1;
nodes = (
"408 321 LINE",
"412 321 LINE",
"412 322 OFFCURVE",
"411 322 QCURVE",
"411 323 OFFCURVE",
"410 323 QCURVE SMOOTH",
"409 323 OFFCURVE",
"408 322 QCURVE",
"408 322 LINE"
);
},
{
closed = 1;
nodes = (
"210 296 LINE",
"207 296 LINE",
"207 283 LINE",
"210 283 LINE",
"210 283 LINE"
);
},
{
closed = 1;
nodes = (
"215 296 LINE",
"212 296 LINE",
"212 283 LINE",
"215 283 LINE",
"215 283 LINE"
);
},
{
closed = 1;
nodes = (
"220 296 LINE",
"217 296 LINE",
"217 283 LINE",
"220 283 LINE",
"220 283 LINE"
);
},
{
closed = 1;
nodes = (
"226 293 LINE SMOOTH",
"224 293 OFFCURVE",
"223 292 QCURVE SMOOTH",
"221 290 OFFCURVE",
"221 288 QCURVE SMOOTH",
"221 286 OFFCURVE",
"223 284 QCURVE SMOOTH",
"224 283 OFFCURVE",
"226 283 QCURVE SMOOTH",
"229 283 OFFCURVE",
"230 284 QCURVE",
"230 285 OFFCURVE",
"231 285 OFFCURVE",
"231 286 QCURVE",
"228 286 LINE",
"228 285 LINE",
"226 285 LINE",
"225 285 LINE",
"224 286 OFFCURVE",
"224 287 QCURVE",
"231 287 LINE",
"231 289 LINE SMOOTH",
"231 291 OFFCURVE",
"230 291 QCURVE",
"230 291 OFFCURVE",
"228 293 QCURVE",
"228 293 LINE"
);
},
{
closed = 1;
nodes = (
"236 293 LINE SMOOTH",
"234 293 OFFCURVE",
"233 292 QCURVE SMOOTH",
"232 291 OFFCURVE",
"232 288 QCURVE SMOOTH",
"232 285 OFFCURVE",
"233 284 QCURVE SMOOTH",
"234 283 OFFCURVE",
"236 283 QCURVE SMOOTH",
"237 283 OFFCURVE",
"238 284 QCURVE SMOOTH",
"239 285 LINE",
"239 284 LINE SMOOTH",
"239 283 OFFCURVE",
"238 282 QCURVE",
"238 281 OFFCURVE",
"236 281 QCURVE SMOOTH",
"235 281 LINE",
"235 282 LINE",
"232 282 LINE",
"232 280 OFFCURVE",
"233 280 QCURVE",
"234 279 OFFCURVE",
"236 279 QCURVE SMOOTH",
"240 279 OFFCURVE",
"240 281 QCURVE",
"241 281 OFFCURVE",
"241 284 QCURVE SMOOTH",
"241 293 LINE",
"239 293 LINE",
"239 291 LINE",
"237 293 OFFCURVE",
"237 293 QCURVE",
"237 293 LINE"
);
},
{
closed = 1;
nodes = (
"238 286 OFFCURVE",
"239 288 QCURVE",
"239 289 OFFCURVE",
"238 290 QCURVE",
"238 291 OFFCURVE",
"236 291 QCURVE",
"235 290 LINE SMOOTH",
"234 289 OFFCURVE",
"234 288 QCURVE SMOOTH",
"234 287 OFFCURVE",
"235 286 QCURVE SMOOTH",
"236 285 LINE",
"238 285 OFFCURVE",
"238 286 QCURVE",
"238 286 LINE"
);
},
{
closed = 1;
nodes = (
"246 289 LINE SMOOTH",
"245 289 OFFCURVE",
"244 288 QCURVE",
"243 288 OFFCURVE",
"243 286 QCURVE SMOOTH",
"243 284 OFFCURVE",
"244 284 QCURVE",
"244 283 OFFCURVE",
"246 283 QCURVE SMOOTH",
"248 283 LINE",
"248 284 OFFCURVE",
"249 284 QCURVE",
"249 283 LINE",
"252 283 LINE",
"252 284 LINE",
"251 284 LINE",
"251 286 LINE",
"251 290 LINE SMOOTH",
"251 292 OFFCURVE",
"250 292 QCURVE",
"249 293 OFFCURVE",
"247 293 QCURVE SMOOTH",
"245 293 OFFCURVE",
"244 292 QCURVE SMOOTH",
"243 291 OFFCURVE",
"243 290 QCURVE",
"246 290 LINE",
"246 291 LINE",
"247 291 LINE",
"248 291 LINE SMOOTH",
"249 291 OFFCURVE",
"249 290 QCURVE",
"249 290 OFFCURVE",
"248 289 QCURVE",
"247 289 LINE",
"247 289 LINE"
);
},
{
closed = 1;
nodes = (
"248 288 LINE",
"248 287 LINE",
"247 287 LINE",
"246 287 LINE",
"245 286 LINE",
"245 285 OFFCURVE",
"246 285 QCURVE SMOOTH",
"247 285 LINE",
"248 285 LINE SMOOTH",
"249 285 OFFCURVE",
"249 287 QCURVE SMOOTH",
"249 288 LINE",
"249 288 LINE"
);
},
{
closed = 1;
nodes = (
"256 296 LINE",
"254 296 LINE",
"254 283 LINE",
"256 283 LINE",
"256 283 LINE"
);
},
{
closed = 1;
nodes = (
"267 293 LINE SMOOTH",
"265 293 OFFCURVE",
"264 292 QCURVE",
"264 291 OFFCURVE",
"263 289 OFFCURVE",
"263 288 QCURVE SMOOTH",
"263 286 OFFCURVE",
"264 285 OFFCURVE",
"264 284 QCURVE",
"265 283 OFFCURVE",
"267 283 QCURVE SMOOTH",
"269 283 LINE",
"270 284 LINE",
"270 283 LINE",
"273 283 LINE",
"273 296 LINE",
"270 296 LINE",
"270 292 LINE",
"270 292 OFFCURVE",
"269 293 QCURVE",
"269 293 LINE"
);
},
{
closed = 1;
nodes = (
"270 288 LINE SMOOTH",
"270 290 OFFCURVE",
"269 290 QCURVE",
"269 291 OFFCURVE",
"268 291 QCURVE SMOOTH",
"267 291 OFFCURVE",
"266 290 QCURVE",
"266 288 LINE",
"266 286 LINE",
"267 285 OFFCURVE",
"268 285 QCURVE SMOOTH",
"269 285 OFFCURVE",
"270 286 QCURVE",
"270 286 LINE"
);
},
{
closed = 1;
nodes = (
"275 293 LINE",
"275 287 LINE",
"275 284 LINE",
"276 283 OFFCURVE",
"278 283 QCURVE SMOOTH",
"280 283 LINE",
"281 284 LINE",
"281 283 LINE",
"284 283 LINE",
"284 293 LINE",
"281 293 LINE",
"281 288 LINE",
"281 286 LINE SMOOTH",
"281 285 OFFCURVE",
"279 285 QCURVE SMOOTH",
"278 285 OFFCURVE",
"278 286 QCURVE SMOOTH",
"278 287 LINE",
"278 293 LINE",
"278 293 LINE"
);
},
{
closed = 1;
nodes = (
"294 293 OFFCURVE",
"291 293 QCURVE",
"291 293 OFFCURVE",
"289 292 QCURVE",
"289 291 LINE",
"289 293 LINE",
"286 293 LINE",
"286 279 LINE",
"289 279 LINE",
"289 284 LINE",
"289 283 LINE",
"291 283 LINE SMOOTH",
"294 283 OFFCURVE",
"294 284 QCURVE",
"296 286 OFFCURVE",
"296 288 QCURVE SMOOTH",
"296 290 OFFCURVE",
"294 292 QCURVE",
"294 292 LINE"
);
},
{
closed = 1;
nodes = (
"292 291 OFFCURVE",
"291 291 QCURVE SMOOTH",
"289 291 OFFCURVE",
"289 289 QCURVE SMOOTH",
"289 288 LINE",
"289 285 LINE",
"291 285 LINE",
"291 285 OFFCURVE",
"292 286 QCURVE",
"293 286 OFFCURVE",
"293 288 QCURVE SMOOTH",
"293 289 OFFCURVE",
"292 290 QCURVE",
"292 290 LINE"
);
},
{
closed = 1;
nodes = (
"300 296 LINE",
"297 296 LINE",
"297 283 LINE",
"300 283 LINE",
"300 283 LINE"
);
},
{
closed = 1;
nodes = (
"302 283 LINE",
"305 283 LINE",
"305 293 LINE",
"302 293 LINE",
"302 293 LINE"
);
},
{
closed = 1;
nodes = (
"316 289 LINE",
"316 290 OFFCURVE",
"315 290 OFFCURVE",
"315 291 QCURVE SMOOTH",
"315 292 LINE",
"314 293 OFFCURVE",
"312 293 QCURVE SMOOTH",
"309 293 OFFCURVE",
"308 292 QCURVE SMOOTH",
"307 291 OFFCURVE",
"307 288 QCURVE SMOOTH",
"307 285 OFFCURVE",
"308 284 QCURVE SMOOTH",
"309 283 OFFCURVE",
"312 283 QCURVE SMOOTH",
"314 283 OFFCURVE",
"315 284 QCURVE SMOOTH",
"316 285 OFFCURVE",
"316 287 QCURVE",
"313 287 LINE",
"313 285 LINE",
"312 285 LINE SMOOTH",
"310 285 OFFCURVE",
"310 286 QCURVE SMOOTH",
"310 288 LINE",
"310 290 LINE",
"310 290 OFFCURVE",
"312 291 QCURVE",
"312 291 OFFCURVE",
"313 290 QCURVE",
"313 289 LINE",
"313 289 LINE"
);
},
{
closed = 1;
nodes = (
"323 289 LINE",
"323 290 LINE",
"323 291 LINE",
"321 291 LINE",
"320 291 LINE",
"320 290 LINE",
"317 290 LINE",
"317 291 OFFCURVE",
"318 291 OFFCURVE",
"318 292 QCURVE",
"319 293 OFFCURVE",
"322 293 QCURVE SMOOTH",
"324 293 OFFCURVE",
"324 292 QCURVE",
"326 292 OFFCURVE",
"326 290 QCURVE SMOOTH",
"326 286 LINE",
"326 284 LINE",
"326 283 LINE",
"323 283 LINE",
"323 284 LINE",
"323 284 OFFCURVE",
"322 283 QCURVE",
"320 283 LINE SMOOTH",
"319 283 OFFCURVE",
"318 284 QCURVE",
"317 284 OFFCURVE",
"317 286 QCURVE SMOOTH",
"317 287 OFFCURVE",
"318 288 QCURVE SMOOTH",
"319 289 OFFCURVE",
"321 289 QCURVE SMOOTH",
"322 289 LINE",
"322 289 LINE"
);
},
{
closed = 1;
nodes = (
"322 287 LINE",
"321 287 LINE",
"320 287 LINE",
"320 286 LINE",
"320 285 LINE",
"321 285 LINE",
"322 285 LINE SMOOTH",
"323 285 OFFCURVE",
"323 287 QCURVE SMOOTH",
"323 288 LINE",
"323 288 LINE"
);
},
{
closed = 1;
nodes = (
"328 291 LINE",
"328 285 LINE SMOOTH",
"328 284 OFFCURVE",
"329 284 QCURVE",
"329 283 OFFCURVE",
"331 283 QCURVE SMOOTH",
"332 283 LINE",
"332 285 LINE",
"331 285 LINE",
"331 286 LINE",
"331 291 LINE",
"332 291 LINE",
"332 293 LINE",
"331 293 LINE",
"331 295 LINE",
"328 295 LINE",
"328 293 LINE",
"327 293 LINE",
"327 291 LINE",
"327 291 LINE"
);
},
{
closed = 1;
nodes = (
"334 283 LINE",
"337 283 LINE",
"337 293 LINE",
"334 293 LINE",
"334 293 LINE"
);
},
{
closed = 1;
nodes = (
"348 285 OFFCURVE",
"348 288 QCURVE SMOOTH",
"348 291 OFFCURVE",
"347 292 QCURVE SMOOTH",
"346 293 OFFCURVE",
"343 293 QCURVE SMOOTH",
"341 293 OFFCURVE",
"340 292 QCURVE SMOOTH",
"338 290 OFFCURVE",
"338 288 QCURVE SMOOTH",
"338 286 OFFCURVE",
"340 284 QCURVE SMOOTH",
"341 283 OFFCURVE",
"343 283 QCURVE SMOOTH",
"346 283 OFFCURVE",
"347 284 QCURVE",
"347 284 LINE"
);
},
{
closed = 1;
nodes = (
"346 286 OFFCURVE",
"346 288 QCURVE SMOOTH",
"346 290 OFFCURVE",
"345 290 QCURVE",
"345 291 OFFCURVE",
"343 291 QCURVE",
"343 291 OFFCURVE",
"342 290 QCURVE",
"341 290 OFFCURVE",
"341 288 QCURVE SMOOTH",
"341 286 OFFCURVE",
"342 286 QCURVE",
"342 285 OFFCURVE",
"343 285 QCURVE SMOOTH",
"345 285 OFFCURVE",
"345 286 QCURVE",
"345 286 LINE"
);
},
{
closed = 1;
nodes = (
"357 293 OFFCURVE",
"356 293 QCURVE SMOOTH",
"354 293 OFFCURVE",
"354 292 QCURVE",
"353 292 OFFCURVE",
"353 291 QCURVE SMOOTH",
"353 293 LINE",
"350 293 LINE",
"350 283 LINE",
"353 283 LINE",
"353 288 LINE",
"353 290 LINE SMOOTH",
"353 291 OFFCURVE",
"355 291 QCURVE SMOOTH",
"356 291 OFFCURVE",
"356 290 QCURVE SMOOTH",
"356 289 LINE",
"356 283 LINE",
"359 283 LINE",
"359 290 LINE SMOOTH",
"359 292 OFFCURVE",
"358 292 QCURVE",
"358 292 LINE"
);
},
{
closed = 1;
nodes = (
"231 253 OFFCURVE",
"231 256 QCURVE SMOOTH",
"231 259 OFFCURVE",
"230 260 QCURVE SMOOTH",
"229 261 OFFCURVE",
"227 261 QCURVE SMOOTH",
"224 261 OFFCURVE",
"223 260 QCURVE SMOOTH",
"222 259 OFFCURVE",
"222 256 QCURVE SMOOTH",
"222 253 OFFCURVE",
"223 252 QCURVE SMOOTH",
"224 251 OFFCURVE",
"227 251 QCURVE SMOOTH",
"229 251 OFFCURVE",
"230 252 QCURVE",
"230 252 LINE"
);
},
{
closed = 1;
nodes = (
"229 254 OFFCURVE",
"229 256 QCURVE SMOOTH",
"229 258 OFFCURVE",
"228 258 QCURVE",
"228 259 OFFCURVE",
"227 259 QCURVE SMOOTH",
"225 259 OFFCURVE",
"225 258 QCURVE",
"224 258 OFFCURVE",
"224 256 QCURVE SMOOTH",
"224 254 OFFCURVE",
"225 254 QCURVE",
"225 253 OFFCURVE",
"227 253 QCURVE",
"227 253 OFFCURVE",
"228 254 QCURVE",
"228 254 LINE"
);
},
{
closed = 1;
nodes = (
"237 261 OFFCURVE",
"237 260 QCURVE",
"236 260 OFFCURVE",
"236 259 QCURVE SMOOTH",
"236 261 LINE",
"233 261 LINE",
"233 251 LINE",
"236 251 LINE",
"236 256 LINE",
"236 257 LINE",
"237 258 OFFCURVE",
"238 258 QCURVE SMOOTH",
"239 258 LINE",
"239 261 LINE",
"239 261 LINE"
);
},
{
closed = 1;
nodes = (
"249 261 LINE SMOOTH",
"247 261 OFFCURVE",
"246 260 QCURVE SMOOTH",
"245 259 OFFCURVE",
"245 256 QCURVE SMOOTH",
"245 253 OFFCURVE",
"246 252 QCURVE SMOOTH",
"247 251 OFFCURVE",
"249 251 QCURVE SMOOTH",
"251 251 LINE",
"252 252 LINE",
"252 251 LINE",
"254 251 LINE",
"254 264 LINE",
"252 264 LINE",
"252 260 LINE",
"252 260 OFFCURVE",
"251 261 QCURVE",
"251 261 LINE"
);
},
{
closed = 1;
nodes = (
"252 254 OFFCURVE",
"252 256 QCURVE SMOOTH",
"252 258 OFFCURVE",
"251 258 QCURVE",
"251 259 OFFCURVE",
"250 259 QCURVE SMOOTH",
"248 259 OFFCURVE",
"248 258 QCURVE SMOOTH",
"248 256 LINE",
"248 254 LINE SMOOTH",
"248 253 OFFCURVE",
"250 253 QCURVE",
"250 253 OFFCURVE",
"251 254 QCURVE",
"251 254 LINE"
);
},
{
closed = 1;
nodes = (
"259 264 LINE",
"257 264 LINE",
"257 262 LINE",
"259 262 LINE",
"259 262 LINE"
);
},
{
closed = 1;
nodes = (
"257 251 LINE",
"259 251 LINE",
"259 261 LINE",
"257 261 LINE",
"257 261 LINE"
);
},
{
closed = 1;
nodes = (
"261 254 LINE",
"261 253 OFFCURVE",
"262 252 QCURVE SMOOTH",
"263 251 OFFCURVE",
"266 251 QCURVE SMOOTH",
"268 251 OFFCURVE",
"269 252 QCURVE",
"270 252 OFFCURVE",
"270 254 QCURVE SMOOTH",
"270 255 OFFCURVE",
"269 256 QCURVE",
"269 256 OFFCURVE",
"267 257 QCURVE",
"265 257 OFFCURVE",
"264 258 QCURVE",
"264 259 LINE",
"266 259 LINE",
"267 259 LINE",
"267 258 LINE",
"270 258 LINE",
"270 259 OFFCURVE",
"269 260 QCURVE SMOOTH",
"268 261 OFFCURVE",
"266 261 QCURVE SMOOTH",
"263 261 OFFCURVE",
"263 260 QCURVE",
"261 258 OFFCURVE",
"261 258 QCURVE",
"261 257 OFFCURVE",
"262 256 QCURVE",
"263 256 OFFCURVE",
"263 255 OFFCURVE",
"264 255 QCURVE SMOOTH",
"265 255 OFFCURVE",
"265 254 OFFCURVE",
"266 254 QCURVE SMOOTH",
"267 254 LINE",
"268 254 LINE",
"268 253 OFFCURVE",
"267 253 QCURVE SMOOTH",
"266 253 LINE",
"264 253 LINE",
"264 254 LINE",
"264 254 LINE"
);
},
{
closed = 1;
nodes = (
"272 259 LINE",
"272 253 LINE SMOOTH",
"272 252 OFFCURVE",
"273 252 QCURVE",
"273 251 OFFCURVE",
"275 251 QCURVE SMOOTH",
"276 251 LINE",
"276 253 LINE",
"275 253 LINE",
"275 254 LINE",
"275 259 LINE",
"276 259 LINE",
"276 261 LINE",
"275 261 LINE",
"275 263 LINE",
"272 263 LINE",
"272 261 LINE",
"271 261 LINE",
"271 259 LINE",
"271 259 LINE"
);
},
{
closed = 1;
nodes = (
"283 261 OFFCURVE",
"281 260 QCURVE SMOOTH",
"280 259 LINE",
"280 261 LINE",
"278 261 LINE",
"278 251 LINE",
"281 251 LINE",
"281 256 LINE",
"281 257 LINE SMOOTH",
"281 258 OFFCURVE",
"283 258 QCURVE SMOOTH",
"284 258 LINE",
"284 261 LINE",
"283 261 LINE",
"283 261 LINE"
);
},
{
closed = 1;
nodes = (
"288 264 LINE",
"285 264 LINE",
"285 262 LINE",
"288 262 LINE",
"288 262 LINE"
);
},
{
closed = 1;
nodes = (
"285 251 LINE",
"288 251 LINE",
"288 261 LINE",
"285 261 LINE",
"285 261 LINE"
);
},
{
closed = 1;
nodes = (
"298 261 OFFCURVE",
"296 261 QCURVE SMOOTH",
"294 261 LINE",
"293 260 LINE",
"293 264 LINE",
"290 264 LINE",
"290 251 LINE",
"293 251 LINE",
"293 252 LINE",
"293 252 OFFCURVE",
"294 251 QCURVE",
"296 251 LINE SMOOTH",
"298 251 OFFCURVE",
"299 252 QCURVE",
"299 253 OFFCURVE",
"300 255 OFFCURVE",
"300 256 QCURVE SMOOTH",
"300 257 OFFCURVE",
"299 259 OFFCURVE",
"299 260 QCURVE",
"299 260 LINE"
);
},
{
closed = 1;
nodes = (
"297 254 OFFCURVE",
"297 256 QCURVE SMOOTH",
"297 257 LINE",
"295 259 OFFCURVE",
"295 259 QCURVE",
"294 259 OFFCURVE",
"293 258 QCURVE",
"293 256 LINE",
"293 254 LINE",
"294 253 OFFCURVE",
"295 253 QCURVE SMOOTH",
"296 253 OFFCURVE",
"296 254 QCURVE",
"296 254 LINE"
);
},
{
closed = 1;
nodes = (
"301 261 LINE",
"301 255 LINE SMOOTH",
"301 254 OFFCURVE",
"302 253 OFFCURVE",
"302 252 QCURVE SMOOTH",
"302 251 OFFCURVE",
"305 251 QCURVE SMOOTH",
"306 251 LINE",
"306 251 OFFCURVE",
"307 252 QCURVE",
"308 252 LINE",
"308 251 LINE",
"310 251 LINE",
"310 261 LINE",
"308 261 LINE",
"308 255 LINE",
"307 254 LINE",
"307 253 OFFCURVE",
"306 253 QCURVE SMOOTH",
"304 253 OFFCURVE",
"304 254 QCURVE SMOOTH",
"304 255 LINE",
"304 261 LINE",
"304 261 LINE"
);
},
{
closed = 1;
nodes = (
"313 259 LINE",
"313 253 LINE",
"313 252 LINE",
"314 251 OFFCURVE",
"316 251 QCURVE SMOOTH",
"317 251 LINE",
"317 253 LINE",
"316 253 LINE",
"316 254 LINE",
"316 259 LINE",
"317 259 LINE",
"317 261 LINE",
"316 261 LINE",
"316 263 LINE",
"313 263 LINE",
"313 261 LINE",
"312 261 LINE",
"312 259 LINE",
"312 259 LINE"
);
},
{
closed = 1;
nodes = (
"321 264 LINE",
"319 264 LINE",
"319 262 LINE",
"321 262 LINE",
"321 262 LINE"
);
},
{
closed = 1;
nodes = (
"319 251 LINE",
"321 251 LINE",
"321 261 LINE",
"319 261 LINE",
"319 261 LINE"
);
},
{
closed = 1;
nodes = (
"333 253 OFFCURVE",
"333 256 QCURVE SMOOTH",
"333 259 OFFCURVE",
"332 260 QCURVE SMOOTH",
"331 261 OFFCURVE",
"328 261 QCURVE SMOOTH",
"325 261 OFFCURVE",
"324 260 QCURVE",
"324 259 OFFCURVE",
"323 257 OFFCURVE",
"323 256 QCURVE SMOOTH",
"323 254 OFFCURVE",
"324 253 OFFCURVE",
"324 252 QCURVE",
"325 251 OFFCURVE",
"328 251 QCURVE SMOOTH",
"331 251 OFFCURVE",
"332 252 QCURVE",
"332 252 LINE"
);
},
{
closed = 1;
nodes = (
"330 256 LINE",
"330 258 LINE",
"329 259 OFFCURVE",
"328 259 QCURVE SMOOTH",
"327 259 OFFCURVE",
"326 258 QCURVE",
"326 256 LINE",
"326 254 LINE",
"327 253 OFFCURVE",
"328 253 QCURVE SMOOTH",
"329 253 OFFCURVE",
"330 254 QCURVE",
"330 254 LINE"
);
},
{
closed = 1;
nodes = (
"342 261 OFFCURVE",
"340 261 QCURVE",
"340 261 OFFCURVE",
"338 260 QCURVE SMOOTH",
"337 259 LINE",
"337 261 LINE",
"335 261 LINE",
"335 251 LINE",
"338 251 LINE",
"338 256 LINE",
"338 258 LINE SMOOTH",
"338 259 OFFCURVE",
"340 259 QCURVE",
"340 259 OFFCURVE",
"341 258 QCURVE",
"341 257 LINE",
"341 251 LINE",
"344 251 LINE",
"344 258 LINE SMOOTH",
"344 259 OFFCURVE",
"343 260 QCURVE",
"343 260 LINE"
);
},
{
closed = 1;
nodes = (
"206 158 LINE",
"206 157 OFFCURVE",
"207 156 QCURVE SMOOTH",
"208 155 OFFCURVE",
"211 155 QCURVE SMOOTH",
"213 155 OFFCURVE",
"214 156 QCURVE",
"215 156 OFFCURVE",
"215 158 QCURVE SMOOTH",
"215 159 OFFCURVE",
"214 160 QCURVE",
"214 160 OFFCURVE",
"212 161 QCURVE",
"210 161 OFFCURVE",
"209 162 QCURVE",
"209 163 LINE",
"211 163 LINE",
"212 163 LINE",
"212 162 LINE",
"215 162 LINE",
"215 163 OFFCURVE",
"214 164 QCURVE SMOOTH",
"213 165 OFFCURVE",
"211 165 QCURVE SMOOTH",
"208 165 OFFCURVE",
"208 164 QCURVE",
"207 163 OFFCURVE",
"207 162 QCURVE SMOOTH",
"207 160 LINE",
"208 160 OFFCURVE",
"208 159 OFFCURVE",
"210 159 QCURVE SMOOTH",
"211 159 OFFCURVE",
"212 158 QCURVE",
"212 158 OFFCURVE",
"213 157 QCURVE",
"212 157 LINE",
"211 157 LINE",
"209 157 LINE",
"209 158 LINE",
"209 158 LINE"
);
},
{
closed = 1;
nodes = (
"217 163 LINE",
"217 157 LINE SMOOTH",
"217 156 OFFCURVE",
"218 156 OFFCURVE",
"218 155 QCURVE",
"220 155 LINE",
"222 155 LINE",
"222 157 LINE",
"221 157 LINE",
"220 157 LINE",
"220 158 LINE",
"220 163 LINE",
"222 163 LINE",
"222 165 LINE",
"220 165 LINE",
"220 167 LINE",
"217 167 LINE",
"217 165 LINE",
"216 165 LINE",
"216 163 LINE",
"216 163 LINE"
);
},
{
closed = 1;
nodes = (
"228 165 LINE",
"228 165 OFFCURVE",
"227 164 QCURVE",
"226 164 OFFCURVE",
"226 163 QCURVE SMOOTH",
"226 165 LINE",
"223 165 LINE",
"223 155 LINE",
"226 155 LINE",
"226 160 LINE",
"226 161 LINE SMOOTH",
"226 162 OFFCURVE",
"228 162 QCURVE SMOOTH",
"229 162 LINE",
"229 165 LINE",
"229 165 LINE"
);
},
{
closed = 1;
nodes = (
"233 168 LINE",
"230 168 LINE",
"230 166 LINE",
"233 166 LINE",
"233 166 LINE"
);
},
{
closed = 1;
nodes = (
"230 155 LINE",
"233 155 LINE",
"233 165 LINE",
"230 165 LINE",
"230 165 LINE"
);
},
{
closed = 1;
nodes = (
"244 161 LINE",
"244 164 OFFCURVE",
"242 164 QCURVE",
"242 165 OFFCURVE",
"239 165 QCURVE SMOOTH",
"238 165 OFFCURVE",
"237 164 OFFCURVE",
"236 164 QCURVE",
"235 163 OFFCURVE",
"235 160 QCURVE SMOOTH",
"235 157 OFFCURVE",
"236 156 QCURVE SMOOTH",
"237 155 OFFCURVE",
"239 155 QCURVE SMOOTH",
"242 155 OFFCURVE",
"243 156 QCURVE",
"243 157 OFFCURVE",
"244 158 QCURVE",
"241 158 LINE",
"241 157 LINE",
"239 157 LINE",
"239 157 OFFCURVE",
"238 158 QCURVE",
"238 158 OFFCURVE",
"237 160 QCURVE",
"237 160 OFFCURVE",
"238 162 QCURVE SMOOTH",
"239 163 LINE",
"241 163 OFFCURVE",
"241 162 QCURVE SMOOTH",
"241 161 LINE",
"241 161 LINE"
);
},
{
closed = 1;
nodes = (
"246 163 LINE",
"246 157 LINE",
"246 155 LINE",
"249 155 LINE",
"250 155 LINE",
"250 157 LINE",
"249 157 LINE SMOOTH",
"248 157 OFFCURVE",
"248 158 QCURVE SMOOTH",
"248 163 LINE",
"250 163 LINE",
"250 165 LINE",
"248 165 LINE",
"248 167 LINE",
"246 167 LINE",
"246 165 LINE",
"245 165 LINE",
"245 163 LINE",
"245 163 LINE"
);
},
{
closed = 1;
nodes = (
"254 168 LINE",
"252 168 LINE",
"252 155 LINE",
"254 155 LINE",
"254 155 LINE"
);
},
{
closed = 1;
nodes = (
"257 151 LINE",
"258 151 LINE SMOOTH",
"260 151 OFFCURVE",
"261 152 QCURVE",
"261 153 LINE",
"261 153 OFFCURVE",
"262 155 QCURVE SMOOTH",
"265 165 LINE",
"263 165 LINE",
"261 158 LINE",
"259 165 LINE",
"256 165 LINE",
"259 155 LINE",
"259 154 LINE",
"259 153 LINE",
"258 153 LINE",
"257 153 LINE",
"257 153 LINE"
);
},
{
closed = 1;
nodes = (
"279 164 OFFCURVE",
"278 165 OFFCURVE",
"277 165 QCURVE SMOOTH",
"276 165 OFFCURVE",
"275 164 QCURVE SMOOTH",
"274 163 LINE",
"274 165 LINE",
"272 165 LINE",
"272 151 LINE",
"274 151 LINE",
"274 156 LINE",
"275 156 OFFCURVE",
"275 155 QCURVE",
"277 155 LINE SMOOTH",
"279 155 OFFCURVE",
"280 156 QCURVE SMOOTH",
"281 157 OFFCURVE",
"281 160 QCURVE SMOOTH",
"281 163 OFFCURVE",
"280 164 QCURVE",
"280 164 LINE"
);
},
{
closed = 1;
nodes = (
"277 163 LINE",
"275 163 OFFCURVE",
"275 161 QCURVE",
"274 161 OFFCURVE",
"274 160 QCURVE SMOOTH",
"274 158 OFFCURVE",
"275 158 OFFCURVE",
"275 157 QCURVE",
"277 157 LINE",
"277 157 OFFCURVE",
"278 158 QCURVE",
"279 158 OFFCURVE",
"279 160 QCURVE SMOOTH",
"279 161 OFFCURVE",
"278 162 QCURVE",
"278 162 LINE"
);
},
{
closed = 1;
nodes = (
"288 165 LINE",
"288 165 OFFCURVE",
"287 164 QCURVE",
"286 164 OFFCURVE",
"286 163 QCURVE SMOOTH",
"286 165 LINE",
"283 165 LINE",
"283 155 LINE",
"286 155 LINE",
"286 160 LINE",
"286 161 LINE SMOOTH",
"286 162 OFFCURVE",
"288 162 QCURVE SMOOTH",
"289 162 LINE",
"289 165 LINE",
"289 165 LINE"
);
},
{
closed = 1;
nodes = (
"300 158 OFFCURVE",
"300 160 QCURVE SMOOTH",
"300 161 OFFCURVE",
"298 163 QCURVE",
"298 165 OFFCURVE",
"295 165 QCURVE SMOOTH",
"293 165 OFFCURVE",
"291 163 QCURVE SMOOTH",
"290 162 OFFCURVE",
"290 160 QCURVE SMOOTH",
"290 157 OFFCURVE",
"291 156 QCURVE SMOOTH",
"292 155 OFFCURVE",
"295 155 QCURVE SMOOTH",
"298 155 OFFCURVE",
"298 156 QCURVE",
"298 156 LINE"
);
},
{
closed = 1;
nodes = (
"297 158 OFFCURVE",
"297 160 QCURVE SMOOTH",
"297 162 OFFCURVE",
"296 162 QCURVE",
"296 163 OFFCURVE",
"295 163 QCURVE SMOOTH",
"293 163 OFFCURVE",
"293 162 QCURVE",
"293 162 OFFCURVE",
"292 160 QCURVE",
"292 159 OFFCURVE",
"293 158 QCURVE",
"293 157 OFFCURVE",
"295 157 QCURVE",
"295 157 OFFCURVE",
"296 158 QCURVE",
"296 158 LINE"
);
},
{
closed = 1;
nodes = (
"307 165 LINE",
"305 165 LINE",
"305 164 OFFCURVE",
"304 164 OFFCURVE",
"304 163 QCURVE SMOOTH",
"304 168 LINE",
"301 168 LINE",
"301 155 LINE",
"304 155 LINE",
"304 160 LINE SMOOTH",
"304 162 OFFCURVE",
"305 162 QCURVE",
"305 163 OFFCURVE",
"306 163 QCURVE SMOOTH",
"307 163 OFFCURVE",
"307 162 QCURVE",
"308 162 OFFCURVE",
"308 161 QCURVE SMOOTH",
"308 155 LINE",
"310 155 LINE",
"310 161 LINE",
"310 163 LINE",
"310 164 LINE",
"309 164 OFFCURVE",
"308 165 QCURVE",
"308 165 LINE"
);
},
{
closed = 1;
nodes = (
"315 168 LINE",
"313 168 LINE",
"313 166 LINE",
"315 166 LINE",
"315 166 LINE"
);
},
{
closed = 1;
nodes = (
"313 155 LINE",
"315 155 LINE",
"315 165 LINE",
"313 165 LINE",
"313 165 LINE"
);
},
{
closed = 1;
nodes = (
"325 164 OFFCURVE",
"324 165 OFFCURVE",
"323 165 QCURVE SMOOTH",
"322 165 OFFCURVE",
"321 164 QCURVE",
"321 164 OFFCURVE",
"320 163 QCURVE",
"320 168 LINE",
"318 168 LINE",
"318 155 LINE",
"320 155 LINE",
"320 156 LINE",
"321 155 LINE",
"323 155 LINE SMOOTH",
"325 155 OFFCURVE",
"326 156 QCURVE SMOOTH",
"327 157 OFFCURVE",
"327 160 QCURVE SMOOTH",
"327 163 OFFCURVE",
"326 164 QCURVE",
"326 164 LINE"
);
},
{
closed = 1;
nodes = (
"324 160 LINE",
"324 161 LINE SMOOTH",
"324 163 OFFCURVE",
"322 163 QCURVE",
"322 163 OFFCURVE",
"320 161 QCURVE",
"320 160 LINE SMOOTH",
"320 158 OFFCURVE",
"321 158 QCURVE",
"321 157 OFFCURVE",
"322 157 QCURVE SMOOTH",
"324 157 OFFCURVE",
"324 158 QCURVE",
"324 158 LINE"
);
},
{
closed = 1;
nodes = (
"332 168 LINE",
"329 168 LINE",
"329 166 LINE",
"332 166 LINE",
"332 166 LINE"
);
},
{
closed = 1;
nodes = (
"329 155 LINE",
"332 155 LINE",
"332 165 LINE",
"329 165 LINE",
"329 165 LINE"
);
},
{
closed = 1;
nodes = (
"334 163 LINE",
"334 157 LINE SMOOTH",
"334 156 OFFCURVE",
"335 155 QCURVE",
"337 155 LINE",
"338 155 LINE",
"338 157 LINE",
"337 157 LINE",
"337 158 LINE",
"337 163 LINE",
"338 163 LINE",
"338 165 LINE",
"337 165 LINE",
"337 167 LINE",
"334 167 LINE",
"334 165 LINE",
"333 165 LINE",
"333 163 LINE",
"333 163 LINE"
);
},
{
closed = 1;
nodes = (
"344 165 LINE SMOOTH",
"342 165 OFFCURVE",
"341 164 QCURVE SMOOTH",
"339 162 OFFCURVE",
"339 160 QCURVE SMOOTH",
"339 158 OFFCURVE",
"341 156 QCURVE SMOOTH",
"342 155 OFFCURVE",
"344 155 QCURVE SMOOTH",
"347 155 OFFCURVE",
"348 156 QCURVE",
"348 157 OFFCURVE",
"349 157 OFFCURVE",
"349 158 QCURVE",
"346 158 LINE",
"346 157 LINE",
"344 157 LINE",
"343 157 LINE SMOOTH",
"342 157 OFFCURVE",
"342 159 QCURVE",
"349 159 LINE",
"349 161 LINE SMOOTH",
"349 162 OFFCURVE",
"348 163 QCURVE",
"348 163 OFFCURVE",
"346 165 QCURVE",
"346 165 LINE"
);
},
{
closed = 1;
nodes = (
"342 162 OFFCURVE",
"342 161 QCURVE",
"346 161 LINE",
"346 162 LINE",
"345 163 OFFCURVE",
"344 163 QCURVE SMOOTH",
"343 163 OFFCURVE",
"343 162 QCURVE",
"343 162 LINE"
);
},
{
closed = 1;
nodes = (
"354 165 LINE SMOOTH",
"353 165 OFFCURVE",
"352 164 OFFCURVE",
"351 164 QCURVE",
"350 163 OFFCURVE",
"350 160 QCURVE SMOOTH",
"350 157 OFFCURVE",
"351 156 QCURVE SMOOTH",
"352 155 OFFCURVE",
"354 155 QCURVE SMOOTH",
"355 155 LINE SMOOTH",
"356 155 OFFCURVE",
"356 156 OFFCURVE",
"357 156 QCURVE",
"357 155 LINE",
"359 155 LINE",
"359 168 LINE",
"357 168 LINE",
"357 163 LINE",
"355 165 LINE",
"355 165 LINE"
);
},
{
closed = 1;
nodes = (
"356 158 OFFCURVE",
"357 160 QCURVE",
"357 161 OFFCURVE",
"356 162 QCURVE SMOOTH",
"355 163 OFFCURVE",
"354 163 QCURVE",
"353 162 LINE SMOOTH",
"352 161 OFFCURVE",
"352 160 QCURVE SMOOTH",
"352 158 OFFCURVE",
"353 158 QCURVE",
"353 157 OFFCURVE",
"354 157 QCURVE SMOOTH",
"356 157 OFFCURVE",
"356 158 QCURVE",
"356 158 LINE"
);
},
{
closed = 1;
nodes = (
"155 133 LINE",
"155 127 LINE SMOOTH",
"155 126 OFFCURVE",
"156 125 OFFCURVE",
"156 124 QCURVE SMOOTH",
"156 123 OFFCURVE",
"159 123 QCURVE SMOOTH",
"160 123 LINE",
"160 123 OFFCURVE",
"161 124 QCURVE",
"162 124 LINE",
"162 123 LINE",
"164 123 LINE",
"164 133 LINE",
"162 133 LINE",
"162 127 LINE",
"162 127 OFFCURVE",
"161 126 QCURVE",
"161 125 OFFCURVE",
"160 125 QCURVE SMOOTH",
"158 125 OFFCURVE",
"158 126 QCURVE SMOOTH",
"158 127 LINE",
"158 133 LINE",
"158 133 LINE"
);
},
{
closed = 1;
nodes = (
"174 133 OFFCURVE",
"172 133 QCURVE SMOOTH",
"171 133 OFFCURVE",
"170 132 QCURVE SMOOTH",
"169 131 LINE",
"169 133 LINE",
"167 133 LINE",
"167 123 LINE",
"169 123 LINE",
"169 128 LINE SMOOTH",
"169 129 OFFCURVE",
"170 130 QCURVE",
"170 130 OFFCURVE",
"171 131 QCURVE",
"172 131 OFFCURVE",
"173 130 QCURVE",
"173 129 LINE",
"173 123 LINE",
"176 123 LINE",
"176 129 LINE SMOOTH",
"176 130 OFFCURVE",
"175 130 OFFCURVE",
"175 131 QCURVE SMOOTH",
"175 132 LINE",
"175 132 LINE"
);
},
{
closed = 1;
nodes = (
"181 133 LINE SMOOTH",
"180 133 OFFCURVE",
"178 131 QCURVE",
"177 131 OFFCURVE",
"177 130 QCURVE SMOOTH",
"177 128 LINE SMOOTH",
"177 126 OFFCURVE",
"178 125 OFFCURVE",
"178 124 QCURVE",
"179 123 OFFCURVE",
"181 123 QCURVE SMOOTH",
"183 123 LINE",
"184 124 LINE",
"184 123 LINE",
"187 123 LINE",
"187 136 LINE",
"184 136 LINE",
"184 131 LINE SMOOTH",
"184 132 OFFCURVE",
"183 133 QCURVE",
"183 133 LINE"
);
},
{
closed = 1;
nodes = (
"184 128 LINE SMOOTH",
"184 130 OFFCURVE",
"183 130 QCURVE",
"183 131 OFFCURVE",
"182 131 QCURVE SMOOTH",
"181 131 OFFCURVE",
"181 130 OFFCURVE",
"180 130 QCURVE",
"180 128 LINE",
"180 126 LINE",
"181 125 OFFCURVE",
"182 125 QCURVE SMOOTH",
"183 125 OFFCURVE",
"184 126 QCURVE",
"184 126 LINE"
);
},
{
closed = 1;
nodes = (
"195 133 OFFCURVE",
"193 133 QCURVE SMOOTH",
"192 133 OFFCURVE",
"191 132 OFFCURVE",
"190 132 QCURVE",
"188 130 OFFCURVE",
"188 128 QCURVE SMOOTH",
"188 126 OFFCURVE",
"190 124 QCURVE SMOOTH",
"191 123 OFFCURVE",
"193 123 QCURVE SMOOTH",
"196 123 OFFCURVE",
"197 124 QCURVE",
"197 125 OFFCURVE",
"198 125 OFFCURVE",
"198 126 QCURVE",
"195 126 LINE",
"195 125 LINE",
"193 125 LINE",
"192 125 LINE SMOOTH",
"191 125 OFFCURVE",
"191 127 QCURVE",
"198 127 LINE",
"198 129 LINE SMOOTH",
"198 130 OFFCURVE",
"197 130 OFFCURVE",
"197 131 QCURVE SMOOTH",
"197 132 OFFCURVE",
"195 132 QCURVE",
"195 132 LINE"
);
},
{
closed = 1;
nodes = (
"191 130 OFFCURVE",
"191 129 QCURVE",
"195 129 LINE",
"195 130 LINE",
"194 131 OFFCURVE",
"193 131 QCURVE SMOOTH",
"192 131 OFFCURVE",
"192 130 QCURVE",
"192 130 LINE"
);
},
{
closed = 1;
nodes = (
"203 133 OFFCURVE",
"203 132 QCURVE",
"202 132 OFFCURVE",
"202 131 QCURVE SMOOTH",
"202 133 LINE",
"199 133 LINE",
"199 123 LINE",
"202 123 LINE",
"202 128 LINE",
"202 129 LINE SMOOTH",
"202 130 OFFCURVE",
"204 130 QCURVE SMOOTH",
"205 130 LINE",
"205 133 LINE",
"205 133 LINE"
);
},
{
closed = 1;
nodes = (
"219 132 OFFCURVE",
"218 133 OFFCURVE",
"217 133 QCURVE SMOOTH",
"215 133 OFFCURVE",
"215 132 QCURVE",
"214 132 OFFCURVE",
"214 131 QCURVE SMOOTH",
"214 133 LINE",
"211 133 LINE",
"211 119 LINE",
"214 119 LINE",
"214 124 LINE",
"214 124 OFFCURVE",
"215 123 QCURVE",
"217 123 LINE SMOOTH",
"219 123 OFFCURVE",
"220 124 QCURVE",
"220 125 OFFCURVE",
"221 126 OFFCURVE",
"221 128 QCURVE SMOOTH",
"221 130 OFFCURVE",
"220 131 OFFCURVE",
"220 132 QCURVE",
"220 132 LINE"
);
},
{
closed = 1;
nodes = (
"217 130 OFFCURVE",
"217 131 OFFCURVE",
"216 131 QCURVE SMOOTH",
"214 131 OFFCURVE",
"214 129 QCURVE SMOOTH",
"214 128 LINE SMOOTH",
"214 126 OFFCURVE",
"215 125 QCURVE",
"216 125 LINE SMOOTH",
"217 125 OFFCURVE",
"218 126 QCURVE",
"218 128 LINE",
"218 130 LINE",
"218 130 LINE"
);
},
{
closed = 1;
nodes = (
"228 133 OFFCURVE",
"227 133 QCURVE SMOOTH",
"225 133 OFFCURVE",
"224 132 OFFCURVE",
"223 132 QCURVE",
"222 131 OFFCURVE",
"222 128 QCURVE SMOOTH",
"222 125 OFFCURVE",
"223 124 QCURVE SMOOTH",
"224 123 OFFCURVE",
"227 123 QCURVE SMOOTH",
"230 123 OFFCURVE",
"230 124 QCURVE",
"231 125 OFFCURVE",
"231 126 QCURVE",
"229 126 LINE",
"229 125 OFFCURVE",
"228 125 QCURVE SMOOTH",
"227 125 LINE",
"225 125 LINE",
"225 125 OFFCURVE",
"224 127 QCURVE",
"232 127 LINE",
"232 129 OFFCURVE",
"231 129 QCURVE",
"231 131 LINE",
"230 132 OFFCURVE",
"229 132 QCURVE",
"229 132 LINE"
);
},
{
closed = 1;
nodes = (
"225 130 OFFCURVE",
"224 129 QCURVE",
"229 129 LINE",
"229 129 OFFCURVE",
"228 130 QCURVE",
"228 131 OFFCURVE",
"227 131 QCURVE SMOOTH",
"226 131 OFFCURVE",
"225 130 QCURVE",
"225 130 LINE"
);
},
{
closed = 1;
nodes = (
"240 133 OFFCURVE",
"238 133 QCURVE SMOOTH",
"237 133 OFFCURVE",
"236 132 QCURVE SMOOTH",
"235 131 LINE",
"235 133 LINE",
"233 133 LINE",
"233 123 LINE",
"235 123 LINE",
"235 128 LINE SMOOTH",
"235 129 OFFCURVE",
"236 130 QCURVE SMOOTH",
"237 131 LINE",
"239 131 OFFCURVE",
"239 130 QCURVE SMOOTH",
"239 129 LINE",
"239 123 LINE",
"242 123 LINE",
"242 129 LINE SMOOTH",
"242 130 OFFCURVE",
"241 130 OFFCURVE",
"241 131 QCURVE SMOOTH",
"241 132 LINE",
"241 132 LINE"
);
},
{
closed = 1;
nodes = (
"247 129 LINE SMOOTH",
"246 129 OFFCURVE",
"245 128 QCURVE",
"243 128 OFFCURVE",
"243 126 QCURVE SMOOTH",
"243 125 OFFCURVE",
"244 124 OFFCURVE",
"244 123 QCURVE",
"246 123 LINE",
"248 123 LINE SMOOTH",
"249 123 OFFCURVE",
"249 124 QCURVE",
"249 124 OFFCURVE",
"250 123 QCURVE",
"252 123 LINE",
"252 124 LINE",
"252 125 LINE",
"252 130 LINE SMOOTH",
"252 132 OFFCURVE",
"251 132 QCURVE",
"250 133 OFFCURVE",
"248 133 QCURVE SMOOTH",
"246 133 OFFCURVE",
"245 132 OFFCURVE",
"244 132 QCURVE",
"244 130 LINE",
"246 130 LINE",
"247 131 OFFCURVE",
"248 131 QCURVE SMOOTH",
"249 131 LINE",
"249 130 LINE",
"249 129 LINE",
"248 129 LINE",
"248 129 LINE"
);
},
{
closed = 1;
nodes = (
"249 127 LINE",
"248 127 LINE",
"246 127 LINE",
"246 126 LINE",
"246 125 LINE",
"247 124 LINE",
"248 124 OFFCURVE",
"248 125 OFFCURVE",
"249 125 QCURVE",
"249 127 LINE",
"249 128 LINE",
"249 128 LINE"
);
},
{
closed = 1;
nodes = (
"257 136 LINE",
"254 136 LINE",
"254 123 LINE",
"257 123 LINE",
"257 123 LINE"
);
},
{
closed = 1;
nodes = (
"260 131 LINE",
"260 125 LINE",
"260 123 LINE",
"263 123 LINE",
"264 123 LINE",
"264 125 LINE",
"263 125 LINE",
"262 125 LINE",
"262 126 LINE",
"262 131 LINE",
"264 131 LINE",
"264 133 LINE",
"262 133 LINE",
"262 135 LINE",
"260 135 LINE",
"260 133 LINE",
"258 133 LINE",
"258 131 LINE",
"258 131 LINE"
);
},
{
closed = 1;
nodes = (
"266 119 LINE",
"267 119 LINE SMOOTH",
"269 119 OFFCURVE",
"269 120 QCURVE",
"269 120 OFFCURVE",
"271 123 QCURVE",
"274 133 LINE",
"271 133 LINE",
"269 125 LINE",
"267 133 LINE",
"264 133 LINE",
"268 123 LINE",
"268 122 LINE",
"267 121 LINE",
"266 121 LINE",
"266 121 LINE"
);
},
{
closed = 1;
nodes = (
"290 125 OFFCURVE",
"290 128 QCURVE SMOOTH",
"290 130 OFFCURVE",
"289 131 QCURVE SMOOTH",
"287 133 OFFCURVE",
"285 133 QCURVE SMOOTH",
"283 133 OFFCURVE",
"281 131 QCURVE SMOOTH",
"280 130 OFFCURVE",
"280 128 QCURVE SMOOTH",
"280 125 OFFCURVE",
"281 124 QCURVE SMOOTH",
"282 123 OFFCURVE",
"285 123 QCURVE SMOOTH",
"288 123 OFFCURVE",
"289 124 QCURVE",
"289 124 LINE"
);
},
{
closed = 1;
nodes = (
"287 128 LINE",
"287 130 LINE",
"286 131 OFFCURVE",
"285 131 QCURVE SMOOTH",
"284 131 OFFCURVE",
"283 130 QCURVE",
"283 128 LINE",
"283 126 LINE",
"284 125 OFFCURVE",
"285 125 QCURVE SMOOTH",
"286 125 OFFCURVE",
"287 126 QCURVE",
"287 126 LINE"
);
},
{
closed = 1;
nodes = (
"295 136 LINE SMOOTH",
"293 136 OFFCURVE",
"293 135 QCURVE",
"292 135 OFFCURVE",
"292 133 QCURVE",
"291 133 LINE",
"291 131 LINE",
"292 131 LINE",
"292 123 LINE",
"295 123 LINE",
"295 131 LINE",
"296 131 LINE",
"296 133 LINE",
"295 133 LINE",
"295 134 LINE",
"296 134 LINE",
"296 136 LINE",
"296 136 LINE"
);
},
{
closed = 1;
nodes = (
"310 132 OFFCURVE",
"309 133 OFFCURVE",
"308 133 QCURVE SMOOTH",
"307 133 OFFCURVE",
"306 132 QCURVE SMOOTH",
"305 131 LINE",
"305 133 LINE",
"303 133 LINE",
"303 119 LINE",
"305 119 LINE",
"305 124 LINE",
"306 124 OFFCURVE",
"306 123 QCURVE",
"308 123 LINE SMOOTH",
"310 123 OFFCURVE",
"311 124 QCURVE SMOOTH",
"312 125 OFFCURVE",
"312 128 QCURVE SMOOTH",
"312 131 OFFCURVE",
"311 132 QCURVE",
"311 132 LINE"
);
},
{
closed = 1;
nodes = (
"308 131 LINE",
"306 131 OFFCURVE",
"306 129 QCURVE",
"305 129 OFFCURVE",
"305 128 QCURVE SMOOTH",
"305 126 OFFCURVE",
"306 126 OFFCURVE",
"306 125 QCURVE",
"308 125 LINE",
"308 125 OFFCURVE",
"309 126 QCURVE",
"310 126 OFFCURVE",
"310 128 QCURVE SMOOTH",
"310 129 OFFCURVE",
"309 130 QCURVE",
"309 130 LINE"
);
},
{
closed = 1;
nodes = (
"319 133 LINE",
"319 133 OFFCURVE",
"318 132 QCURVE",
"317 132 OFFCURVE",
"317 131 QCURVE SMOOTH",
"317 133 LINE",
"314 133 LINE",
"314 123 LINE",
"317 123 LINE",
"317 128 LINE",
"317 129 LINE SMOOTH",
"317 130 OFFCURVE",
"319 130 QCURVE SMOOTH",
"320 130 LINE",
"320 133 LINE",
"320 133 LINE"
);
},
{
closed = 1;
nodes = (
"331 126 OFFCURVE",
"331 128 QCURVE SMOOTH",
"331 129 OFFCURVE",
"329 131 QCURVE",
"329 133 OFFCURVE",
"326 133 QCURVE SMOOTH",
"324 133 OFFCURVE",
"322 131 QCURVE SMOOTH",
"321 130 OFFCURVE",
"321 128 QCURVE SMOOTH",
"321 125 OFFCURVE",
"322 124 QCURVE SMOOTH",
"323 123 OFFCURVE",
"326 123 QCURVE SMOOTH",
"329 123 OFFCURVE",
"329 124 QCURVE",
"329 124 LINE"
);
},
{
closed = 1;
nodes = (
"328 126 OFFCURVE",
"328 128 QCURVE SMOOTH",
"328 130 OFFCURVE",
"327 130 QCURVE",
"327 131 OFFCURVE",
"326 131 QCURVE SMOOTH",
"324 131 OFFCURVE",
"324 130 QCURVE",
"324 130 OFFCURVE",
"323 128 QCURVE",
"323 127 OFFCURVE",
"324 126 QCURVE",
"324 125 OFFCURVE",
"326 125 QCURVE",
"326 125 OFFCURVE",
"327 126 QCURVE",
"327 126 LINE"
);
},
{
closed = 1;
nodes = (
"332 126 LINE",
"332 124 OFFCURVE",
"333 124 QCURVE",
"334 123 OFFCURVE",
"336 123 QCURVE SMOOTH",
"339 123 OFFCURVE",
"340 124 QCURVE",
"340 124 OFFCURVE",
"341 126 QCURVE",
"341 127 OFFCURVE",
"340 127 OFFCURVE",
"340 128 QCURVE",
"339 128 OFFCURVE",
"339 129 OFFCURVE",
"338 129 QCURVE SMOOTH",
"335 129 OFFCURVE",
"335 130 QCURVE SMOOTH",
"335 131 LINE",
"336 131 LINE SMOOTH",
"337 131 OFFCURVE",
"338 130 QCURVE",
"340 130 LINE",
"340 132 OFFCURVE",
"339 132 QCURVE",
"338 133 OFFCURVE",
"336 133 QCURVE SMOOTH",
"334 133 OFFCURVE",
"333 132 QCURVE SMOOTH",
"332 131 OFFCURVE",
"332 130 QCURVE SMOOTH",
"332 128 OFFCURVE",
"333 128 QCURVE",
"333 128 OFFCURVE",
"335 127 QCURVE",
"336 127 OFFCURVE",
"336 126 OFFCURVE",
"337 126 QCURVE SMOOTH",
"338 126 LINE",
"338 125 LINE",
"337 125 LINE",
"335 125 LINE",
"334 126 LINE",
"334 126 LINE"
);
},
{
closed = 1;
nodes = (
"348 133 OFFCURVE",
"347 133 QCURVE SMOOTH",
"345 133 OFFCURVE",
"344 132 OFFCURVE",
"343 132 QCURVE",
"342 131 OFFCURVE",
"342 128 QCURVE SMOOTH",
"342 125 OFFCURVE",
"343 124 QCURVE SMOOTH",
"344 123 OFFCURVE",
"347 123 QCURVE SMOOTH",
"350 123 OFFCURVE",
"350 124 QCURVE",
"351 125 OFFCURVE",
"351 126 QCURVE",
"349 126 LINE",
"349 125 OFFCURVE",
"348 125 QCURVE SMOOTH",
"347 125 LINE",
"345 125 LINE",
"345 125 OFFCURVE",
"344 127 QCURVE",
"352 127 LINE",
"352 128 OFFCURVE",
"351 129 QCURVE",
"351 131 LINE",
"350 132 OFFCURVE",
"349 132 QCURVE",
"349 132 LINE"
);
},
{
closed = 1;
nodes = (
"345 130 OFFCURVE",
"344 129 QCURVE",
"349 129 LINE",
"349 129 OFFCURVE",
"348 130 QCURVE",
"348 131 OFFCURVE",
"347 131 QCURVE SMOOTH",
"346 131 OFFCURVE",
"345 130 QCURVE",
"345 130 LINE"
);
},
{
closed = 1;
nodes = (
"361 129 LINE",
"361 132 OFFCURVE",
"360 132 QCURVE",
"359 133 OFFCURVE",
"357 133 QCURVE SMOOTH",
"355 133 OFFCURVE",
"354 132 OFFCURVE",
"353 132 QCURVE",
"353 131 OFFCURVE",
"352 129 OFFCURVE",
"352 128 QCURVE SMOOTH",
"352 126 OFFCURVE",
"353 125 OFFCURVE",
"353 124 QCURVE",
"354 123 OFFCURVE",
"357 123 QCURVE SMOOTH",
"360 123 OFFCURVE",
"360 124 QCURVE",
"361 125 OFFCURVE",
"361 126 QCURVE",
"359 126 LINE",
"359 126 OFFCURVE",
"358 125 QCURVE",
"357 125 LINE SMOOTH",
"355 125 OFFCURVE",
"355 126 QCURVE SMOOTH",
"355 128 LINE",
"355 129 LINE SMOOTH",
"355 131 OFFCURVE",
"357 131 QCURVE SMOOTH",
"358 131 OFFCURVE",
"358 130 QCURVE",
"358 130 OFFCURVE",
"359 129 QCURVE",
"359 129 LINE"
);
},
{
closed = 1;
nodes = (
"363 133 LINE",
"363 127 LINE",
"363 124 LINE",
"364 123 OFFCURVE",
"366 123 QCURVE SMOOTH",
"368 123 LINE",
"369 124 LINE",
"369 123 LINE",
"372 123 LINE",
"372 133 LINE",
"369 133 LINE",
"369 127 LINE",
"369 126 LINE SMOOTH",
"369 125 OFFCURVE",
"367 125 QCURVE SMOOTH",
"366 125 OFFCURVE",
"366 126 QCURVE SMOOTH",
"366 127 LINE",
"366 133 LINE",
"366 133 LINE"
);
},
{
closed = 1;
nodes = (
"375 131 LINE",
"375 125 LINE",
"375 123 LINE",
"377 123 LINE",
"379 123 LINE",
"379 125 LINE",
"378 125 LINE",
"377 125 LINE",
"377 126 LINE",
"377 131 LINE",
"379 131 LINE",
"379 133 LINE",
"377 133 LINE",
"377 135 LINE",
"375 135 LINE",
"375 133 LINE",
"373 133 LINE",
"373 131 LINE",
"373 131 LINE"
);
},
{
closed = 1;
nodes = (
"383 136 LINE",
"380 136 LINE",
"380 134 LINE",
"383 134 LINE",
"383 134 LINE"
);
},
{
closed = 1;
nodes = (
"380 123 LINE",
"383 123 LINE",
"383 133 LINE",
"380 133 LINE",
"380 133 LINE"
);
},
{
closed = 1;
nodes = (
"395 126 OFFCURVE",
"395 128 QCURVE SMOOTH",
"395 129 OFFCURVE",
"393 131 QCURVE",
"393 133 OFFCURVE",
"390 133 QCURVE SMOOTH",
"388 133 OFFCURVE",
"386 131 QCURVE SMOOTH",
"385 130 OFFCURVE",
"385 128 QCURVE SMOOTH",
"385 125 OFFCURVE",
"386 124 QCURVE SMOOTH",
"387 123 OFFCURVE",
"390 123 QCURVE SMOOTH",
"393 123 OFFCURVE",
"393 124 QCURVE",
"393 124 LINE"
);
},
{
closed = 1;
nodes = (
"392 126 OFFCURVE",
"392 128 QCURVE SMOOTH",
"392 130 OFFCURVE",
"391 130 QCURVE",
"391 131 OFFCURVE",
"390 131 QCURVE SMOOTH",
"388 131 OFFCURVE",
"388 130 QCURVE",
"388 130 OFFCURVE",
"387 128 QCURVE",
"387 127 OFFCURVE",
"388 126 QCURVE",
"388 125 OFFCURVE",
"390 125 QCURVE",
"390 125 OFFCURVE",
"391 126 QCURVE",
"391 126 LINE"
);
},
{
closed = 1;
nodes = (
"404 133 OFFCURVE",
"402 133 QCURVE SMOOTH",
"400 133 OFFCURVE",
"400 132 QCURVE",
"400 132 OFFCURVE",
"399 131 QCURVE",
"399 133 LINE",
"397 133 LINE",
"397 123 LINE",
"399 123 LINE",
"399 128 LINE",
"399 130 LINE",
"400 130 OFFCURVE",
"400 131 OFFCURVE",
"401 131 QCURVE SMOOTH",
"402 131 OFFCURVE",
"403 130 QCURVE",
"403 129 LINE",
"403 123 LINE",
"405 123 LINE",
"405 129 LINE SMOOTH",
"405 132 OFFCURVE",
"404 132 QCURVE",
"404 132 LINE"
);
},
{
closed = 1;
nodes = (
"408 123 LINE",
"410 123 LINE",
"410 126 LINE",
"408 126 LINE",
"408 126 LINE"
);
},
{
closed = 1;
nodes = (
"204 222 LINE",
"203 229 LINE",
"200 229 LINE",
"203 219 LINE",
"206 219 LINE",
"207 226 LINE",
"209 219 LINE",
"211 219 LINE",
"214 229 LINE",
"211 229 LINE",
"210 222 LINE",
"208 229 LINE",
"206 229 LINE",
"206 229 LINE"
);
},
{
closed = 1;
nodes = (
"218 232 LINE",
"216 232 LINE",
"216 230 LINE",
"218 230 LINE",
"218 230 LINE"
);
},
{
closed = 1;
nodes = (
"216 219 LINE",
"218 219 LINE",
"218 229 LINE",
"216 229 LINE",
"216 229 LINE"
);
},
{
closed = 1;
nodes = (
"221 227 LINE",
"221 221 LINE",
"221 220 LINE",
"222 219 OFFCURVE",
"224 219 QCURVE SMOOTH",
"225 219 LINE",
"225 221 LINE",
"224 221 LINE",
"224 221 OFFCURVE",
"223 222 QCURVE",
"223 227 LINE",
"225 227 LINE",
"225 229 LINE",
"223 229 LINE",
"223 231 LINE",
"221 231 LINE",
"221 229 LINE",
"220 229 LINE",
"220 227 LINE",
"220 227 LINE"
);
},
{
closed = 1;
nodes = (
"232 229 LINE",
"231 229 LINE",
"229 227 LINE",
"229 232 LINE",
"227 232 LINE",
"227 219 LINE",
"229 219 LINE",
"229 224 LINE SMOOTH",
"229 226 OFFCURVE",
"230 226 QCURVE",
"230 227 OFFCURVE",
"231 227 QCURVE SMOOTH",
"232 227 OFFCURVE",
"233 226 QCURVE",
"233 225 LINE",
"233 219 LINE",
"235 219 LINE",
"235 225 LINE",
"235 227 LINE",
"235 228 LINE",
"235 228 OFFCURVE",
"234 229 QCURVE",
"234 229 LINE"
);
},
{
closed = 1;
nodes = (
"247 221 OFFCURVE",
"247 224 QCURVE SMOOTH",
"247 226 OFFCURVE",
"246 228 QCURVE SMOOTH",
"245 229 OFFCURVE",
"242 229 QCURVE SMOOTH",
"239 229 OFFCURVE",
"238 228 QCURVE",
"238 226 OFFCURVE",
"237 225 OFFCURVE",
"237 224 QCURVE SMOOTH",
"237 222 OFFCURVE",
"238 221 OFFCURVE",
"238 220 QCURVE",
"239 219 OFFCURVE",
"242 219 QCURVE SMOOTH",
"245 219 OFFCURVE",
"246 220 QCURVE",
"246 220 LINE"
);
},
{
closed = 1;
nodes = (
"244 222 OFFCURVE",
"245 224 QCURVE",
"245 225 OFFCURVE",
"244 226 QCURVE",
"244 227 OFFCURVE",
"242 227 QCURVE SMOOTH",
"241 227 OFFCURVE",
"241 226 QCURVE",
"240 226 OFFCURVE",
"240 224 QCURVE SMOOTH",
"240 222 OFFCURVE",
"241 222 QCURVE",
"241 221 OFFCURVE",
"242 221 QCURVE SMOOTH",
"244 221 OFFCURVE",
"244 222 QCURVE",
"244 222 LINE"
);
},
{
closed = 1;
nodes = (
"249 229 LINE",
"249 223 LINE",
"249 220 LINE",
"250 219 OFFCURVE",
"252 219 QCURVE SMOOTH",
"254 219 LINE",
"255 220 LINE",
"255 219 LINE",
"258 219 LINE",
"258 229 LINE",
"255 229 LINE",
"255 223 LINE",
"255 222 LINE SMOOTH",
"255 221 OFFCURVE",
"253 221 QCURVE SMOOTH",
"252 221 OFFCURVE",
"252 222 QCURVE SMOOTH",
"252 223 LINE",
"252 229 LINE",
"252 229 LINE"
);
},
{
closed = 1;
nodes = (
"261 227 LINE",
"261 221 LINE",
"261 220 LINE SMOOTH",
"261 219 OFFCURVE",
"263 219 QCURVE SMOOTH",
"265 219 LINE",
"265 221 LINE",
"264 221 LINE",
"263 221 LINE",
"263 222 LINE",
"263 227 LINE",
"265 227 LINE",
"265 229 LINE",
"263 229 LINE",
"263 231 LINE",
"261 231 LINE",
"261 229 LINE",
"259 229 LINE",
"259 227 LINE",
"259 227 LINE"
);
},
{
closed = 1;
nodes = (
"278 228 OFFCURVE",
"279 228 OFFCURVE",
"279 227 QCURVE",
"280 227 OFFCURVE",
"280 225 QCURVE SMOOTH",
"280 223 LINE",
"273 223 LINE",
"273 222 OFFCURVE",
"274 222 OFFCURVE",
"274 221 QCURVE",
"276 221 LINE",
"277 221 LINE",
"277 221 OFFCURVE",
"278 222 QCURVE",
"280 222 LINE",
"280 221 OFFCURVE",
"279 220 QCURVE SMOOTH",
"278 219 OFFCURVE",
"276 219 QCURVE SMOOTH",
"273 219 OFFCURVE",
"272 220 QCURVE SMOOTH",
"271 221 OFFCURVE",
"271 224 QCURVE SMOOTH",
"271 227 OFFCURVE",
"272 228 QCURVE SMOOTH",
"273 229 OFFCURVE",
"275 229 QCURVE SMOOTH",
"278 229 LINE",
"278 229 LINE"
);
},
{
closed = 1;
nodes = (
"273 225 LINE",
"278 225 LINE",
"278 226 OFFCURVE",
"277 226 QCURVE",
"277 227 OFFCURVE",
"275 227 QCURVE",
"275 227 OFFCURVE",
"274 226 QCURVE",
"274 226 LINE"
);
},
{
closed = 1;
nodes = (
"284 219 LINE",
"285 222 LINE",
"287 219 LINE",
"290 219 LINE",
"287 224 LINE",
"290 229 LINE",
"287 229 LINE",
"285 226 LINE",
"284 229 LINE",
"281 229 LINE",
"284 224 LINE",
"281 219 LINE",
"281 219 LINE"
);
},
{
closed = 1;
nodes = (
"299 229 OFFCURVE",
"297 229 QCURVE SMOOTH",
"296 229 OFFCURVE",
"295 228 QCURVE",
"295 228 OFFCURVE",
"294 227 QCURVE",
"294 229 LINE",
"292 229 LINE",
"292 215 LINE",
"294 215 LINE",
"294 220 LINE",
"294 220 OFFCURVE",
"295 219 QCURVE",
"297 219 LINE SMOOTH",
"299 219 OFFCURVE",
"300 220 QCURVE SMOOTH",
"301 221 OFFCURVE",
"301 224 QCURVE SMOOTH",
"301 227 OFFCURVE",
"300 228 QCURVE",
"300 228 LINE"
);
},
{
closed = 1;
nodes = (
"298 226 OFFCURVE",
"296 227 QCURVE",
"296 227 OFFCURVE",
"294 225 QCURVE",
"294 224 LINE SMOOTH",
"294 222 OFFCURVE",
"295 221 QCURVE",
"296 221 LINE SMOOTH",
"298 221 OFFCURVE",
"298 222 QCURVE",
"298 222 OFFCURVE",
"299 224 QCURVE",
"299 225 OFFCURVE",
"298 225 OFFCURVE",
"298 226 QCURVE",
"298 226 LINE"
);
},
{
closed = 1;
nodes = (
"307 229 OFFCURVE",
"306 228 QCURVE SMOOTH",
"305 227 LINE",
"305 229 LINE",
"303 229 LINE",
"303 219 LINE",
"305 219 LINE",
"305 224 LINE",
"306 225 LINE",
"306 226 OFFCURVE",
"308 226 QCURVE SMOOTH",
"309 226 LINE",
"309 229 LINE",
"308 229 LINE",
"308 229 LINE"
);
},
{
closed = 1;
nodes = (
"314 229 LINE SMOOTH",
"312 229 OFFCURVE",
"311 228 QCURVE SMOOTH",
"309 226 OFFCURVE",
"309 224 QCURVE SMOOTH",
"309 222 OFFCURVE",
"311 220 QCURVE SMOOTH",
"312 219 OFFCURVE",
"314 219 QCURVE SMOOTH",
"317 219 OFFCURVE",
"318 220 QCURVE",
"318 221 OFFCURVE",
"319 221 OFFCURVE",
"319 222 QCURVE",
"316 222 LINE",
"316 221 LINE",
"314 221 LINE",
"313 221 LINE",
"312 222 OFFCURVE",
"312 223 QCURVE",
"319 223 LINE",
"319 225 LINE SMOOTH",
"319 226 OFFCURVE",
"318 227 QCURVE",
"318 227 OFFCURVE",
"316 229 QCURVE",
"316 229 LINE"
);
},
{
closed = 1;
nodes = (
"312 226 OFFCURVE",
"312 225 QCURVE",
"316 225 LINE",
"316 226 LINE",
"315 227 OFFCURVE",
"314 227 QCURVE SMOOTH",
"313 227 OFFCURVE",
"313 226 QCURVE",
"313 226 LINE"
);
},
{
closed = 1;
nodes = (
"320 222 LINE",
"320 220 OFFCURVE",
"321 220 QCURVE",
"321 219 OFFCURVE",
"324 219 QCURVE SMOOTH",
"327 219 OFFCURVE",
"327 220 QCURVE",
"329 220 OFFCURVE",
"329 222 QCURVE SMOOTH",
"329 223 OFFCURVE",
"328 223 OFFCURVE",
"328 224 QCURVE",
"327 224 OFFCURVE",
"327 225 OFFCURVE",
"326 225 QCURVE SMOOTH",
"323 225 OFFCURVE",
"323 226 QCURVE",
"322 226 LINE",
"323 227 LINE",
"324 227 LINE",
"325 227 LINE",
"326 226 LINE",
"328 226 LINE",
"328 228 OFFCURVE",
"327 228 QCURVE",
"326 229 OFFCURVE",
"324 229 QCURVE SMOOTH",
"322 229 OFFCURVE",
"321 228 QCURVE SMOOTH",
"320 227 OFFCURVE",
"320 226 QCURVE SMOOTH",
"320 224 OFFCURVE",
"321 224 QCURVE",
"321 224 OFFCURVE",
"323 223 QCURVE",
"324 223 OFFCURVE",
"325 222 OFFCURVE",
"326 222 QCURVE",
"326 221 LINE",
"324 221 LINE",
"323 221 LINE SMOOTH",
"322 221 OFFCURVE",
"322 222 QCURVE",
"322 222 LINE"
);
},
{
closed = 1;
nodes = (
"330 222 LINE",
"330 220 OFFCURVE",
"331 220 QCURVE",
"332 219 OFFCURVE",
"334 219 QCURVE SMOOTH",
"337 219 OFFCURVE",
"338 220 QCURVE",
"338 220 OFFCURVE",
"339 222 QCURVE",
"339 223 OFFCURVE",
"338 223 OFFCURVE",
"338 224 QCURVE",
"337 224 OFFCURVE",
"337 225 OFFCURVE",
"336 225 QCURVE SMOOTH",
"333 225 OFFCURVE",
"333 226 QCURVE SMOOTH",
"333 227 LINE",
"334 227 LINE",
"336 227 LINE",
"336 226 LINE",
"338 226 LINE",
"338 228 OFFCURVE",
"337 228 QCURVE",
"336 229 OFFCURVE",
"334 229 QCURVE SMOOTH",
"332 229 OFFCURVE",
"331 228 QCURVE SMOOTH",
"330 227 OFFCURVE",
"330 226 QCURVE SMOOTH",
"330 224 OFFCURVE",
"331 224 QCURVE",
"331 224 OFFCURVE",
"333 223 QCURVE",
"334 223 OFFCURVE",
"334 222 OFFCURVE",
"335 222 QCURVE SMOOTH",
"336 222 LINE",
"336 221 LINE",
"334 221 LINE",
"333 221 LINE",
"332 222 LINE",
"332 222 LINE"
);
},
{
closed = 1;
nodes = (
"345 229 LINE SMOOTH",
"342 229 OFFCURVE",
"341 228 QCURVE SMOOTH",
"340 227 OFFCURVE",
"340 224 QCURVE SMOOTH",
"340 221 OFFCURVE",
"341 220 QCURVE SMOOTH",
"342 219 OFFCURVE",
"345 219 QCURVE SMOOTH",
"348 219 OFFCURVE",
"348 220 QCURVE",
"349 221 OFFCURVE",
"349 222 QCURVE",
"347 222 LINE",
"346 221 LINE",
"345 221 LINE",
"343 221 LINE",
"343 222 OFFCURVE",
"342 222 OFFCURVE",
"342 223 QCURVE",
"349 223 LINE",
"349 225 LINE",
"349 227 LINE",
"347 229 LINE",
"347 229 LINE"
);
},
{
closed = 1;
nodes = (
"343 226 OFFCURVE",
"342 225 QCURVE",
"347 225 LINE",
"347 226 OFFCURVE",
"346 226 QCURVE",
"346 227 OFFCURVE",
"345 227 QCURVE SMOOTH",
"343 227 OFFCURVE",
"343 226 QCURVE",
"343 226 LINE"
);
},
{
closed = 1;
nodes = (
"354 229 LINE SMOOTH",
"352 229 OFFCURVE",
"351 228 QCURVE",
"351 227 OFFCURVE",
"350 225 OFFCURVE",
"350 224 QCURVE SMOOTH",
"350 222 OFFCURVE",
"351 221 OFFCURVE",
"351 220 QCURVE",
"352 219 OFFCURVE",
"354 219 QCURVE SMOOTH",
"356 219 LINE",
"357 220 LINE",
"357 219 LINE",
"360 219 LINE",
"360 232 LINE",
"357 232 LINE",
"357 228 LINE",
"357 228 OFFCURVE",
"356 229 QCURVE",
"356 229 LINE"
);
},
{
closed = 1;
nodes = (
"357 224 LINE SMOOTH",
"357 226 OFFCURVE",
"356 226 QCURVE",
"356 227 OFFCURVE",
"355 227 QCURVE SMOOTH",
"354 227 OFFCURVE",
"354 226 OFFCURVE",
"353 226 QCURVE",
"353 224 LINE",
"353 222 LINE",
"354 221 OFFCURVE",
"355 221 QCURVE SMOOTH",
"356 221 OFFCURVE",
"357 222 QCURVE",
"357 222 LINE"
);
},
{
closed = 1;
nodes = (
"211 190 LINE",
"210 197 LINE",
"207 197 LINE",
"210 187 LINE",
"212 187 LINE",
"214 194 LINE",
"215 187 LINE",
"218 187 LINE",
"221 197 LINE",
"218 197 LINE",
"217 190 LINE",
"215 197 LINE",
"212 197 LINE",
"212 197 LINE"
);
},
{
closed = 1;
nodes = (
"227 197 LINE",
"227 197 OFFCURVE",
"226 196 QCURVE",
"225 196 OFFCURVE",
"225 195 QCURVE SMOOTH",
"225 197 LINE",
"222 197 LINE",
"222 187 LINE",
"225 187 LINE",
"225 192 LINE",
"225 193 LINE SMOOTH",
"225 194 OFFCURVE",
"227 194 QCURVE SMOOTH",
"228 194 LINE",
"228 197 LINE",
"228 197 LINE"
);
},
{
closed = 1;
nodes = (
"232 200 LINE",
"229 200 LINE",
"229 198 LINE",
"232 198 LINE",
"232 198 LINE"
);
},
{
closed = 1;
nodes = (
"229 187 LINE",
"232 187 LINE",
"232 197 LINE",
"229 197 LINE",
"229 197 LINE"
);
},
{
closed = 1;
nodes = (
"235 195 LINE",
"235 189 LINE",
"235 187 LINE",
"238 187 LINE",
"239 187 LINE",
"239 189 LINE",
"238 189 LINE",
"237 189 LINE",
"237 190 LINE",
"237 195 LINE",
"239 195 LINE",
"239 197 LINE",
"237 197 LINE",
"237 199 LINE",
"235 199 LINE",
"235 197 LINE",
"233 197 LINE",
"233 195 LINE",
"233 195 LINE"
);
},
{
closed = 1;
nodes = (
"241 195 LINE",
"241 189 LINE",
"241 187 LINE",
"244 187 LINE",
"245 187 LINE",
"245 189 LINE",
"244 189 LINE",
"243 189 LINE",
"243 190 LINE",
"243 195 LINE",
"245 195 LINE",
"245 197 LINE",
"243 197 LINE",
"243 199 LINE",
"241 199 LINE",
"241 197 LINE",
"239 197 LINE",
"239 195 LINE",
"239 195 LINE"
);
},
{
closed = 1;
nodes = (
"251 197 LINE SMOOTH",
"248 197 OFFCURVE",
"247 196 QCURVE SMOOTH",
"246 195 OFFCURVE",
"246 192 QCURVE SMOOTH",
"246 189 OFFCURVE",
"247 188 QCURVE SMOOTH",
"248 187 OFFCURVE",
"251 187 QCURVE SMOOTH",
"253 187 OFFCURVE",
"254 188 QCURVE SMOOTH",
"255 189 OFFCURVE",
"255 190 QCURVE",
"253 190 LINE",
"252 189 LINE",
"251 189 LINE",
"249 189 LINE",
"249 189 OFFCURVE",
"248 191 QCURVE",
"255 191 LINE",
"255 193 LINE",
"255 195 LINE",
"253 197 LINE",
"253 197 LINE"
);
},
{
closed = 1;
nodes = (
"248 193 LINE",
"253 193 LINE",
"252 194 LINE",
"252 195 OFFCURVE",
"251 195 QCURVE SMOOTH",
"249 195 OFFCURVE",
"249 194 QCURVE",
"249 194 LINE"
);
},
{
closed = 1;
nodes = (
"264 197 OFFCURVE",
"262 197 QCURVE SMOOTH",
"261 197 OFFCURVE",
"260 196 QCURVE SMOOTH",
"259 195 LINE",
"259 197 LINE",
"257 197 LINE",
"257 187 LINE",
"259 187 LINE",
"259 192 LINE SMOOTH",
"259 193 OFFCURVE",
"260 194 QCURVE",
"260 194 OFFCURVE",
"261 195 QCURVE",
"262 195 OFFCURVE",
"263 194 QCURVE",
"263 193 LINE",
"263 187 LINE",
"266 187 LINE",
"266 194 LINE SMOOTH",
"266 195 OFFCURVE",
"265 196 QCURVE",
"265 196 LINE"
);
},
{
closed = 1;
nodes = (
"280 197 OFFCURVE",
"278 197 QCURVE SMOOTH",
"277 197 OFFCURVE",
"276 196 QCURVE SMOOTH",
"275 195 LINE",
"275 197 LINE",
"273 197 LINE",
"273 183 LINE",
"275 183 LINE",
"275 188 LINE",
"276 188 OFFCURVE",
"276 187 QCURVE",
"278 187 LINE SMOOTH",
"280 187 OFFCURVE",
"281 188 QCURVE SMOOTH",
"282 189 OFFCURVE",
"282 192 QCURVE SMOOTH",
"282 195 OFFCURVE",
"281 196 QCURVE",
"281 196 LINE"
);
},
{
closed = 1;
nodes = (
"278 195 LINE",
"276 195 OFFCURVE",
"276 193 QCURVE",
"275 193 OFFCURVE",
"275 192 QCURVE SMOOTH",
"275 191 OFFCURVE",
"276 190 OFFCURVE",
"276 189 QCURVE",
"278 189 LINE",
"278 189 OFFCURVE",
"279 190 QCURVE",
"280 190 OFFCURVE",
"280 192 QCURVE SMOOTH",
"280 193 OFFCURVE",
"279 194 QCURVE",
"279 194 LINE"
);
},
{
closed = 1;
nodes = (
"288 197 LINE SMOOTH",
"286 197 OFFCURVE",
"285 196 QCURVE SMOOTH",
"283 194 OFFCURVE",
"283 192 QCURVE SMOOTH",
"283 190 OFFCURVE",
"285 188 QCURVE SMOOTH",
"286 187 OFFCURVE",
"288 187 QCURVE SMOOTH",
"291 187 OFFCURVE",
"292 188 QCURVE SMOOTH",
"293 189 OFFCURVE",
"293 190 QCURVE",
"290 190 LINE",
"290 189 LINE",
"288 189 LINE",
"287 189 LINE SMOOTH",
"286 189 OFFCURVE",
"286 191 QCURVE",
"293 191 LINE",
"293 193 LINE SMOOTH",
"293 195 OFFCURVE",
"292 195 QCURVE",
"292 195 OFFCURVE",
"290 197 QCURVE",
"290 197 LINE"
);
},
{
closed = 1;
nodes = (
"286 194 OFFCURVE",
"286 193 QCURVE",
"290 193 LINE",
"290 194 LINE",
"289 195 OFFCURVE",
"288 195 QCURVE",
"288 195 OFFCURVE",
"287 194 QCURVE",
"287 194 LINE"
);
},
{
closed = 1;
nodes = (
"298 197 OFFCURVE",
"298 196 QCURVE",
"297 196 OFFCURVE",
"297 195 QCURVE SMOOTH",
"297 197 LINE",
"294 197 LINE",
"294 187 LINE",
"297 187 LINE",
"297 192 LINE",
"297 193 LINE",
"298 194 OFFCURVE",
"299 194 QCURVE SMOOTH",
"300 194 LINE",
"300 197 LINE",
"300 197 LINE"
);
},
{
closed = 1;
nodes = (
"312 197 LINE",
"311 197 LINE",
"309 195 LINE",
"309 196 OFFCURVE",
"308 196 QCURVE",
"308 197 OFFCURVE",
"307 197 QCURVE SMOOTH",
"305 197 OFFCURVE",
"305 196 QCURVE",
"304 196 OFFCURVE",
"304 195 QCURVE SMOOTH",
"304 197 LINE",
"301 197 LINE",
"301 187 LINE",
"304 187 LINE",
"304 193 LINE",
"304 194 LINE SMOOTH",
"304 195 OFFCURVE",
"306 195 QCURVE",
"306 195 OFFCURVE",
"307 194 QCURVE",
"307 193 LINE",
"307 187 LINE",
"310 187 LINE",
"310 193 LINE",
"310 194 LINE",
"311 195 LINE",
"312 195 OFFCURVE",
"313 194 QCURVE",
"313 193 LINE",
"313 187 LINE",
"315 187 LINE",
"315 193 LINE",
"315 195 LINE",
"315 196 LINE",
"314 196 OFFCURVE",
"314 197 QCURVE",
"314 197 LINE"
);
},
{
closed = 1;
nodes = (
"320 200 LINE",
"318 200 LINE",
"318 198 LINE",
"320 198 LINE",
"320 198 LINE"
);
},
{
closed = 1;
nodes = (
"318 187 LINE",
"320 187 LINE",
"320 197 LINE",
"318 197 LINE",
"318 197 LINE"
);
},
{
closed = 1;
nodes = (
"322 190 LINE",
"322 189 OFFCURVE",
"323 188 QCURVE SMOOTH",
"324 187 OFFCURVE",
"327 187 QCURVE SMOOTH",
"329 187 OFFCURVE",
"330 188 QCURVE",
"331 188 OFFCURVE",
"331 190 QCURVE SMOOTH",
"331 191 OFFCURVE",
"330 192 QCURVE",
"330 192 OFFCURVE",
"328 193 QCURVE",
"326 193 OFFCURVE",
"325 194 QCURVE",
"325 195 LINE",
"327 195 LINE",
"328 195 LINE",
"328 194 LINE",
"331 194 LINE",
"331 195 OFFCURVE",
"330 196 QCURVE SMOOTH",
"329 197 OFFCURVE",
"327 197 QCURVE SMOOTH",
"324 197 OFFCURVE",
"324 196 QCURVE",
"322 194 OFFCURVE",
"322 194 QCURVE",
"322 193 OFFCURVE",
"323 192 QCURVE",
"324 192 OFFCURVE",
"324 191 OFFCURVE",
"326 191 QCURVE SMOOTH",
"327 191 OFFCURVE",
"328 190 QCURVE",
"329 190 LINE",
"329 189 OFFCURVE",
"328 189 QCURVE SMOOTH",
"327 189 LINE",
"325 189 LINE",
"325 190 LINE",
"325 190 LINE"
);
},
{
closed = 1;
nodes = (
"336 200 LINE",
"333 200 LINE",
"333 198 LINE",
"336 198 LINE",
"336 198 LINE"
);
},
{
closed = 1;
nodes = (
"333 187 LINE",
"336 187 LINE",
"336 197 LINE",
"333 197 LINE",
"333 197 LINE"
);
},
{
closed = 1;
nodes = (
"347 189 OFFCURVE",
"347 192 QCURVE SMOOTH",
"347 194 OFFCURVE",
"346 195 QCURVE SMOOTH",
"345 197 OFFCURVE",
"342 197 QCURVE SMOOTH",
"340 197 OFFCURVE",
"339 195 QCURVE",
"337 193 OFFCURVE",
"337 192 QCURVE SMOOTH",
"337 190 OFFCURVE",
"339 188 QCURVE SMOOTH",
"340 187 OFFCURVE",
"342 187 QCURVE SMOOTH",
"345 187 OFFCURVE",
"346 188 QCURVE",
"346 188 LINE"
);
},
{
closed = 1;
nodes = (
"345 190 OFFCURVE",
"345 192 QCURVE SMOOTH",
"345 194 OFFCURVE",
"344 194 QCURVE",
"344 195 OFFCURVE",
"342 195 QCURVE",
"342 195 OFFCURVE",
"341 194 QCURVE",
"340 194 OFFCURVE",
"340 192 QCURVE SMOOTH",
"340 190 OFFCURVE",
"341 190 QCURVE",
"341 189 OFFCURVE",
"342 189 QCURVE SMOOTH",
"344 189 OFFCURVE",
"344 190 QCURVE",
"344 190 LINE"
);
},
{
closed = 1;
nodes = (
"356 197 OFFCURVE",
"355 197 QCURVE SMOOTH",
"353 197 OFFCURVE",
"353 196 QCURVE",
"352 196 OFFCURVE",
"352 195 QCURVE SMOOTH",
"352 197 LINE",
"349 197 LINE",
"349 187 LINE",
"352 187 LINE",
"352 192 LINE",
"352 194 LINE",
"352 194 OFFCURVE",
"354 195 QCURVE",
"355 195 OFFCURVE",
"355 194 QCURVE SMOOTH",
"355 193 LINE",
"355 187 LINE",
"358 187 LINE",
"358 194 LINE SMOOTH",
"358 196 OFFCURVE",
"357 196 QCURVE",
"357 196 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
339 2 803 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
73 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
212 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
212 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
214 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
214 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
246 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
246 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
248 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
248 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
292 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
347 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
405 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
429 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
429 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
456 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
456 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
465 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
492 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
492 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
494 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
494 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
496 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
496 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
498 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
498 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
504 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
504 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
506 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
506 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
512 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
512 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
539 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
539 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
653 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
665 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
665 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
670 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
675 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
675 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
339 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
701 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
701 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
706 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
710 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
714 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
803 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
720 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
720 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
838 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
843 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
925 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
927 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
1024 803 339 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 561;
}
);
note = apple;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 438, 416}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 784;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 761, 257}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 635, 324}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 766, 290}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Ugrave;
unicode = 00D9;
},
{
glyphname = dotlessi;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"244 198 OFFCURVE",
"230 206 OFFCURVE",
"223 192 QCURVE SMOOTH",
"203 150 OFFCURVE",
"155 66 OFFCURVE",
"129 41 QCURVE SMOOTH",
"121 33 OFFCURVE",
"96 20 OFFCURVE",
"85 22 QCURVE SMOOTH",
"63 24 OFFCURVE",
"56 60 OFFCURVE",
"64 85 QCURVE SMOOTH",
"65 87 OFFCURVE",
"69 97 OFFCURVE",
"71 102 QCURVE SMOOTH",
"74 107 OFFCURVE",
"76 114 QCURVE SMOOTH",
"86 140 OFFCURVE",
"121 207 OFFCURVE",
"138 237 QCURVE SMOOTH",
"158 272 OFFCURVE",
"180 308 QCURVE",
"188 324 OFFCURVE",
"211 338 OFFCURVE",
"217 344 QCURVE",
"166 344 LINE SMOOTH",
"154 344 OFFCURVE",
"141 342 OFFCURVE",
"132 333 OFFCURVE",
"121 314 OFFCURVE",
"112 296 QCURVE SMOOTH",
"25 130 LINE SMOOTH",
"15 112 OFFCURVE",
"9 66 OFFCURVE",
"20 27 OFFCURVE",
"51 0 OFFCURVE",
"79 0 QCURVE SMOOTH",
"107 0 OFFCURVE",
"156 41 OFFCURVE",
"196 100 OFFCURVE",
"226 162 OFFCURVE",
"236 183 QCURVE",
"236 183 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
33 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 174;
}
);
note = dotlessi;
rightKerningGroup = u;
unicode = 0131;
},
{
glyphname = circumflex;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"385 389 LINE",
"349 495 LINE SMOOTH",
"348 497 OFFCURVE",
"337 498 OFFCURVE",
"330 497 QCURVE SMOOTH",
"322 496 OFFCURVE",
"311 495 QCURVE",
"162 389 LINE SMOOTH",
"159 387 OFFCURVE",
"163 384 OFFCURVE",
"172 383 OFFCURVE",
"183 386 OFFCURVE",
"187 389 QCURVE",
"192 391 OFFCURVE",
"235 414 OFFCURVE",
"258 427 QCURVE SMOOTH",
"285 442 OFFCURVE",
"319 460 QCURVE",
"365 389 LINE SMOOTH",
"368 384 OFFCURVE",
"388 382 OFFCURVE",
"385 389 QCURVE",
"385 389 LINE"
);
}
);
width = 485;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"433 487 OFFCURVE",
"416 489 OFFCURVE",
"415 486 QCURVE",
"407 472 OFFCURVE",
"385 455 OFFCURVE",
"368 457 QCURVE SMOOTH",
"356 458 OFFCURVE",
"331 467 OFFCURVE",
"305 478 OFFCURVE",
"279 486 OFFCURVE",
"266 487 QCURVE SMOOTH",
"251 488 OFFCURVE",
"226 477 OFFCURVE",
"205 458 OFFCURVE",
"189 435 OFFCURVE",
"183 425 QCURVE",
"183 423 OFFCURVE",
"188 421 OFFCURVE",
"196 420 OFFCURVE",
"202 421 OFFCURVE",
"203 423 QCURVE SMOOTH",
"209 435 OFFCURVE",
"231 452 OFFCURVE",
"247 450 QCURVE SMOOTH",
"260 449 OFFCURVE",
"285 440 OFFCURVE",
"310 429 OFFCURVE",
"335 419 OFFCURVE",
"349 418 QCURVE SMOOTH",
"364 417 OFFCURVE",
"389 429 OFFCURVE",
"410 449 OFFCURVE",
"426 473 OFFCURVE",
"432 485 QCURVE",
"432 485 LINE"
);
}
);
width = 485;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"409 441 LINE",
"196 441 LINE",
"178 403 LINE",
"392 403 LINE",
"392 403 LINE"
);
}
);
width = 485;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = breve;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"255 515 OFFCURVE",
"238 496 OFFCURVE",
"217 482 OFFCURVE",
"188 474 OFFCURVE",
"167 474 QCURVE SMOOTH",
"145 474 OFFCURVE",
"114 484 OFFCURVE",
"98 499 QCURVE SMOOTH",
"92 505 OFFCURVE",
"86 518 OFFCURVE",
"81 530 OFFCURVE",
"77 538 OFFCURVE",
"73 538 QCURVE SMOOTH",
"65 538 OFFCURVE",
"53 519 OFFCURVE",
"58 493 QCURVE SMOOTH",
"60 479 OFFCURVE",
"79 459 OFFCURVE",
"105 446 OFFCURVE",
"134 440 OFFCURVE",
"147 440 QCURVE SMOOTH",
"195 440 OFFCURVE",
"268 486 OFFCURVE",
"286 526 QCURVE",
"288 534 OFFCURVE",
"271 535 OFFCURVE",
"264 527 QCURVE",
"264 527 LINE"
);
}
);
width = 327;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"181 557 OFFCURVE",
"168 573 OFFCURVE",
"157 573 QCURVE SMOOTH",
"149 573 OFFCURVE",
"132 561 OFFCURVE",
"118 544 OFFCURVE",
"110 525 OFFCURVE",
"110 517 QCURVE SMOOTH",
"110 507 OFFCURVE",
"123 497 OFFCURVE",
"132 497 QCURVE SMOOTH",
"151 497 OFFCURVE",
"181 527 OFFCURVE",
"181 547 QCURVE",
"181 547 LINE"
);
}
);
width = 272;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"141 541 OFFCURVE",
"160 562 OFFCURVE",
"173 563 QCURVE SMOOTH",
"186 564 OFFCURVE",
"203 543 OFFCURVE",
"201 527 QCURVE SMOOTH",
"199 511 OFFCURVE",
"181 488 OFFCURVE",
"167 488 QCURVE SMOOTH",
"154 488 OFFCURVE",
"138 509 OFFCURVE",
"139 525 QCURVE",
"139 525 LINE"
);
},
{
closed = 1;
nodes = (
"101 501 OFFCURVE",
"136 470 OFFCURVE",
"164 471 QCURVE SMOOTH",
"192 472 OFFCURVE",
"234 504 OFFCURVE",
"237 527 QCURVE SMOOTH",
"239 549 OFFCURVE",
"205 580 OFFCURVE",
"177 579 QCURVE SMOOTH",
"150 577 OFFCURVE",
"106 546 OFFCURVE",
"104 523 QCURVE",
"104 523 LINE"
);
}
);
width = 312;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = cedilla;
lastChange = "2020-07-16 16:30:11 +0000";
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"84 -232 OFFCURVE",
"126 -241 OFFCURVE",
"157 -241 CURVE SMOOTH",
"190 -241 OFFCURVE",
"293 -228 OFFCURVE",
"293 -145 CURVE SMOOTH",
"293 -83 OFFCURVE",
"230 -70 OFFCURVE",
"195 -70 CURVE SMOOTH",
"179 -70 OFFCURVE",
"169 -69 OFFCURVE",
"158 -72 CURVE",
"169 -55 OFFCURVE",
"195 -28 OFFCURVE",
"210 -9 CURVE SMOOTH",
"223 7 OFFCURVE",
"213 17 OFFCURVE",
"195 3 CURVE SMOOTH",
"165 -21 OFFCURVE",
"90 -89 OFFCURVE",
"90 -102 CURVE SMOOTH",
"90 -115 OFFCURVE",
"97 -125 OFFCURVE",
"104 -121 CURVE",
"128 -105 OFFCURVE",
"151 -97 OFFCURVE",
"176 -97 CURVE SMOOTH",
"201 -97 OFFCURVE",
"244 -107 OFFCURVE",
"244 -150 CURVE SMOOTH",
"244 -193 OFFCURVE",
"201 -212 OFFCURVE",
"157 -212 CURVE SMOOTH",
"129 -212 OFFCURVE",
"101 -210 OFFCURVE",
"77 -190 CURVE SMOOTH",
"63 -179 OFFCURVE",
"48 -188 OFFCURVE",
"62 -204 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
27 3 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 27 26 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
19 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 1 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 379;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"137 574 OFFCURVE",
"121 570 QCURVE SMOOTH",
"107 566 OFFCURVE",
"94 544 OFFCURVE",
"92 533 QCURVE",
"92 527 OFFCURVE",
"84 492 OFFCURVE",
"77 454 OFFCURVE",
"71 422 OFFCURVE",
"72 420 QCURVE",
"74 412 OFFCURVE",
"82 414 QCURVE",
"84 415 OFFCURVE",
"106 457 OFFCURVE",
"129 509 OFFCURVE",
"146 555 OFFCURVE",
"144 560 QCURVE",
"144 560 LINE"
);
},
{
closed = 1;
nodes = (
"254 573 OFFCURVE",
"238 570 QCURVE SMOOTH",
"224 566 OFFCURVE",
"212 544 OFFCURVE",
"210 533 QCURVE SMOOTH",
"209 527 OFFCURVE",
"202 492 OFFCURVE",
"194 454 OFFCURVE",
"188 422 OFFCURVE",
"189 420 QCURVE",
"191 412 OFFCURVE",
"199 414 QCURVE",
"201 415 OFFCURVE",
"223 457 OFFCURVE",
"246 509 OFFCURVE",
"263 555 OFFCURVE",
"261 560 QCURVE",
"261 560 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 267;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"222 3 OFFCURVE",
"217 3 OFFCURVE",
"214 3 QCURVE",
"196 -5 OFFCURVE",
"141 -49 OFFCURVE",
"89 -105 OFFCURVE",
"52 -165 OFFCURVE",
"51 -188 QCURVE SMOOTH",
"50 -211 OFFCURVE",
"77 -233 OFFCURVE",
"96 -233 QCURVE SMOOTH",
"115 -233 OFFCURVE",
"148 -221 OFFCURVE",
"174 -204 OFFCURVE",
"189 -185 OFFCURVE",
"191 -177 QCURVE SMOOTH",
"193 -170 OFFCURVE",
"183 -171 OFFCURVE",
"181 -173 QCURVE SMOOTH",
"171 -183 OFFCURVE",
"144 -203 OFFCURVE",
"130 -203 QCURVE SMOOTH",
"113 -203 OFFCURVE",
"101 -184 OFFCURVE",
"101 -170 QCURVE SMOOTH",
"102 -153 OFFCURVE",
"124 -109 OFFCURVE",
"159 -65 OFFCURVE",
"200 -23 OFFCURVE",
"220 -7 QCURVE",
"220 -7 LINE"
);
}
);
width = 333;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"85 614 LINE",
"121 508 LINE",
"121 506 OFFCURVE",
"133 505 OFFCURVE",
"140 506 QCURVE SMOOTH",
"148 507 OFFCURVE",
"159 508 QCURVE",
"308 614 LINE SMOOTH",
"311 616 OFFCURVE",
"307 619 OFFCURVE",
"298 620 OFFCURVE",
"287 617 OFFCURVE",
"283 614 QCURVE SMOOTH",
"278 611 OFFCURVE",
"235 589 OFFCURVE",
"212 576 QCURVE SMOOTH",
"185 561 OFFCURVE",
"151 543 QCURVE",
"105 614 LINE SMOOTH",
"102 619 OFFCURVE",
"82 621 OFFCURVE",
"85 614 QCURVE",
"85 614 LINE"
);
}
);
width = 367;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = periodcentered;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 22, 205}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 261;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = Eth;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1030 310 OFFCURVE",
"1006 437 OFFCURVE",
"951 546 OFFCURVE",
"869 635 OFFCURVE",
"818 669 QCURVE",
"830 687 OFFCURVE",
"854 721 OFFCURVE",
"865 737 QCURVE SMOOTH",
"867 740 OFFCURVE",
"884 757 OFFCURVE",
"894 764 QCURVE SMOOTH",
"912 775 OFFCURVE",
"908 789 OFFCURVE",
"884 779 QCURVE SMOOTH",
"878 777 OFFCURVE",
"855 763 OFFCURVE",
"829 746 OFFCURVE",
"806 729 OFFCURVE",
"800 723 QCURVE SMOOTH",
"775 694 LINE",
"697 736 OFFCURVE",
"516 768 OFFCURVE",
"423 754 QCURVE SMOOTH",
"320 739 OFFCURVE",
"180 675 OFFCURVE",
"96 594 OFFCURVE",
"66 504 OFFCURVE",
"81 423 OFFCURVE",
"136 358 OFFCURVE",
"180 343 QCURVE SMOOTH",
"213 331 OFFCURVE",
"283 339 OFFCURVE",
"343 373 OFFCURVE",
"386 430 OFFCURVE",
"391 467 QCURVE SMOOTH",
"393 481 OFFCURVE",
"372 484 OFFCURVE",
"371 476 QCURVE SMOOTH",
"370 463 OFFCURVE",
"347 415 OFFCURVE",
"301 374 OFFCURVE",
"234 353 OFFCURVE",
"190 367 QCURVE SMOOTH",
"153 378 OFFCURVE",
"117 431 OFFCURVE",
"118 500 OFFCURVE",
"156 576 OFFCURVE",
"228 647 OFFCURVE",
"334 704 OFFCURVE",
"403 719 QCURVE SMOOTH",
"497 739 OFFCURVE",
"673 708 OFFCURVE",
"747 663 QCURVE",
"688 597 OFFCURVE",
"596 436 OFFCURVE",
"511 274 OFFCURVE",
"422 125 OFFCURVE",
"367 72 QCURVE",
"355 78 OFFCURVE",
"315 99 OFFCURVE",
"271 121 OFFCURVE",
"229 141 OFFCURVE",
"215 146 QCURVE SMOOTH",
"159 165 OFFCURVE",
"73 157 OFFCURVE",
"19 121 OFFCURVE",
"-1 66 OFFCURVE",
"16 12 OFFCURVE",
"74 -30 OFFCURVE",
"125 -36 QCURVE SMOOTH",
"197 -45 OFFCURVE",
"320 -9 OFFCURVE",
"375 36 QCURVE",
"399 25 OFFCURVE",
"453 5 OFFCURVE",
"518 -13 OFFCURVE",
"597 -29 OFFCURVE",
"646 -35 QCURVE SMOOTH",
"713 -43 OFFCURVE",
"843 -12 OFFCURVE",
"947 60 OFFCURVE",
"1016 169 OFFCURVE",
"1023 239 QCURVE",
"1023 239 LINE"
);
},
{
closed = 1;
nodes = (
"954 185 OFFCURVE",
"903 91 OFFCURVE",
"820 22 OFFCURVE",
"710 -14 OFFCURVE",
"645 -8 QCURVE SMOOTH",
"564 0 OFFCURVE",
"446 33 OFFCURVE",
"399 54 QCURVE",
"409 62 OFFCURVE",
"427 79 OFFCURVE",
"437 90 QCURVE SMOOTH",
"478 134 OFFCURVE",
"567 263 OFFCURVE",
"659 409 OFFCURVE",
"750 562 OFFCURVE",
"794 631 QCURVE",
"836 598 OFFCURVE",
"904 512 OFFCURVE",
"948 412 OFFCURVE",
"966 298 OFFCURVE",
"960 237 QCURVE",
"960 237 LINE"
);
},
{
closed = 1;
nodes = (
"299 22 OFFCURVE",
"204 -10 OFFCURVE",
"150 -8 QCURVE SMOOTH",
"119 -7 OFFCURVE",
"82 21 OFFCURVE",
"66 57 OFFCURVE",
"73 97 OFFCURVE",
"103 124 OFFCURVE",
"154 133 OFFCURVE",
"190 120 QCURVE SMOOTH",
"235 104 OFFCURVE",
"305 69 OFFCURVE",
"341 52 QCURVE",
"341 52 LINE"
);
},
{
closed = 1;
nodes = (
"665 288 OFFCURVE",
"673 296 OFFCURVE",
"671 306 OFFCURVE",
"660 315 OFFCURVE",
"651 315 QCURVE SMOOTH",
"564 317 OFFCURVE",
"462 319 OFFCURVE",
"431 319 QCURVE SMOOTH",
"420 319 OFFCURVE",
"413 303 OFFCURVE",
"416 285 OFFCURVE",
"426 270 OFFCURVE",
"431 271 QCURVE SMOOTH",
"476 276 OFFCURVE",
"586 288 OFFCURVE",
"655 288 QCURVE",
"655 288 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
72 2 75 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1027;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = Lslash;
layers = (
{
components = (
{
name = L;
},
{
name = endash;
transform = "{1, 0, 0, 1, 140, 9}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 746;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = lslash;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"236 259 LINE SMOOTH",
"249 264 OFFCURVE",
"248 282 OFFCURVE",
"237 278 QCURVE SMOOTH",
"171 254 LINE",
"220 311 OFFCURVE",
"290 432 OFFCURVE",
"317 493 QCURVE SMOOTH",
"344 553 OFFCURVE",
"337 619 OFFCURVE",
"297 632 OFFCURVE",
"237 593 OFFCURVE",
"210 548 QCURVE SMOOTH",
"189 513 OFFCURVE",
"148 431 OFFCURVE",
"109 344 OFFCURVE",
"75 255 OFFCURVE",
"63 214 QCURVE",
"15 195 LINE SMOOTH",
"8 192 OFFCURVE",
"2 179 OFFCURVE",
"1 167 OFFCURVE",
"5 159 OFFCURVE",
"8 161 QCURVE",
"54 182 LINE",
"47 158 OFFCURVE",
"31 94 OFFCURVE",
"34 37 OFFCURVE",
"66 -2 OFFCURVE",
"105 -2 QCURVE SMOOTH",
"143 -2 OFFCURVE",
"201 42 OFFCURVE",
"244 102 OFFCURVE",
"274 166 OFFCURVE",
"283 186 QCURVE SMOOTH",
"290 201 OFFCURVE",
"275 204 OFFCURVE",
"268 191 QCURVE SMOOTH",
"263 181 OFFCURVE",
"248 152 OFFCURVE",
"229 118 OFFCURVE",
"206 82 OFFCURVE",
"194 64 QCURVE SMOOTH",
"174 36 OFFCURVE",
"129 15 OFFCURVE",
"94 30 OFFCURVE",
"80 82 OFFCURVE",
"91 127 QCURVE SMOOTH",
"96 146 OFFCURVE",
"108 180 OFFCURVE",
"112 193 QCURVE",
"120 200 OFFCURVE",
"133 212 OFFCURVE",
"140 220 QCURVE",
"140 220 LINE"
);
},
{
closed = 1;
nodes = (
"288 475 OFFCURVE",
"251 404 OFFCURVE",
"208 334 OFFCURVE",
"160 268 OFFCURVE",
"135 241 QCURVE",
"130 238 OFFCURVE",
"124 237 QCURVE",
"137 268 OFFCURVE",
"175 357 OFFCURVE",
"217 447 OFFCURVE",
"260 528 OFFCURVE",
"278 553 QCURVE SMOOTH",
"298 582 OFFCURVE",
"316 588 OFFCURVE",
"319 565 OFFCURVE",
"309 525 OFFCURVE",
"302 508 QCURVE",
"302 508 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
64 2 36 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 212;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 639, 364}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 901;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 80, -24}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 256;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 835, 252}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1006;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 203, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = Thorn;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"421 758 LINE SMOOTH",
"432 792 OFFCURVE",
"427 826 OFFCURVE",
"409 843 QCURVE SMOOTH",
"401 850 OFFCURVE",
"375 849 OFFCURVE",
"369 858 QCURVE",
"369 845 OFFCURVE",
"350 749 OFFCURVE",
"310 608 OFFCURVE",
"248 436 OFFCURVE",
"206 347 QCURVE SMOOTH",
"196 326 OFFCURVE",
"163 263 OFFCURVE",
"124 191 OFFCURVE",
"83 119 OFFCURVE",
"46 57 OFFCURVE",
"17 14 OFFCURVE",
"11 8 QCURVE",
"22 10 OFFCURVE",
"43 4 OFFCURVE",
"53 3 QCURVE SMOOTH",
"77 1 OFFCURVE",
"105 23 OFFCURVE",
"122 55 QCURVE SMOOTH",
"197 208 LINE",
"230 206 OFFCURVE",
"325 217 OFFCURVE",
"371 229 QCURVE SMOOTH",
"409 238 OFFCURVE",
"486 280 OFFCURVE",
"547 337 OFFCURVE",
"585 405 OFFCURVE",
"583 476 OFFCURVE",
"535 546 OFFCURVE",
"480 576 QCURVE SMOOTH",
"458 589 OFFCURVE",
"400 609 OFFCURVE",
"367 614 QCURVE",
"367 614 LINE"
);
},
{
closed = 1;
nodes = (
"517 527 OFFCURVE",
"538 437 OFFCURVE",
"498 346 OFFCURVE",
"405 268 OFFCURVE",
"342 248 QCURVE SMOOTH",
"311 238 OFFCURVE",
"237 229 OFFCURVE",
"206 228 QCURVE",
"238 293 LINE",
"245 303 OFFCURVE",
"268 353 OFFCURVE",
"290 407 OFFCURVE",
"307 452 OFFCURVE",
"310 459 QCURVE SMOOTH",
"360 595 LINE",
"386 589 OFFCURVE",
"446 570 OFFCURVE",
"465 559 QCURVE",
"465 559 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 336;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = thorn;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"281 155 OFFCURVE",
"223 81 OFFCURVE",
"162 30 OFFCURVE",
"106 13 OFFCURVE",
"88 31 QCURVE",
"123 97 OFFCURVE",
"193 219 OFFCURVE",
"222 258 QCURVE SMOOTH",
"254 303 OFFCURVE",
"305 328 OFFCURVE",
"331 304 OFFCURVE",
"326 238 OFFCURVE",
"301 192 QCURVE",
"301 192 LINE"
);
},
{
closed = 1;
nodes = (
"278 521 LINE SMOOTH",
"289 555 OFFCURVE",
"284 589 OFFCURVE",
"266 606 QCURVE SMOOTH",
"258 613 OFFCURVE",
"232 612 OFFCURVE",
"226 621 QCURVE",
"226 608 OFFCURVE",
"203 499 OFFCURVE",
"157 343 OFFCURVE",
"90 159 OFFCURVE",
"48 70 QCURVE SMOOTH",
"38 49 OFFCURVE",
"5 -14 OFFCURVE",
"-34 -86 OFFCURVE",
"-75 -158 OFFCURVE",
"-112 -220 OFFCURVE",
"-141 -263 OFFCURVE",
"-147 -269 QCURVE",
"-136 -267 OFFCURVE",
"-115 -273 OFFCURVE",
"-105 -274 QCURVE SMOOTH",
"-81 -276 OFFCURVE",
"-53 -254 OFFCURVE",
"-36 -222 QCURVE SMOOTH",
"80 16 LINE",
"107 0 OFFCURVE",
"165 -4 OFFCURVE",
"221 13 OFFCURVE",
"273 49 OFFCURVE",
"294 74 QCURVE SMOOTH",
"321 107 OFFCURVE",
"366 194 OFFCURVE",
"382 275 OFFCURVE",
"364 338 OFFCURVE",
"328 348 QCURVE SMOOTH",
"302 355 OFFCURVE",
"250 319 OFFCURVE",
"202 262 OFFCURVE",
"163 200 OFFCURVE",
"152 182 QCURVE",
"152 182 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
50 3 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 5 26 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 385;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 842, 318}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 677;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 116, -77}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 341;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = uni00AD;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 406;
}
);
note = uni00AD;
unicode = 00AD;
},
{
glyphname = section;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"709 12 OFFCURVE",
"785 76 OFFCURVE",
"841 147 OFFCURVE",
"872 223 OFFCURVE",
"865 299 OFFCURVE",
"817 370 OFFCURVE",
"766 402 QCURVE SMOOTH",
"738 419 OFFCURVE",
"675 450 OFFCURVE",
"612 479 OFFCURVE",
"553 506 OFFCURVE",
"530 520 QCURVE SMOOTH",
"479 551 OFFCURVE",
"450 621 OFFCURVE",
"473 687 OFFCURVE",
"539 742 OFFCURVE",
"584 758 QCURVE SMOOTH",
"664 787 OFFCURVE",
"782 789 OFFCURVE",
"859 759 OFFCURVE",
"898 707 OFFCURVE",
"901 655 OFFCURVE",
"869 614 OFFCURVE",
"838 610 QCURVE SMOOTH",
"826 608 OFFCURVE",
"813 600 OFFCURVE",
"813 592 OFFCURVE",
"823 587 OFFCURVE",
"833 590 QCURVE SMOOTH",
"875 602 OFFCURVE",
"900 622 QCURVE SMOOTH",
"923 641 OFFCURVE",
"939 689 OFFCURVE",
"928 735 OFFCURVE",
"894 777 OFFCURVE",
"867 790 QCURVE SMOOTH",
"840 803 OFFCURVE",
"761 815 OFFCURVE",
"673 813 OFFCURVE",
"583 798 OFFCURVE",
"546 785 QCURVE SMOOTH",
"499 768 OFFCURVE",
"424 711 OFFCURVE",
"382 642 OFFCURVE",
"381 567 OFFCURVE",
"407 532 QCURVE",
"378 520 OFFCURVE",
"353 505 QCURVE SMOOTH",
"311 480 OFFCURVE",
"235 416 OFFCURVE",
"179 345 OFFCURVE",
"148 269 OFFCURVE",
"155 193 OFFCURVE",
"203 122 OFFCURVE",
"254 90 QCURVE SMOOTH",
"282 73 OFFCURVE",
"345 42 OFFCURVE",
"408 13 OFFCURVE",
"467 -14 OFFCURVE",
"490 -28 QCURVE SMOOTH",
"541 -59 OFFCURVE",
"570 -129 OFFCURVE",
"547 -195 OFFCURVE",
"481 -250 OFFCURVE",
"436 -266 QCURVE SMOOTH",
"355 -295 OFFCURVE",
"238 -297 OFFCURVE",
"161 -267 OFFCURVE",
"122 -215 OFFCURVE",
"119 -163 OFFCURVE",
"151 -122 OFFCURVE",
"182 -118 QCURVE SMOOTH",
"194 -117 OFFCURVE",
"207 -108 OFFCURVE",
"207 -100 OFFCURVE",
"197 -95 OFFCURVE",
"187 -98 QCURVE SMOOTH",
"145 -110 OFFCURVE",
"120 -130 QCURVE SMOOTH",
"97 -149 OFFCURVE",
"81 -197 OFFCURVE",
"92 -243 OFFCURVE",
"126 -285 OFFCURVE",
"153 -298 QCURVE SMOOTH",
"180 -312 OFFCURVE",
"259 -323 OFFCURVE",
"347 -321 OFFCURVE",
"436 -306 OFFCURVE",
"474 -293 QCURVE SMOOTH",
"520 -276 OFFCURVE",
"595 -220 OFFCURVE",
"637 -151 OFFCURVE",
"639 -76 OFFCURVE",
"613 -41 QCURVE",
"627 -35 OFFCURVE",
"654 -21 OFFCURVE",
"667 -13 QCURVE",
"667 -13 LINE"
);
},
{
closed = 1;
nodes = (
"486 467 OFFCURVE",
"560 434 OFFCURVE",
"636 402 OFFCURVE",
"706 369 OFFCURVE",
"729 350 QCURVE SMOOTH",
"774 313 OFFCURVE",
"796 217 OFFCURVE",
"761 118 OFFCURVE",
"674 25 OFFCURVE",
"611 -8 QCURVE SMOOTH",
"592 -17 LINE",
"577 -3 OFFCURVE",
"562 6 QCURVE SMOOTH",
"534 25 OFFCURVE",
"460 58 OFFCURVE",
"384 90 OFFCURVE",
"314 123 OFFCURVE",
"291 142 QCURVE SMOOTH",
"246 179 OFFCURVE",
"224 275 OFFCURVE",
"259 374 OFFCURVE",
"346 467 OFFCURVE",
"409 500 QCURVE SMOOTH",
"428 509 LINE",
"441 496 OFFCURVE",
"458 486 QCURVE",
"458 486 LINE"
);
}
);
width = 944;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = eth;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"375 601 OFFCURVE",
"377 612 OFFCURVE",
"370 619 OFFCURVE",
"356 621 OFFCURVE",
"349 617 QCURVE SMOOTH",
"271 575 LINE",
"250 597 OFFCURVE",
"191 622 OFFCURVE",
"153 622 QCURVE SMOOTH",
"148 622 OFFCURVE",
"128 621 OFFCURVE",
"109 617 OFFCURVE",
"95 609 OFFCURVE",
"95 601 QCURVE SMOOTH",
"95 596 OFFCURVE",
"102 594 OFFCURVE",
"106 594 QCURVE SMOOTH",
"115 594 OFFCURVE",
"132 598 OFFCURVE",
"142 598 QCURVE SMOOTH",
"170 598 OFFCURVE",
"215 573 OFFCURVE",
"232 553 QCURVE",
"156 511 LINE SMOOTH",
"147 505 OFFCURVE",
"149 489 OFFCURVE",
"160 474 OFFCURVE",
"176 466 OFFCURVE",
"180 469 QCURVE SMOOTH",
"197 481 OFFCURVE",
"234 509 OFFCURVE",
"254 523 QCURVE",
"278 481 OFFCURVE",
"299 382 OFFCURVE",
"299 344 QCURVE SMOOTH",
"299 299 OFFCURVE",
"288 250 QCURVE",
"288 265 LINE SMOOTH",
"288 290 OFFCURVE",
"261 322 OFFCURVE",
"234 322 QCURVE SMOOTH",
"204 322 OFFCURVE",
"143 290 OFFCURVE",
"91 241 OFFCURVE",
"53 182 OFFCURVE",
"45 155 QCURVE SMOOTH",
"36 123 OFFCURVE",
"36 90 QCURVE SMOOTH",
"36 75 OFFCURVE",
"42 42 OFFCURVE",
"57 14 OFFCURVE",
"82 -5 OFFCURVE",
"100 -5 QCURVE SMOOTH",
"145 -5 OFFCURVE",
"216 43 OFFCURVE",
"270 116 OFFCURVE",
"307 201 OFFCURVE",
"316 238 QCURVE SMOOTH",
"325 272 OFFCURVE",
"335 341 OFFCURVE",
"335 376 QCURVE SMOOTH",
"335 422 OFFCURVE",
"315 514 OFFCURVE",
"291 549 QCURVE",
"308 560 OFFCURVE",
"345 584 OFFCURVE",
"366 596 QCURVE",
"366 596 LINE"
);
},
{
closed = 1;
nodes = (
"274 235 OFFCURVE",
"261 183 OFFCURVE",
"248 160 QCURVE SMOOTH",
"239 143 OFFCURVE",
"209 92 OFFCURVE",
"172 42 OFFCURVE",
"129 7 OFFCURVE",
"108 7 QCURVE SMOOTH",
"91 7 OFFCURVE",
"80 35 OFFCURVE",
"80 47 QCURVE SMOOTH",
"80 72 OFFCURVE",
"92 130 OFFCURVE",
"100 153 QCURVE SMOOTH",
"106 171 OFFCURVE",
"135 225 OFFCURVE",
"173 276 OFFCURVE",
"217 312 OFFCURVE",
"239 312 QCURVE SMOOTH",
"261 312 OFFCURVE",
"274 280 OFFCURVE",
"274 261 QCURVE",
"274 261 LINE"
);
}
);
width = 388;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = divide;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"298 268 OFFCURVE",
"278 292 OFFCURVE",
"261 292 QCURVE SMOOTH",
"244 292 OFFCURVE",
"215 268 OFFCURVE",
"213 251 QCURVE SMOOTH",
"210 234 OFFCURVE",
"230 210 OFFCURVE",
"247 210 QCURVE SMOOTH",
"264 210 OFFCURVE",
"292 234 OFFCURVE",
"295 251 QCURVE",
"295 251 LINE"
);
},
{
closed = 1;
nodes = (
"255 44 OFFCURVE",
"235 68 OFFCURVE",
"218 68 QCURVE SMOOTH",
"201 68 OFFCURVE",
"173 44 OFFCURVE",
"170 27 QCURVE SMOOTH",
"167 10 OFFCURVE",
"187 -14 OFFCURVE",
"204 -14 QCURVE SMOOTH",
"221 -14 OFFCURVE",
"250 10 OFFCURVE",
"252 27 QCURVE",
"252 27 LINE"
);
},
{
closed = 1;
nodes = (
"411 149 LINE",
"411 167 LINE",
"409 168 LINE",
"65 168 LINE",
"64 167 LINE",
"64 149 LINE",
"65 148 LINE",
"409 148 LINE",
"409 148 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
21 15 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 1 24 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 401;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = oslash;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"68 -54 LINE",
"99 0 LINE",
"100 0 LINE SMOOTH",
"122 -1 OFFCURVE",
"166 18 OFFCURVE",
"187 34 QCURVE",
"197 23 OFFCURVE",
"228 8 OFFCURVE",
"251 8 QCURVE SMOOTH",
"282 8 OFFCURVE",
"335 54 OFFCURVE",
"375 114 OFFCURVE",
"402 174 OFFCURVE",
"408 188 QCURVE SMOOTH",
"413 199 OFFCURVE",
"397 205 OFFCURVE",
"393 197 QCURVE SMOOTH",
"384 179 OFFCURVE",
"356 121 OFFCURVE",
"320 65 OFFCURVE",
"277 25 OFFCURVE",
"253 25 QCURVE SMOOTH",
"219 25 OFFCURVE",
"206 50 QCURVE",
"235 77 OFFCURVE",
"279 142 OFFCURVE",
"290 168 QCURVE SMOOTH",
"300 192 OFFCURVE",
"311 241 OFFCURVE",
"311 284 OFFCURVE",
"299 320 OFFCURVE",
"287 332 QCURVE",
"314 378 LINE",
"295 387 LINE",
"270 343 LINE",
"256 350 OFFCURVE",
"241 350 QCURVE SMOOTH",
"215 351 OFFCURVE",
"161 324 OFFCURVE",
"110 278 OFFCURVE",
"66 216 OFFCURVE",
"51 182 QCURVE SMOOTH",
"38 152 OFFCURVE",
"28 94 OFFCURVE",
"34 45 OFFCURVE",
"57 10 OFFCURVE",
"78 3 QCURVE",
"50 -46 LINE",
"50 -46 LINE"
);
},
{
closed = 1;
nodes = (
"133 214 OFFCURVE",
"167 264 OFFCURVE",
"203 300 OFFCURVE",
"240 320 OFFCURVE",
"256 318 QCURVE",
"94 32 LINE",
"80 50 OFFCURVE",
"95 133 OFFCURVE",
"120 186 QCURVE",
"120 186 LINE"
);
},
{
closed = 1;
nodes = (
"240 124 OFFCURVE",
"223 99 QCURVE",
"224 102 OFFCURVE",
"225 107 OFFCURVE",
"225 110 QCURVE SMOOTH",
"225 122 OFFCURVE",
"208 140 OFFCURVE",
"195 140 QCURVE SMOOTH",
"182 140 OFFCURVE",
"175 134 QCURVE",
"274 309 LINE",
"290 292 OFFCURVE",
"279 205 OFFCURVE",
"254 153 QCURVE",
"254 153 LINE"
);
},
{
closed = 1;
nodes = (
"160 86 OFFCURVE",
"168 60 OFFCURVE",
"176 48 QCURVE",
"159 34 OFFCURVE",
"125 20 OFFCURVE",
"111 22 QCURVE",
"161 109 LINE",
"160 105 OFFCURVE",
"160 97 QCURVE",
"160 97 LINE"
);
}
);
width = 335;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = Oslash;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"177 -118 LINE",
"219 -43 LINE",
"231 -48 LINE SMOOTH",
"284 -65 OFFCURVE",
"391 -55 OFFCURVE",
"492 -11 OFFCURVE",
"584 60 OFFCURVE",
"660 146 OFFCURVE",
"717 243 OFFCURVE",
"732 290 QCURVE SMOOTH",
"741 319 OFFCURVE",
"753 371 OFFCURVE",
"755 397 QCURVE",
"803 427 OFFCURVE",
"876 503 OFFCURVE",
"904 547 QCURVE SMOOTH",
"910 556 OFFCURVE",
"908 566 OFFCURVE",
"901 568 OFFCURVE",
"892 563 OFFCURVE",
"889 558 QCURVE SMOOTH",
"870 521 OFFCURVE",
"800 459 OFFCURVE",
"759 432 QCURVE",
"763 529 OFFCURVE",
"698 663 OFFCURVE",
"642 705 QCURVE",
"693 795 LINE",
"659 811 LINE",
"611 726 LINE",
"557 757 OFFCURVE",
"428 778 OFFCURVE",
"299 764 OFFCURVE",
"180 714 OFFCURVE",
"92 634 OFFCURVE",
"44 524 OFFCURVE",
"51 457 QCURVE SMOOTH",
"55 415 OFFCURVE",
"96 353 OFFCURVE",
"128 331 QCURVE",
"106 274 OFFCURVE",
"95 166 OFFCURVE",
"113 71 OFFCURVE",
"156 -4 OFFCURVE",
"188 -26 QCURVE",
"145 -104 LINE",
"145 -104 LINE"
);
},
{
closed = 1;
nodes = (
"207 361 OFFCURVE",
"246 428 OFFCURVE",
"297 498 OFFCURVE",
"358 564 OFFCURVE",
"423 612 OFFCURVE",
"490 634 OFFCURVE",
"521 624 QCURVE SMOOTH",
"531 621 OFFCURVE",
"540 632 OFFCURVE",
"529 638 QCURVE SMOOTH",
"491 659 OFFCURVE",
"413 652 OFFCURVE",
"337 613 OFFCURVE",
"266 548 OFFCURVE",
"206 475 OFFCURVE",
"160 401 OFFCURVE",
"146 372 QCURVE",
"112 401 OFFCURVE",
"106 448 QCURVE SMOOTH",
"96 512 OFFCURVE",
"137 619 OFFCURVE",
"215 698 OFFCURVE",
"322 747 OFFCURVE",
"438 760 OFFCURVE",
"551 734 OFFCURVE",
"596 699 QCURVE",
"377 309 LINE",
"324 307 OFFCURVE",
"232 321 OFFCURVE",
"197 338 QCURVE",
"197 338 LINE"
);
},
{
closed = 1;
nodes = (
"690 348 OFFCURVE",
"680 311 OFFCURVE",
"674 294 QCURVE SMOOTH",
"657 245 OFFCURVE",
"602 149 OFFCURVE",
"534 66 OFFCURVE",
"454 1 OFFCURVE",
"367 -35 OFFCURVE",
"278 -37 OFFCURVE",
"234 -16 QCURVE",
"401 279 LINE",
"474 285 OFFCURVE",
"624 329 OFFCURVE",
"692 365 QCURVE",
"692 365 LINE"
);
},
{
closed = 1;
nodes = (
"634 365 OFFCURVE",
"490 321 OFFCURVE",
"420 313 QCURVE",
"624 673 LINE",
"665 630 OFFCURVE",
"706 496 OFFCURVE",
"698 400 QCURVE",
"698 400 LINE"
);
},
{
closed = 1;
nodes = (
"219 288 OFFCURVE",
"308 274 OFFCURVE",
"358 276 QCURVE",
"205 3 LINE",
"179 26 OFFCURVE",
"154 94 OFFCURVE",
"150 174 OFFCURVE",
"166 261 OFFCURVE",
"182 303 QCURVE",
"182 303 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
49 2 103 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
103 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 771;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = z.alt.caron;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"270 -7 OFFCURVE",
"322 29 OFFCURVE",
"367 90 OFFCURVE",
"407 169 OFFCURVE",
"424 210 QCURVE SMOOTH",
"430 224 OFFCURVE",
"413 225 OFFCURVE",
"410 218 QCURVE SMOOTH",
"401 200 OFFCURVE",
"372 142 OFFCURVE",
"336 83 OFFCURVE",
"294 37 OFFCURVE",
"271 31 QCURVE SMOOTH",
"260 28 OFFCURVE",
"228 30 OFFCURVE",
"194 36 OFFCURVE",
"162 45 OFFCURVE",
"150 49 QCURVE",
"173 70 OFFCURVE",
"221 139 OFFCURVE",
"271 211 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"106 239 OFFCURVE",
"143 276 OFFCURVE",
"181 289 OFFCURVE",
"205 289 QCURVE SMOOTH",
"225 289 OFFCURVE",
"271 280 OFFCURVE",
"289 275 QCURVE",
"269 254 OFFCURVE",
"222 189 OFFCURVE",
"174 123 OFFCURVE",
"128 69 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE",
"242 -6 LINE"
);
},
{
closed = 1;
nodes = (
"219 418 LINE SMOOTH",
"220 415 OFFCURVE",
"234 414 OFFCURVE",
"243 415 QCURVE SMOOTH",
"253 416 OFFCURVE",
"266 418 QCURVE",
"449 548 LINE",
"452 551 OFFCURVE",
"447 554 OFFCURVE",
"436 555 OFFCURVE",
"422 552 OFFCURVE",
"418 548 QCURVE",
"412 544 OFFCURVE",
"360 517 OFFCURVE",
"331 501 QCURVE SMOOTH",
"297 483 OFFCURVE",
"256 461 QCURVE",
"200 548 LINE SMOOTH",
"198 551 OFFCURVE",
"189 555 OFFCURVE",
"180 555 OFFCURVE",
"173 552 OFFCURVE",
"175 548 QCURVE",
"175 548 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
44 24 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = z.alt.caron;
},
{
glyphname = robbie;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"55 214 OFFCURVE",
"54 214 QCURVE",
"50 218 OFFCURVE",
"48 224 QCURVE SMOOTH",
"47 227 OFFCURVE",
"47 236 QCURVE",
"45 236 LINE",
"45 244 LINE",
"41 244 LINE",
"41 250 OFFCURVE",
"39 250 QCURVE",
"39 252 OFFCURVE",
"34 257 QCURVE",
"28 257 LINE",
"28 255 LINE",
"25 255 LINE",
"25 246 OFFCURVE",
"26 243 QCURVE SMOOTH",
"27 240 OFFCURVE",
"27 234 QCURVE",
"28 232 OFFCURVE",
"28 229 QCURVE",
"34 229 LINE",
"32 227 OFFCURVE",
"32 220 QCURVE",
"34 220 LINE",
"39 213 OFFCURVE",
"42 212 QCURVE",
"45 210 OFFCURVE",
"45 205 QCURVE",
"54 205 LINE",
"55 208 OFFCURVE",
"55 213 QCURVE",
"55 213 LINE"
);
},
{
closed = 1;
nodes = (
"78 236 LINE",
"71 236 LINE",
"68 242 LINE",
"66 244 OFFCURVE",
"62 244 QCURVE",
"62 237 LINE",
"63 235 OFFCURVE",
"65 231 OFFCURVE",
"67 229 QCURVE",
"68 230 OFFCURVE",
"69 230 OFFCURVE",
"70 231 QCURVE",
"71 231 OFFCURVE",
"71 232 QCURVE",
"73 233 OFFCURVE",
"78 233 QCURVE",
"78 233 LINE"
);
},
{
closed = 1;
nodes = (
"358 45 OFFCURVE",
"350 51 QCURVE",
"350 53 LINE",
"348 53 LINE",
"349 54 OFFCURVE",
"346 57 QCURVE SMOOTH",
"345 58 OFFCURVE",
"344 58 OFFCURVE",
"343 59 QCURVE",
"340 59 LINE",
"339 58 OFFCURVE",
"338 58 QCURVE",
"337 57 LINE",
"328 57 LINE",
"326 53 LINE",
"311 53 LINE",
"311 57 LINE",
"306 57 LINE SMOOTH",
"299 58 OFFCURVE",
"299 56 QCURVE SMOOTH",
"299 53 OFFCURVE",
"297 53 QCURVE SMOOTH",
"291 53 LINE",
"290 53 LINE SMOOTH",
"289 53 OFFCURVE",
"289 51 QCURVE",
"279 51 LINE SMOOTH",
"274 51 OFFCURVE",
"274 53 QCURVE",
"264 53 OFFCURVE",
"260 51 QCURVE",
"260 42 LINE",
"259 38 OFFCURVE",
"263 38 QCURVE",
"263 35 LINE",
"264 34 OFFCURVE",
"267 34 QCURVE SMOOTH",
"268 34 OFFCURVE",
"268 33 QCURVE",
"269 33 LINE",
"280 33 LINE",
"280 29 OFFCURVE",
"282 27 QCURVE",
"282 29 OFFCURVE",
"289 29 QCURVE",
"289 27 OFFCURVE",
"291 27 QCURVE",
"293 24 OFFCURVE",
"298 22 QCURVE SMOOTH",
"301 20 OFFCURVE",
"304 16 QCURVE",
"310 20 OFFCURVE",
"312 20 QCURVE",
"313 22 OFFCURVE",
"319 20 QCURVE",
"319 27 LINE",
"324 27 OFFCURVE",
"325 28 QCURVE",
"326 28 OFFCURVE",
"326 29 QCURVE",
"328 29 OFFCURVE",
"328 27 QCURVE",
"332 28 OFFCURVE",
"332 33 QCURVE",
"348 33 LINE",
"348 35 LINE",
"356 35 LINE",
"357 35 LINE",
"357 36 LINE",
"357 36 OFFCURVE",
"358 38 QCURVE",
"358 38 LINE"
);
},
{
closed = 1;
nodes = (
"56 290 OFFCURVE",
"55 293 QCURVE SMOOTH",
"54 296 OFFCURVE",
"54 307 QCURVE",
"51 307 LINE",
"52 308 OFFCURVE",
"47 310 QCURVE",
"47 316 LINE",
"45 316 LINE",
"45 323 LINE",
"41 323 LINE",
"41 336 LINE",
"32 336 LINE",
"32 320 LINE",
"34 320 LINE",
"34 314 LINE",
"41 314 LINE",
"40 312 OFFCURVE",
"40 308 QCURVE",
"39 306 OFFCURVE",
"39 301 QCURVE",
"45 301 LINE",
"45 289 OFFCURVE",
"34 286 QCURVE",
"34 280 OFFCURVE",
"37 280 QCURVE",
"38 278 OFFCURVE",
"40 275 OFFCURVE",
"41 273 QCURVE",
"47 273 LINE",
"47 277 LINE",
"51 278 OFFCURVE",
"54 280 OFFCURVE",
"52 280 QCURVE",
"52 282 OFFCURVE",
"56 279 QCURVE",
"56 279 LINE"
);
},
{
closed = 1;
nodes = (
"86 277 LINE",
"86 279 LINE",
"78 279 LINE",
"78 277 OFFCURVE",
"80 277 QCURVE SMOOTH",
"82 277 LINE",
"84 277 LINE",
"84 277 LINE"
);
},
{
closed = 1;
nodes = (
"76 331 OFFCURVE",
"73 331 QCURVE",
"72 332 OFFCURVE",
"70 334 OFFCURVE",
"69 336 QCURVE",
"69 325 LINE",
"71 325 LINE",
"73 327 OFFCURVE",
"76 329 QCURVE",
"76 329 LINE"
);
},
{
closed = 1;
nodes = (
"387 79 OFFCURVE",
"380 85 QCURVE",
"348 85 LINE",
"348 79 LINE",
"344 80 OFFCURVE",
"344 80 QCURVE",
"343 79 OFFCURVE",
"341 81 QCURVE",
"337 81 LINE",
"337 74 LINE",
"340 71 OFFCURVE",
"343 70 QCURVE",
"350 70 LINE SMOOTH",
"356 70 OFFCURVE",
"358 72 QCURVE",
"362 72 OFFCURVE",
"370 72 OFFCURVE",
"374 73 QCURVE SMOOTH",
"380 74 OFFCURVE",
"385 79 QCURVE",
"385 79 LINE"
);
},
{
closed = 1;
nodes = (
"519 65 LINE SMOOTH",
"519 66 OFFCURVE",
"517 70 QCURVE",
"509 75 OFFCURVE",
"509 70 QCURVE",
"503 69 OFFCURVE",
"500 66 QCURVE SMOOTH",
"498 64 OFFCURVE",
"498 61 QCURVE",
"497 60 OFFCURVE",
"497 58 OFFCURVE",
"496 56 QCURVE",
"494 54 OFFCURVE",
"491 53 QCURVE",
"482 53 LINE",
"482 51 LINE",
"476 51 LINE",
"476 49 LINE SMOOTH",
"476 48 OFFCURVE",
"474 48 QCURVE SMOOTH",
"472 48 OFFCURVE",
"472 44 QCURVE",
"467 44 LINE",
"467 38 LINE",
"465 38 LINE",
"465 33 LINE SMOOTH",
"465 29 OFFCURVE",
"463 29 QCURVE",
"462 28 OFFCURVE",
"461 29 QCURVE",
"461 26 OFFCURVE",
"463 24 QCURVE",
"463 22 OFFCURVE",
"461 22 QCURVE",
"461 20 OFFCURVE",
"459 20 QCURVE",
"459 7 LINE",
"456 7 LINE SMOOTH",
"454 7 OFFCURVE",
"454 5 QCURVE",
"459 1 LINE",
"456 0 OFFCURVE",
"450 -6 QCURVE SMOOTH",
"444 -12 OFFCURVE",
"443 -15 QCURVE",
"443 -17 OFFCURVE",
"441 -17 QCURVE SMOOTH",
"439 -17 LINE",
"439 -21 LINE",
"437 -21 LINE",
"437 -23 LINE",
"430 -23 LINE",
"434 -27 OFFCURVE",
"432 -31 QCURVE",
"429 -34 OFFCURVE",
"428 -36 QCURVE",
"428 -39 OFFCURVE",
"430 -39 QCURVE",
"432 -41 OFFCURVE",
"434 -41 QCURVE",
"438 -43 OFFCURVE",
"439 -39 QCURVE",
"443 -36 LINE",
"452 -36 LINE",
"452 -32 LINE",
"459 -32 LINE",
"459 -26 OFFCURVE",
"460 -23 QCURVE SMOOTH",
"461 -21 OFFCURVE",
"459 -17 QCURVE",
"459 -10 OFFCURVE",
"457 -6 QCURVE",
"457 0 OFFCURVE",
"461 1 QCURVE",
"464 4 OFFCURVE",
"466 3 QCURVE SMOOTH",
"467 2 OFFCURVE",
"472 5 QCURVE",
"472 11 LINE",
"474 13 OFFCURVE",
"474 17 QCURVE SMOOTH",
"474 20 OFFCURVE",
"476 22 QCURVE",
"478 22 OFFCURVE",
"480 24 QCURVE SMOOTH",
"481 25 OFFCURVE",
"481 26 OFFCURVE",
"482 27 QCURVE",
"486 28 OFFCURVE",
"492 34 QCURVE SMOOTH",
"496 38 OFFCURVE",
"502 42 QCURVE SMOOTH",
"504 44 OFFCURVE",
"508 44 QCURVE",
"512 46 OFFCURVE",
"513 48 QCURVE",
"513 53 LINE",
"517 53 LINE",
"518 56 OFFCURVE",
"518 56 QCURVE",
"517 57 OFFCURVE",
"519 59 QCURVE",
"519 59 LINE"
);
},
{
closed = 1;
nodes = (
"598 434 LINE",
"598 455 LINE SMOOTH",
"598 464 OFFCURVE",
"598 481 OFFCURVE",
"597 489 QCURVE SMOOTH",
"595 505 OFFCURVE",
"589 514 QCURVE",
"589 516 LINE",
"585 520 LINE",
"578 527 LINE",
"578 549 LINE SMOOTH",
"578 550 OFFCURVE",
"580 552 QCURVE SMOOTH",
"581 553 OFFCURVE",
"583 553 QCURVE",
"583 571 LINE",
"585 571 LINE",
"587 572 OFFCURVE",
"587 581 QCURVE",
"585 585 OFFCURVE",
"584 590 OFFCURVE",
"583 592 QCURVE",
"583 594 OFFCURVE",
"579 598 QCURVE SMOOTH",
"576 601 OFFCURVE",
"576 603 QCURVE",
"574 606 OFFCURVE",
"572 610 QCURVE SMOOTH",
"569 616 LINE",
"569 623 OFFCURVE",
"563 629 QCURVE",
"561 635 OFFCURVE",
"561 637 QCURVE",
"559 641 OFFCURVE",
"556 645 QCURVE",
"555 649 OFFCURVE",
"549 651 QCURVE SMOOTH",
"547 652 OFFCURVE",
"541 654 OFFCURVE",
"539 656 QCURVE",
"536 656 OFFCURVE",
"536 660 QCURVE",
"535 662 OFFCURVE",
"535 666 QCURVE",
"533 667 OFFCURVE",
"528 669 OFFCURVE",
"525 670 QCURVE SMOOTH",
"519 672 OFFCURVE",
"517 677 QCURVE",
"517 690 LINE",
"516 690 OFFCURVE",
"516 691 QCURVE",
"514 693 OFFCURVE",
"513 693 QCURVE",
"507 695 OFFCURVE",
"496 697 QCURVE SMOOTH",
"488 698 OFFCURVE",
"480 703 QCURVE",
"480 706 LINE",
"475 707 OFFCURVE",
"468 712 QCURVE SMOOTH",
"465 714 OFFCURVE",
"458 717 OFFCURVE",
"454 719 QCURVE",
"424 719 LINE",
"421 722 OFFCURVE",
"419 723 QCURVE",
"415 727 LINE SMOOTH",
"414 728 OFFCURVE",
"410 732 OFFCURVE",
"406 735 QCURVE SMOOTH",
"399 740 OFFCURVE",
"395 740 QCURVE SMOOTH",
"391 741 OFFCURVE",
"379 741 QCURVE",
"374 739 OFFCURVE",
"367 738 OFFCURVE",
"365 736 QCURVE",
"362 736 OFFCURVE",
"360 735 QCURVE SMOOTH",
"359 734 OFFCURVE",
"356 734 QCURVE",
"353 732 OFFCURVE",
"348 732 QCURVE",
"347 734 OFFCURVE",
"341 734 QCURVE",
"338 731 OFFCURVE",
"331 731 QCURVE",
"327 730 OFFCURVE",
"321 730 QCURVE SMOOTH",
"319 730 OFFCURVE",
"317 732 QCURVE SMOOTH",
"316 733 OFFCURVE",
"315 735 OFFCURVE",
"313 736 QCURVE",
"311 738 OFFCURVE",
"305 739 OFFCURVE",
"303 740 QCURVE",
"298 741 OFFCURVE",
"297 743 QCURVE",
"285 746 OFFCURVE",
"272 739 QCURVE SMOOTH",
"258 731 OFFCURVE",
"254 727 QCURVE",
"252 726 OFFCURVE",
"248 724 OFFCURVE",
"246 723 QCURVE",
"243 720 OFFCURVE",
"241 719 QCURVE",
"195 719 LINE",
"195 714 LINE",
"192 714 OFFCURVE",
"191 713 QCURVE SMOOTH",
"190 712 OFFCURVE",
"187 712 QCURVE",
"182 709 OFFCURVE",
"182 706 QCURVE",
"179 703 OFFCURVE",
"178 703 QCURVE",
"173 700 OFFCURVE",
"170 700 QCURVE",
"167 698 OFFCURVE",
"167 697 QCURVE",
"165 697 OFFCURVE",
"165 693 QCURVE SMOOTH",
"165 688 LINE",
"163 688 OFFCURVE",
"161 686 QCURVE SMOOTH",
"160 685 OFFCURVE",
"159 685 OFFCURVE",
"158 684 QCURVE",
"158 681 OFFCURVE",
"157 679 QCURVE SMOOTH",
"156 678 OFFCURVE",
"156 675 QCURVE SMOOTH",
"156 671 OFFCURVE",
"153 670 QCURVE",
"150 668 OFFCURVE",
"150 666 QCURVE SMOOTH",
"150 662 LINE",
"145 660 OFFCURVE",
"145 661 QCURVE",
"143 662 OFFCURVE",
"143 660 QCURVE",
"139 658 OFFCURVE",
"133 652 OFFCURVE",
"130 650 QCURVE SMOOTH",
"127 648 OFFCURVE",
"121 642 OFFCURVE",
"119 640 QCURVE",
"119 638 OFFCURVE",
"117 636 QCURVE SMOOTH",
"113 632 LINE",
"108 632 LINE",
"107 632 LINE SMOOTH",
"106 632 OFFCURVE",
"106 629 QCURVE",
"105 627 OFFCURVE",
"103 624 OFFCURVE",
"101 622 QCURVE SMOOTH",
"98 619 OFFCURVE",
"93 619 QCURVE",
"91 617 LINE",
"92 617 OFFCURVE",
"86 619 QCURVE",
"82 619 LINE",
"82 616 LINE",
"72 606 LINE SMOOTH",
"70 604 OFFCURVE",
"64 599 OFFCURVE",
"62 597 QCURVE",
"62 595 LINE",
"57 590 LINE SMOOTH",
"54 588 OFFCURVE",
"54 586 QCURVE SMOOTH",
"54 582 LINE",
"49 580 OFFCURVE",
"49 577 QCURVE",
"47 576 OFFCURVE",
"46 574 OFFCURVE",
"45 573 QCURVE",
"45 542 LINE",
"41 534 OFFCURVE",
"38 530 QCURVE SMOOTH",
"34 525 OFFCURVE",
"34 516 QCURVE SMOOTH",
"34 492 LINE SMOOTH",
"34 473 OFFCURVE",
"38 458 QCURVE SMOOTH",
"40 450 OFFCURVE",
"45 435 OFFCURVE",
"47 427 QCURVE SMOOTH",
"48 420 OFFCURVE",
"47 417 QCURVE",
"45 415 OFFCURVE",
"45 410 QCURVE SMOOTH",
"45 381 LINE",
"53 381 LINE SMOOTH",
"56 381 OFFCURVE",
"60 379 QCURVE",
"60 375 LINE",
"62 373 OFFCURVE",
"65 373 QCURVE",
"67 371 OFFCURVE",
"67 368 QCURVE",
"71 368 LINE",
"71 357 LINE",
"76 357 LINE",
"76 351 LINE",
"82 351 OFFCURVE",
"82 350 QCURVE",
"84 349 OFFCURVE",
"86 344 QCURVE",
"86 342 LINE",
"91 342 LINE",
"91 316 LINE",
"86 316 LINE",
"86 310 LINE",
"82 310 LINE",
"82 307 LINE",
"74 307 LINE",
"75 306 OFFCURVE",
"71 303 QCURVE SMOOTH",
"69 301 OFFCURVE",
"69 302 QCURVE SMOOTH",
"69 303 OFFCURVE",
"67 303 QCURVE",
"67 301 LINE",
"67 294 LINE",
"82 294 LINE",
"82 299 LINE",
"99 299 LINE",
"99 295 OFFCURVE",
"102 295 QCURVE",
"104 293 OFFCURVE",
"104 292 QCURVE",
"106 290 OFFCURVE",
"104 285 QCURVE SMOOTH",
"103 283 OFFCURVE",
"103 278 OFFCURVE",
"102 276 QCURVE SMOOTH",
"101 274 OFFCURVE",
"101 269 OFFCURVE",
"100 267 QCURVE SMOOTH",
"99 264 OFFCURVE",
"99 262 QCURVE",
"97 262 LINE",
"97 249 LINE",
"99 249 LINE",
"103 242 OFFCURVE",
"103 243 QCURVE",
"104 244 OFFCURVE",
"106 242 QCURVE",
"105 241 OFFCURVE",
"105 233 QCURVE SMOOTH",
"105 228 OFFCURVE",
"106 225 QCURVE",
"104 220 OFFCURVE",
"99 220 QCURVE",
"99 214 LINE",
"97 214 LINE",
"97 212 LINE",
"97 209 LINE",
"99 213 OFFCURVE",
"93 207 QCURVE",
"93 199 LINE",
"90 199 OFFCURVE",
"88 201 QCURVE",
"85 201 OFFCURVE",
"84 199 QCURVE",
"82 199 LINE",
"82 205 LINE",
"81 205 OFFCURVE",
"80 206 QCURVE",
"79 206 LINE",
"78 203 OFFCURVE",
"76 207 QCURVE",
"71 207 LINE",
"71 203 OFFCURVE",
"70 203 QCURVE",
"69 201 OFFCURVE",
"69 196 QCURVE",
"62 196 LINE",
"62 181 LINE",
"67 181 LINE",
"69 183 LINE",
"69 186 OFFCURVE",
"72 185 QCURVE SMOOTH",
"76 183 LINE",
"76 183 OFFCURVE",
"82 181 QCURVE",
"82 170 LINE",
"84 170 LINE",
"84 162 LINE",
"82 162 LINE",
"82 140 LINE SMOOTH",
"82 134 OFFCURVE",
"83 132 QCURVE SMOOTH",
"84 131 OFFCURVE",
"86 125 QCURVE",
"86 109 LINE",
"88 102 OFFCURVE",
"92 88 OFFCURVE",
"94 81 QCURVE SMOOTH",
"97 67 OFFCURVE",
"97 48 QCURVE SMOOTH",
"97 27 LINE",
"95 25 OFFCURVE",
"92 19 OFFCURVE",
"90 16 QCURVE SMOOTH",
"86 10 OFFCURVE",
"84 5 QCURVE SMOOTH",
"82 -1 OFFCURVE",
"82 -6 QCURVE",
"80 -12 OFFCURVE",
"78 -15 QCURVE",
"78 -54 LINE",
"80 -57 OFFCURVE",
"88 -61 QCURVE",
"94 -66 OFFCURVE",
"97 -67 QCURVE",
"97 -73 LINE SMOOTH",
"97 -76 OFFCURVE",
"99 -80 QCURVE",
"104 -83 OFFCURVE",
"104 -87 QCURVE",
"106 -89 OFFCURVE",
"108 -95 QCURVE",
"134 -95 LINE",
"134 -97 LINE",
"136 -99 OFFCURVE",
"140 -102 OFFCURVE",
"142 -104 QCURVE SMOOTH",
"144 -106 OFFCURVE",
"150 -110 QCURVE",
"150 -113 LINE",
"152 -113 LINE",
"152 -117 LINE",
"158 -121 OFFCURVE",
"161 -124 QCURVE SMOOTH",
"165 -127 OFFCURVE",
"167 -132 QCURVE",
"167 -150 LINE",
"171 -150 LINE",
"171 -154 LINE",
"175 -154 OFFCURVE",
"185 -154 OFFCURVE",
"191 -152 QCURVE",
"204 -152 OFFCURVE",
"208 -156 QCURVE",
"208 -161 OFFCURVE",
"209 -162 QCURVE",
"209 -164 OFFCURVE",
"210 -165 QCURVE",
"210 -171 LINE",
"208 -177 OFFCURVE",
"209 -180 QCURVE SMOOTH",
"210 -185 OFFCURVE",
"208 -187 QCURVE",
"208 -191 LINE",
"297 -191 LINE",
"297 -180 LINE",
"300 -180 LINE",
"300 -178 LINE",
"306 -178 LINE",
"306 -176 LINE",
"312 -176 LINE",
"313 -175 OFFCURVE",
"315 -173 OFFCURVE",
"317 -171 QCURVE",
"315 -170 OFFCURVE",
"315 -166 QCURVE",
"318 -163 OFFCURVE",
"319 -163 QCURVE",
"321 -161 OFFCURVE",
"324 -161 QCURVE",
"325 -160 OFFCURVE",
"328 -160 QCURVE",
"330 -158 OFFCURVE",
"330 -158 QCURVE",
"328 -159 OFFCURVE",
"328 -156 QCURVE",
"337 -156 OFFCURVE",
"341 -154 QCURVE",
"348 -147 LINE",
"349 -145 OFFCURVE",
"351 -143 OFFCURVE",
"352 -141 QCURVE SMOOTH",
"354 -137 OFFCURVE",
"354 -134 QCURVE",
"356 -134 LINE",
"356 -129 OFFCURVE",
"357 -129 QCURVE",
"358 -128 OFFCURVE",
"358 -126 QCURVE",
"362 -122 OFFCURVE",
"362 -124 QCURVE",
"364 -126 OFFCURVE",
"365 -126 QCURVE",
"365 -119 LINE",
"369 -119 LINE",
"369 -117 LINE SMOOTH",
"369 -118 OFFCURVE",
"370 -117 QCURVE",
"370 -116 LINE",
"370 -115 LINE",
"371 -114 OFFCURVE",
"371 -113 QCURVE SMOOTH",
"371 -110 LINE",
"376 -110 LINE",
"378 -106 OFFCURVE",
"379 -106 QCURVE",
"380 -104 OFFCURVE",
"380 -102 QCURVE",
"385 -102 LINE SMOOTH",
"386 -102 OFFCURVE",
"386 -100 QCURVE SMOOTH",
"386 -98 OFFCURVE",
"385 -97 QCURVE",
"388 -97 OFFCURVE",
"390 -96 QCURVE SMOOTH",
"392 -95 OFFCURVE",
"395 -95 QCURVE",
"395 -93 OFFCURVE",
"396 -92 QCURVE SMOOTH",
"397 -91 OFFCURVE",
"397 -90 QCURVE",
"398 -89 OFFCURVE",
"400 -89 QCURVE",
"400 -85 OFFCURVE",
"405 -82 QCURVE",
"411 -80 OFFCURVE",
"413 -80 QCURVE",
"413 -75 OFFCURVE",
"411 -75 QCURVE",
"411 -74 OFFCURVE",
"412 -74 QCURVE SMOOTH",
"413 -74 OFFCURVE",
"415 -73 QCURVE",
"415 -67 OFFCURVE",
"413 -67 QCURVE",
"413 -65 OFFCURVE",
"408 -60 QCURVE",
"401 -60 OFFCURVE",
"404 -63 QCURVE",
"404 -66 OFFCURVE",
"400 -67 QCURVE",
"376 -67 LINE",
"373 -66 OFFCURVE",
"371 -62 QCURVE",
"368 -59 OFFCURVE",
"365 -58 QCURVE",
"365 -54 LINE",
"364 -54 LINE",
"365 -55 OFFCURVE",
"363 -58 QCURVE",
"361 -56 LINE",
"359 -54 LINE SMOOTH",
"358 -53 OFFCURVE",
"358 -52 QCURVE",
"334 -52 LINE",
"319 -52 LINE",
"317 -47 LINE",
"313 -47 LINE",
"313 -46 LINE",
"313 -46 OFFCURVE",
"311 -45 QCURVE",
"306 -45 LINE",
"306 -43 LINE",
"304 -40 OFFCURVE",
"299 -43 QCURVE",
"293 -45 OFFCURVE",
"291 -45 QCURVE",
"285 -43 OFFCURVE",
"282 -43 QCURVE SMOOTH",
"274 -43 LINE",
"274 -39 LINE",
"269 -37 OFFCURVE",
"266 -40 QCURVE SMOOTH",
"263 -42 OFFCURVE",
"263 -39 QCURVE",
"247 -25 LINE",
"247 -23 LINE",
"244 -26 OFFCURVE",
"243 -21 QCURVE SMOOTH",
"242 -17 OFFCURVE",
"239 -17 QCURVE",
"239 -5 LINE SMOOTH",
"239 1 OFFCURVE",
"241 5 QCURVE",
"241 8 OFFCURVE",
"240 11 QCURVE SMOOTH",
"238 15 OFFCURVE",
"237 16 QCURVE",
"232 16 OFFCURVE",
"230 14 QCURVE",
"221 14 LINE SMOOTH",
"217 14 OFFCURVE",
"217 15 QCURVE",
"216 15 OFFCURVE",
"217 16 QCURVE",
"215 16 LINE",
"215 19 OFFCURVE",
"212 21 QCURVE SMOOTH",
"210 23 OFFCURVE",
"210 27 QCURVE",
"215 27 LINE",
"215 57 LINE",
"215 75 LINE",
"210 79 LINE",
"215 84 OFFCURVE",
"215 85 QCURVE",
"217 86 OFFCURVE",
"217 88 QCURVE SMOOTH",
"217 90 LINE",
"223 90 LINE",
"223 94 LINE",
"231 94 OFFCURVE",
"232 90 QCURVE",
"236 93 OFFCURVE",
"236 95 QCURVE",
"237 96 OFFCURVE",
"239 101 QCURVE",
"239 107 LINE",
"243 107 LINE SMOOTH",
"241 107 OFFCURVE",
"245 109 QCURVE",
"245 112 LINE",
"259 112 OFFCURVE",
"265 106 QCURVE SMOOTH",
"272 99 OFFCURVE",
"276 90 QCURVE",
"278 89 OFFCURVE",
"285 89 QCURVE",
"289 88 OFFCURVE",
"298 88 QCURVE SMOOTH",
"310 88 LINE",
"317 90 OFFCURVE",
"317 90 QCURVE",
"317 94 LINE",
"313 96 LINE",
"289 96 LINE",
"289 99 OFFCURVE",
"286 104 QCURVE SMOOTH",
"285 106 OFFCURVE",
"282 109 QCURVE",
"282 125 LINE SMOOTH",
"282 126 OFFCURVE",
"285 128 QCURVE",
"288 128 OFFCURVE",
"289 129 QCURVE",
"289 131 LINE",
"306 131 LINE",
"306 129 LINE",
"313 129 LINE",
"317 123 LINE SMOOTH",
"319 120 OFFCURVE",
"321 116 QCURVE",
"356 116 LINE",
"356 117 LINE",
"356 117 OFFCURVE",
"358 118 QCURVE",
"358 119 OFFCURVE",
"363 119 QCURVE",
"365 118 OFFCURVE",
"369 118 QCURVE SMOOTH",
"371 118 OFFCURVE",
"371 121 QCURVE",
"372 123 OFFCURVE",
"376 122 QCURVE",
"378 118 LINE",
"385 118 LINE SMOOTH",
"386 118 OFFCURVE",
"387 117 QCURVE",
"387 116 LINE",
"400 116 LINE",
"400 112 LINE",
"408 112 LINE",
"408 109 LINE",
"415 109 LINE",
"415 107 LINE",
"428 107 LINE",
"428 101 LINE SMOOTH",
"428 103 OFFCURVE",
"432 103 QCURVE SMOOTH",
"437 103 LINE",
"437 101 OFFCURVE",
"438 101 QCURVE SMOOTH",
"439 101 LINE",
"442 98 OFFCURVE",
"448 98 QCURVE",
"452 101 OFFCURVE",
"454 96 QCURVE",
"459 94 OFFCURVE",
"459 90 QCURVE",
"462 90 OFFCURVE",
"464 92 QCURVE",
"469 92 OFFCURVE",
"472 90 QCURVE",
"473 92 OFFCURVE",
"473 92 QCURVE",
"472 91 OFFCURVE",
"474 96 QCURVE",
"479 96 OFFCURVE",
"478 97 QCURVE SMOOTH",
"477 98 OFFCURVE",
"480 103 QCURVE",
"482 101 LINE",
"482 109 LINE",
"487 109 LINE",
"487 110 OFFCURVE",
"486 112 QCURVE",
"487 112 OFFCURVE",
"484 115 QCURVE SMOOTH",
"483 116 OFFCURVE",
"483 117 OFFCURVE",
"482 118 QCURVE",
"487 121 OFFCURVE",
"487 122 QCURVE",
"489 123 OFFCURVE",
"489 125 QCURVE",
"491 125 LINE SMOOTH",
"495 125 OFFCURVE",
"495 129 QCURVE",
"509 129 LINE",
"509 125 LINE",
"513 125 LINE",
"513 124 OFFCURVE",
"515 122 QCURVE SMOOTH",
"517 120 OFFCURVE",
"517 118 QCURVE",
"529 118 LINE",
"540 120 OFFCURVE",
"541 122 QCURVE",
"543 124 LINE SMOOTH",
"546 127 OFFCURVE",
"546 129 QCURVE",
"548 133 OFFCURVE",
"547 136 QCURVE SMOOTH",
"546 138 OFFCURVE",
"546 144 QCURVE",
"511 144 LINE",
"511 151 OFFCURVE",
"507 151 QCURVE SMOOTH",
"504 151 OFFCURVE",
"504 159 QCURVE",
"496 159 OFFCURVE",
"496 163 QCURVE",
"494 165 OFFCURVE",
"493 167 OFFCURVE",
"491 168 QCURVE",
"489 168 OFFCURVE",
"489 170 QCURVE",
"482 175 LINE",
"482 176 OFFCURVE",
"481 177 QCURVE",
"480 177 LINE",
"480 181 LINE",
"476 183 OFFCURVE",
"476 182 QCURVE",
"474 181 OFFCURVE",
"474 183 QCURVE",
"472 183 OFFCURVE",
"472 187 QCURVE SMOOTH",
"472 189 OFFCURVE",
"470 191 OFFCURVE",
"470 192 QCURVE",
"465 195 OFFCURVE",
"466 195 QCURVE",
"465 196 OFFCURVE",
"461 196 QCURVE",
"461 199 LINE SMOOTH",
"461 202 OFFCURVE",
"458 203 OFFCURVE",
"454 205 QCURVE",
"452 213 OFFCURVE",
"443 218 QCURVE",
"443 220 OFFCURVE",
"440 217 QCURVE SMOOTH",
"437 214 OFFCURVE",
"435 214 QCURVE",
"435 199 LINE",
"439 196 LINE",
"439 192 LINE",
"441 190 OFFCURVE",
"445 187 OFFCURVE",
"445 181 QCURVE",
"450 181 LINE",
"450 131 LINE",
"445 129 OFFCURVE",
"445 125 QCURVE",
"422 125 LINE",
"422 122 LINE",
"415 122 OFFCURVE",
"411 123 QCURVE SMOOTH",
"406 124 OFFCURVE",
"400 122 QCURVE",
"393 122 LINE",
"391 125 LINE",
"386 128 OFFCURVE",
"385 125 QCURVE",
"383 122 OFFCURVE",
"380 122 QCURVE SMOOTH",
"369 122 LINE",
"367 123 OFFCURVE",
"364 125 OFFCURVE",
"362 127 QCURVE",
"358 128 OFFCURVE",
"358 131 QCURVE SMOOTH",
"358 138 LINE",
"368 138 OFFCURVE",
"371 141 QCURVE",
"375 143 OFFCURVE",
"385 140 QCURVE",
"386 142 OFFCURVE",
"386 142 QCURVE",
"385 141 OFFCURVE",
"385 144 QCURVE",
"391 144 LINE",
"395 154 OFFCURVE",
"395 153 QCURVE",
"399 155 OFFCURVE",
"408 155 QCURVE",
"409 156 LINE",
"410 156 LINE",
"411 157 OFFCURVE",
"413 155 QCURVE",
"415 159 OFFCURVE",
"415 159 QCURVE",
"414 160 OFFCURVE",
"417 162 QCURVE",
"417 175 LINE",
"415 175 LINE",
"415 177 LINE",
"413 177 LINE",
"413 181 LINE",
"407 181 OFFCURVE",
"401 179 QCURVE SMOOTH",
"397 177 OFFCURVE",
"393 177 QCURVE SMOOTH",
"371 177 LINE",
"363 177 LINE",
"358 181 LINE",
"354 181 LINE",
"354 183 LINE",
"348 183 LINE",
"348 188 LINE",
"343 188 LINE",
"343 190 LINE",
"334 190 LINE",
"334 192 LINE",
"332 192 LINE",
"326 192 LINE",
"321 190 LINE",
"300 190 LINE",
"297 192 LINE",
"295 192 LINE",
"295 211 LINE SMOOTH",
"296 221 OFFCURVE",
"291 227 QCURVE",
"288 227 OFFCURVE",
"286 226 QCURVE",
"284 224 OFFCURVE",
"284 227 QCURVE",
"281 225 OFFCURVE",
"281 226 QCURVE",
"282 227 OFFCURVE",
"282 225 QCURVE",
"271 220 OFFCURVE",
"270 216 QCURVE SMOOTH",
"269 213 OFFCURVE",
"263 207 QCURVE",
"258 207 LINE",
"258 205 LINE",
"252 205 LINE",
"247 203 LINE",
"241 204 OFFCURVE",
"226 199 QCURVE SMOOTH",
"212 194 OFFCURVE",
"202 199 QCURVE",
"201 199 OFFCURVE",
"197 201 QCURVE",
"193 205 LINE",
"189 205 LINE",
"188 204 OFFCURVE",
"185 204 QCURVE",
"183 203 OFFCURVE",
"180 203 QCURVE SMOOTH",
"177 203 OFFCURVE",
"175 204 QCURVE SMOOTH",
"174 205 OFFCURVE",
"171 205 QCURVE SMOOTH",
"167 205 LINE",
"166 206 OFFCURVE",
"164 210 QCURVE",
"161 213 OFFCURVE",
"158 214 QCURVE",
"158 216 OFFCURVE",
"156 226 QCURVE SMOOTH",
"155 230 OFFCURVE",
"153 237 OFFCURVE",
"152 241 QCURVE SMOOTH",
"151 245 OFFCURVE",
"150 251 OFFCURVE",
"150 255 QCURVE SMOOTH",
"149 261 OFFCURVE",
"152 264 QCURVE",
"151 264 OFFCURVE",
"152 265 QCURVE",
"153 265 LINE",
"154 265 LINE",
"155 266 OFFCURVE",
"156 266 QCURVE SMOOTH",
"167 266 OFFCURVE",
"171 270 QCURVE",
"173 278 OFFCURVE",
"171 281 QCURVE SMOOTH",
"169 283 OFFCURVE",
"167 283 QCURVE",
"166 284 OFFCURVE",
"162 284 QCURVE",
"158 286 OFFCURVE",
"156 288 QCURVE",
"152 288 LINE",
"151 290 OFFCURVE",
"151 290 QCURVE",
"152 288 OFFCURVE",
"150 288 QCURVE",
"150 291 OFFCURVE",
"147 293 QCURVE SMOOTH",
"145 295 OFFCURVE",
"145 299 QCURVE SMOOTH",
"145 307 OFFCURVE",
"149 310 QCURVE",
"153 311 OFFCURVE",
"158 320 QCURVE",
"166 320 OFFCURVE",
"166 319 QCURVE",
"168 318 OFFCURVE",
"173 323 QCURVE",
"187 323 LINE",
"189 321 OFFCURVE",
"192 315 QCURVE SMOOTH",
"195 309 OFFCURVE",
"195 307 QCURVE",
"215 307 LINE",
"217 303 OFFCURVE",
"216 303 QCURVE",
"215 301 OFFCURVE",
"217 299 QCURVE",
"221 299 LINE",
"221 296 LINE SMOOTH",
"221 294 OFFCURVE",
"223 292 QCURVE",
"226 292 LINE",
"227 291 OFFCURVE",
"228 291 QCURVE",
"230 289 OFFCURVE",
"230 288 QCURVE",
"245 288 LINE SMOOTH",
"247 288 OFFCURVE",
"247 286 QCURVE",
"252 286 LINE",
"252 285 OFFCURVE",
"253 284 QCURVE",
"253 282 LINE",
"254 281 OFFCURVE",
"254 279 QCURVE",
"260 279 LINE",
"260 277 LINE",
"280 277 LINE",
"280 279 LINE",
"284 283 OFFCURVE",
"286 284 QCURVE SMOOTH",
"288 285 OFFCURVE",
"291 288 QCURVE",
"334 288 LINE SMOOTH",
"339 288 OFFCURVE",
"345 290 QCURVE SMOOTH",
"349 292 OFFCURVE",
"349 296 QCURVE",
"351 299 OFFCURVE",
"351 305 QCURVE",
"354 314 LINE",
"356 310 OFFCURVE",
"361 317 QCURVE SMOOTH",
"365 322 OFFCURVE",
"365 325 QCURVE SMOOTH",
"364 334 OFFCURVE",
"354 345 QCURVE SMOOTH",
"350 350 OFFCURVE",
"343 358 OFFCURVE",
"341 362 QCURVE",
"334 362 LINE",
"329 366 LINE",
"295 370 OFFCURVE",
"237 366 QCURVE",
"237 365 OFFCURVE",
"224 365 OFFCURVE",
"222 363 QCURVE",
"222 362 LINE",
"221 361 OFFCURVE",
"221 362 QCURVE",
"204 362 LINE",
"204 367 OFFCURVE",
"203 367 QCURVE",
"202 366 OFFCURVE",
"202 368 QCURVE SMOOTH",
"202 397 LINE",
"204 397 LINE",
"204 399 LINE",
"210 399 LINE",
"210 402 OFFCURVE",
"213 402 QCURVE",
"214 403 OFFCURVE",
"216 404 OFFCURVE",
"217 405 QCURVE SMOOTH",
"220 409 OFFCURVE",
"218 414 QCURVE SMOOTH",
"216 419 OFFCURVE",
"221 421 QCURVE",
"221 424 OFFCURVE",
"218 432 QCURVE SMOOTH",
"215 439 OFFCURVE",
"215 442 QCURVE",
"210 442 LINE",
"210 447 LINE",
"210 453 LINE",
"209 453 LINE SMOOTH",
"208 453 OFFCURVE",
"208 455 QCURVE SMOOTH",
"208 471 LINE",
"204 471 LINE",
"204 477 LINE",
"194 477 OFFCURVE",
"196 476 QCURVE SMOOTH",
"197 475 OFFCURVE",
"193 468 QCURVE",
"189 464 LINE",
"189 458 LINE SMOOTH",
"189 456 OFFCURVE",
"188 456 QCURVE",
"187 455 OFFCURVE",
"187 453 QCURVE",
"181 453 OFFCURVE",
"180 449 QCURVE",
"168 449 OFFCURVE",
"167 452 QCURVE",
"165 453 OFFCURVE",
"158 458 QCURVE",
"158 464 LINE",
"158 464 OFFCURVE",
"156 468 QCURVE",
"156 490 LINE",
"158 490 LINE SMOOTH",
"162 491 OFFCURVE",
"159 495 QCURVE SMOOTH",
"156 498 OFFCURVE",
"156 501 QCURVE",
"154 501 LINE SMOOTH",
"152 501 OFFCURVE",
"152 499 QCURVE",
"143 508 LINE",
"141 511 OFFCURVE",
"142 512 QCURVE SMOOTH",
"143 513 OFFCURVE",
"143 516 QCURVE",
"145 516 OFFCURVE",
"148 519 QCURVE SMOOTH",
"150 521 OFFCURVE",
"152 521 QCURVE SMOOTH",
"155 521 OFFCURVE",
"155 518 QCURVE",
"157 516 OFFCURVE",
"158 516 QCURVE SMOOTH",
"160 516 OFFCURVE",
"168 518 QCURVE",
"172 520 OFFCURVE",
"173 521 QCURVE",
"173 519 OFFCURVE",
"174 518 QCURVE SMOOTH",
"176 516 OFFCURVE",
"178 516 QCURVE",
"180 521 LINE",
"181 522 OFFCURVE",
"185 522 QCURVE",
"187 518 OFFCURVE",
"187 516 QCURVE",
"188 517 OFFCURVE",
"190 518 OFFCURVE",
"191 519 QCURVE SMOOTH",
"192 520 LINE",
"195 523 LINE",
"202 527 OFFCURVE",
"199 529 QCURVE SMOOTH",
"197 530 OFFCURVE",
"202 538 QCURVE",
"202 542 OFFCURVE",
"204 542 QCURVE",
"204 543 OFFCURVE",
"208 549 QCURVE",
"239 549 LINE",
"239 551 LINE",
"245 551 LINE",
"245 553 LINE",
"252 557 OFFCURVE",
"256 561 QCURVE SMOOTH",
"260 564 OFFCURVE",
"267 564 QCURVE",
"267 571 LINE",
"269 566 OFFCURVE",
"274 566 QCURVE",
"274 571 LINE",
"280 573 OFFCURVE",
"280 577 QCURVE",
"284 581 OFFCURVE",
"289 582 QCURVE",
"297 582 LINE",
"297 577 LINE",
"298 578 OFFCURVE",
"300 573 QCURVE",
"319 573 LINE",
"319 579 LINE",
"321 574 OFFCURVE",
"324 577 QCURVE",
"326 581 OFFCURVE",
"326 582 QCURVE",
"332 582 LINE SMOOTH",
"327 582 OFFCURVE",
"330 585 QCURVE",
"331 588 OFFCURVE",
"334 588 QCURVE",
"342 593 OFFCURVE",
"350 594 QCURVE SMOOTH",
"355 595 OFFCURVE",
"371 595 QCURVE",
"371 590 LINE",
"372 591 OFFCURVE",
"376 588 QCURVE",
"378 588 LINE",
"378 581 OFFCURVE",
"385 575 QCURVE",
"385 572 OFFCURVE",
"382 572 QCURVE",
"380 568 OFFCURVE",
"380 566 QCURVE",
"385 566 LINE",
"385 560 LINE",
"387 560 LINE",
"387 558 LINE",
"400 558 LINE",
"400 553 LINE",
"402 553 LINE SMOOTH",
"406 552 OFFCURVE",
"406 549 QCURVE",
"408 549 LINE",
"408 545 LINE",
"412 545 OFFCURVE",
"421 545 OFFCURVE",
"428 544 QCURVE SMOOTH",
"438 543 OFFCURVE",
"443 545 QCURVE",
"445 545 OFFCURVE",
"445 547 QCURVE SMOOTH",
"445 549 LINE",
"452 549 LINE",
"452 551 LINE",
"459 551 OFFCURVE",
"457 552 QCURVE",
"457 553 OFFCURVE",
"461 553 QCURVE",
"467 556 OFFCURVE",
"472 554 QCURVE",
"474 552 OFFCURVE",
"474 551 QCURVE",
"480 549 OFFCURVE",
"478 551 QCURVE SMOOTH",
"476 553 OFFCURVE",
"480 551 QCURVE",
"482 549 OFFCURVE",
"485 543 QCURVE SMOOTH",
"489 537 OFFCURVE",
"491 536 QCURVE",
"495 536 LINE",
"495 534 LINE",
"509 534 LINE",
"511 529 LINE",
"513 529 OFFCURVE",
"512 528 QCURVE",
"513 529 LINE",
"513 527 OFFCURVE",
"512 528 QCURVE",
"513 527 LINE",
"517 523 LINE SMOOTH",
"519 521 OFFCURVE",
"519 516 QCURVE",
"529 516 LINE",
"534 518 OFFCURVE",
"535 521 QCURVE",
"535 517 OFFCURVE",
"537 515 QCURVE SMOOTH",
"538 514 OFFCURVE",
"539 514 QCURVE",
"539 508 LINE",
"541 508 LINE",
"541 497 LINE",
"546 497 LINE",
"546 490 LINE",
"548 490 LINE",
"548 486 LINE",
"550 486 LINE",
"550 484 LINE",
"556 484 LINE SMOOTH",
"557 484 OFFCURVE",
"560 481 QCURVE SMOOTH",
"561 480 OFFCURVE",
"561 479 QCURVE",
"563 479 LINE",
"563 475 LINE",
"567 475 LINE",
"567 464 LINE SMOOTH",
"567 461 OFFCURVE",
"568 460 QCURVE",
"568 459 OFFCURVE",
"569 458 QCURVE",
"569 425 LINE",
"567 425 LINE",
"567 419 LINE",
"565 417 OFFCURVE",
"563 416 QCURVE",
"563 410 LINE",
"562 411 LINE",
"561 411 OFFCURVE",
"561 410 QCURVE",
"556 405 OFFCURVE",
"556 391 QCURVE SMOOTH",
"556 368 LINE",
"556 266 LINE",
"554 266 LINE SMOOTH",
"552 266 OFFCURVE",
"552 264 QCURVE",
"554 263 OFFCURVE",
"554 257 QCURVE",
"548 257 LINE",
"548 253 LINE SMOOTH",
"548 249 OFFCURVE",
"546 249 QCURVE",
"542 245 OFFCURVE",
"544 245 QCURVE",
"546 243 OFFCURVE",
"546 242 QCURVE",
"544 241 OFFCURVE",
"542 241 QCURVE SMOOTH",
"541 241 OFFCURVE",
"541 240 QCURVE",
"539 239 OFFCURVE",
"539 236 QCURVE",
"540 233 OFFCURVE",
"546 233 QCURVE",
"541 227 LINE",
"546 227 LINE",
"547 226 OFFCURVE",
"547 225 QCURVE",
"546 225 LINE",
"546 223 LINE SMOOTH",
"546 222 OFFCURVE",
"547 222 QCURVE SMOOTH",
"548 222 LINE",
"548 226 OFFCURVE",
"550 220 QCURVE",
"552 223 OFFCURVE",
"552 223 QCURVE",
"550 221 OFFCURVE",
"554 227 QCURVE",
"559 227 LINE SMOOTH",
"561 227 OFFCURVE",
"563 229 QCURVE",
"563 236 LINE SMOOTH",
"563 237 OFFCURVE",
"565 239 QCURVE",
"566 239 OFFCURVE",
"567 240 QCURVE",
"567 244 LINE SMOOTH",
"567 249 OFFCURVE",
"568 249 QCURVE",
"569 251 OFFCURVE",
"569 257 QCURVE",
"572 257 LINE",
"572 272 LINE",
"573 278 OFFCURVE",
"578 286 QCURVE",
"583 286 LINE",
"583 291 OFFCURVE",
"589 299 QCURVE",
"589 301 LINE",
"585 301 LINE",
"585 310 LINE",
"583 310 LINE",
"583 329 LINE",
"583 375 LINE SMOOTH",
"583 378 OFFCURVE",
"584 377 QCURVE SMOOTH",
"585 376 OFFCURVE",
"585 379 QCURVE",
"587 381 OFFCURVE",
"585 386 QCURVE SMOOTH",
"584 388 OFFCURVE",
"584 393 OFFCURVE",
"583 395 QCURVE SMOOTH",
"582 398 OFFCURVE",
"582 404 QCURVE SMOOTH",
"582 408 OFFCURVE",
"585 410 QCURVE",
"585 416 LINE",
"589 416 LINE",
"590 416 LINE",
"590 416 OFFCURVE",
"589 418 QCURVE",
"591 418 OFFCURVE",
"591 419 QCURVE SMOOTH",
"591 421 LINE",
"591 434 LINE",
"591 434 LINE"
);
},
{
closed = 1;
nodes = (
"530 322 LINE",
"528 325 OFFCURVE",
"526 325 QCURVE SMOOTH",
"524 325 LINE",
"524 329 LINE",
"517 329 LINE",
"517 334 LINE",
"515 332 OFFCURVE",
"511 336 QCURVE SMOOTH",
"509 338 OFFCURVE",
"509 342 QCURVE",
"505 342 OFFCURVE",
"499 339 QCURVE SMOOTH",
"495 336 OFFCURVE",
"489 338 QCURVE",
"487 342 LINE",
"480 342 LINE",
"479 343 OFFCURVE",
"479 344 OFFCURVE",
"478 345 QCURVE SMOOTH",
"477 346 OFFCURVE",
"477 347 OFFCURVE",
"476 348 QCURVE SMOOTH",
"475 349 OFFCURVE",
"475 350 OFFCURVE",
"474 351 QCURVE",
"467 351 LINE",
"459 351 LINE",
"459 353 LINE",
"457 355 OFFCURVE",
"454 357 QCURVE",
"443 353 LINE",
"443 351 LINE",
"437 351 LINE",
"430 351 LINE",
"428 348 OFFCURVE",
"429 348 QCURVE",
"430 347 OFFCURVE",
"428 347 QCURVE",
"428 342 LINE",
"425 342 OFFCURVE",
"419 340 QCURVE SMOOTH",
"413 338 OFFCURVE",
"413 338 QCURVE",
"413 336 LINE",
"408 331 LINE",
"406 331 LINE",
"406 329 OFFCURVE",
"407 329 QCURVE",
"408 328 OFFCURVE",
"406 325 QCURVE SMOOTH",
"405 324 LINE SMOOTH",
"404 323 OFFCURVE",
"402 323 QCURVE",
"402 320 LINE SMOOTH",
"402 316 OFFCURVE",
"400 316 QCURVE",
"400 313 OFFCURVE",
"401 310 QCURVE SMOOTH",
"402 307 OFFCURVE",
"400 303 QCURVE",
"408 295 LINE SMOOTH",
"413 290 OFFCURVE",
"406 283 QCURVE",
"407 280 OFFCURVE",
"407 280 QCURVE",
"406 279 OFFCURVE",
"408 279 QCURVE",
"408 277 LINE",
"435 277 LINE SMOOTH",
"437 277 OFFCURVE",
"437 275 QCURVE",
"439 273 OFFCURVE",
"443 273 QCURVE",
"443 267 OFFCURVE",
"447 267 QCURVE",
"449 265 OFFCURVE",
"451 264 OFFCURVE",
"452 262 QCURVE",
"465 262 LINE SMOOTH",
"466 262 OFFCURVE",
"466 263 QCURVE",
"465 264 LINE",
"472 264 LINE",
"472 267 OFFCURVE",
"480 273 QCURVE",
"480 277 LINE",
"482 277 LINE",
"487 279 LINE",
"487 283 LINE",
"489 285 OFFCURVE",
"490 285 QCURVE",
"491 286 OFFCURVE",
"491 288 QCURVE",
"508 288 OFFCURVE",
"513 290 QCURVE",
"519 290 OFFCURVE",
"524 299 QCURVE",
"526 301 OFFCURVE",
"523 301 QCURVE",
"520 303 OFFCURVE",
"524 307 QCURVE",
"526 307 OFFCURVE",
"526 310 QCURVE",
"529 313 OFFCURVE",
"528 313 QCURVE",
"527 314 OFFCURVE",
"530 316 QCURVE",
"530 316 LINE"
);
}
);
width = 652;
}
);
note = robbie;
},
{
glyphname = lozenge;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"286 -14 OFFCURVE",
"297 -4 OFFCURVE",
"301 4 QCURVE SMOOTH",
"310 18 OFFCURVE",
"346 75 OFFCURVE",
"390 146 OFFCURVE",
"436 223 OFFCURVE",
"474 292 OFFCURVE",
"499 343 OFFCURVE",
"499 353 QCURVE SMOOTH",
"499 357 OFFCURVE",
"498 365 OFFCURVE",
"498 369 QCURVE",
"477 407 OFFCURVE",
"432 485 OFFCURVE",
"412 524 QCURVE SMOOTH",
"395 559 OFFCURVE",
"368 630 OFFCURVE",
"354 665 QCURVE",
"349 673 OFFCURVE",
"338 686 OFFCURVE",
"330 686 QCURVE SMOOTH",
"323 686 OFFCURVE",
"284 637 OFFCURVE",
"235 562 OFFCURVE",
"180 471 OFFCURVE",
"135 389 OFFCURVE",
"105 327 OFFCURVE",
"105 317 QCURVE SMOOTH",
"105 306 OFFCURVE",
"109 297 QCURVE SMOOTH",
"141 234 OFFCURVE",
"209 114 OFFCURVE",
"236 48 QCURVE SMOOTH",
"241 37 OFFCURVE",
"248 15 OFFCURVE",
"253 4 QCURVE SMOOTH",
"257 -4 OFFCURVE",
"267 -14 OFFCURVE",
"275 -14 QCURVE",
"275 -14 LINE"
);
},
{
closed = 1;
nodes = (
"345 525 OFFCURVE",
"393 380 OFFCURVE",
"421 308 QCURVE",
"386 248 OFFCURVE",
"318 130 OFFCURVE",
"283 73 QCURVE",
"260 145 OFFCURVE",
"212 290 OFFCURVE",
"186 361 QCURVE",
"218 421 OFFCURVE",
"287 538 OFFCURVE",
"322 598 QCURVE",
"322 598 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
40 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
46 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 575;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = Lcaron;
layers = (
{
components = (
{
name = L;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 759, 349}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 746;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acute;
transform = "{1, 0, 0, 1, 726, 446}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 901;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = Aogonek;
layers = (
{
components = (
{
name = A;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 430, -18}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Aogonek;
unicode = 0104;
},
{
glyphname = commaaccent;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"183 556 OFFCURVE",
"163 582 OFFCURVE",
"143 582 QCURVE SMOOTH",
"128 582 OFFCURVE",
"102 561 OFFCURVE",
"100 545 QCURVE SMOOTH",
"98 530 OFFCURVE",
"115 508 OFFCURVE",
"131 508 QCURVE SMOOTH",
"138 508 OFFCURVE",
"151 513 OFFCURVE",
"156 517 QCURVE",
"153 487 OFFCURVE",
"113 447 OFFCURVE",
"88 439 QCURVE SMOOTH",
"79 437 OFFCURVE",
"81 426 OFFCURVE",
"89 429 QCURVE SMOOTH",
"103 434 OFFCURVE",
"136 453 OFFCURVE",
"164 481 OFFCURVE",
"183 517 OFFCURVE",
"183 539 QCURVE",
"183 539 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 259;
}
);
note = commaaccent;
},
{
glyphname = Scommaaccent;
layers = (
{
components = (
{
name = S;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 177, -733}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 901;
}
);
note = Scommaaccent;
unicode = 0218;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caron;
transform = "{1, 0, 0, 1, 975, 287}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1088;
}
);
note = Tcaron;
unicode = 0164;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 697, 393}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 677;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = Zdotaccent;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 675, 283}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 677;
}
);
note = Zdotaccent;
unicode = 017B;
},
{
glyphname = aogonek;
layers = (
{
components = (
{
name = a;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 96, 29}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = aogonek;
unicode = 0105;
},
{
glyphname = lcaron;
layers = (
{
components = (
{
name = l;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 218, -101}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 370;
}
);
note = lcaron;
unicode = 013E;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acute;
transform = "{1, 0, 0, 1, 108, 43}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 256;
}
);
note = sacute;
unicode = 015B;
},
{
glyphname = scommaaccent;
layers = (
{
components = (
{
name = s;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -87, -627}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 256;
}
);
leftKerningGroup = s;
note = scommaaccent;
unicode = 0219;
},
{
glyphname = tcaron;
layers = (
{
components = (
{
name = t;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 188, -108}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 441;
}
);
note = tcaron;
unicode = 0165;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 341;
}
);
note = zacute;
unicode = 017A;
},
{
glyphname = z.alt.acute;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"270 -7 OFFCURVE",
"322 29 OFFCURVE",
"367 90 OFFCURVE",
"407 169 OFFCURVE",
"424 210 QCURVE SMOOTH",
"430 224 OFFCURVE",
"413 225 OFFCURVE",
"410 218 QCURVE SMOOTH",
"401 200 OFFCURVE",
"372 142 OFFCURVE",
"336 83 OFFCURVE",
"294 37 OFFCURVE",
"271 31 QCURVE SMOOTH",
"260 28 OFFCURVE",
"228 30 OFFCURVE",
"194 36 OFFCURVE",
"162 45 OFFCURVE",
"150 49 QCURVE",
"173 70 OFFCURVE",
"221 139 OFFCURVE",
"271 211 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"106 239 OFFCURVE",
"143 276 OFFCURVE",
"181 289 OFFCURVE",
"205 289 QCURVE SMOOTH",
"225 289 OFFCURVE",
"271 280 OFFCURVE",
"289 275 QCURVE",
"269 254 OFFCURVE",
"222 189 OFFCURVE",
"174 123 OFFCURVE",
"128 69 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE",
"242 -6 LINE"
);
},
{
closed = 1;
nodes = (
"433 510 OFFCURVE",
"428 525 OFFCURVE",
"420 529 QCURVE SMOOTH",
"405 537 OFFCURVE",
"374 526 OFFCURVE",
"362 517 QCURVE SMOOTH",
"356 512 OFFCURVE",
"317 485 OFFCURVE",
"275 455 OFFCURVE",
"240 429 OFFCURVE",
"239 426 QCURVE",
"233 418 OFFCURVE",
"242 413 QCURVE SMOOTH",
"244 412 OFFCURVE",
"272 422 OFFCURVE",
"312 439 OFFCURVE",
"358 461 OFFCURVE",
"399 481 OFFCURVE",
"427 498 OFFCURVE",
"429 502 QCURVE",
"429 502 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
90 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = z.alt.acute;
},
{
glyphname = zdotaccent;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 90, -70}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 341;
}
);
note = zdotaccent;
unicode = 017C;
},
{
glyphname = z.alt_dotaccent;
layers = (
{
components = (
{
name = z.alt;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 136, -70}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 342;
}
);
note = z.alt_dotaccent;
},
{
glyphname = Racute;
layers = (
{
components = (
{
name = R;
},
{
name = acute;
transform = "{1, 0, 0, 1, 813, 427}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1024;
}
);
note = Racute;
unicode = 0154;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 581, 395}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Abreve;
unicode = 0102;
},
{
glyphname = Lacute;
layers = (
{
components = (
{
name = L;
},
{
name = acute;
transform = "{1, 0, 0, 1, 826, 486}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 746;
}
);
note = Lacute;
unicode = 0139;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acute;
transform = "{1, 0, 0, 1, 578, 426}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 710;
}
);
note = Cacute;
unicode = 0106;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 498, 346}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 710;
}
);
note = Ccaron;
unicode = 010C;
},
{
glyphname = Eogonek;
layers = (
{
components = (
{
name = E;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 145, -45}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 876;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 565, 358}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 876;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, 725, 312}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1027;
}
);
note = Dcaron;
unicode = 010E;
},
{
glyphname = Dcroat;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1030 310 OFFCURVE",
"1006 437 OFFCURVE",
"951 546 OFFCURVE",
"869 635 OFFCURVE",
"818 669 QCURVE",
"830 687 OFFCURVE",
"854 721 OFFCURVE",
"865 737 QCURVE SMOOTH",
"867 740 OFFCURVE",
"884 757 OFFCURVE",
"894 764 QCURVE SMOOTH",
"912 775 OFFCURVE",
"908 789 OFFCURVE",
"884 779 QCURVE SMOOTH",
"878 777 OFFCURVE",
"855 763 OFFCURVE",
"829 746 OFFCURVE",
"806 729 OFFCURVE",
"800 723 QCURVE SMOOTH",
"775 694 LINE",
"697 736 OFFCURVE",
"516 768 OFFCURVE",
"423 754 QCURVE SMOOTH",
"320 739 OFFCURVE",
"180 675 OFFCURVE",
"96 594 OFFCURVE",
"66 504 OFFCURVE",
"81 423 OFFCURVE",
"136 358 OFFCURVE",
"180 343 QCURVE SMOOTH",
"213 331 OFFCURVE",
"283 339 OFFCURVE",
"343 373 OFFCURVE",
"386 430 OFFCURVE",
"391 467 QCURVE SMOOTH",
"393 481 OFFCURVE",
"372 484 OFFCURVE",
"371 476 QCURVE SMOOTH",
"370 463 OFFCURVE",
"347 415 OFFCURVE",
"301 374 OFFCURVE",
"234 353 OFFCURVE",
"190 367 QCURVE SMOOTH",
"153 378 OFFCURVE",
"117 431 OFFCURVE",
"118 500 OFFCURVE",
"156 576 OFFCURVE",
"228 647 OFFCURVE",
"334 704 OFFCURVE",
"403 719 QCURVE SMOOTH",
"497 739 OFFCURVE",
"673 708 OFFCURVE",
"747 663 QCURVE",
"688 597 OFFCURVE",
"596 436 OFFCURVE",
"511 274 OFFCURVE",
"422 125 OFFCURVE",
"367 72 QCURVE",
"355 78 OFFCURVE",
"315 99 OFFCURVE",
"271 121 OFFCURVE",
"229 141 OFFCURVE",
"215 146 QCURVE SMOOTH",
"159 165 OFFCURVE",
"73 157 OFFCURVE",
"19 121 OFFCURVE",
"-1 66 OFFCURVE",
"16 12 OFFCURVE",
"74 -30 OFFCURVE",
"125 -36 QCURVE SMOOTH",
"197 -45 OFFCURVE",
"320 -9 OFFCURVE",
"375 36 QCURVE",
"399 25 OFFCURVE",
"453 5 OFFCURVE",
"518 -13 OFFCURVE",
"597 -29 OFFCURVE",
"646 -35 QCURVE SMOOTH",
"713 -43 OFFCURVE",
"843 -12 OFFCURVE",
"947 60 OFFCURVE",
"1016 169 OFFCURVE",
"1023 239 QCURVE",
"1023 239 LINE"
);
},
{
closed = 1;
nodes = (
"954 185 OFFCURVE",
"903 91 OFFCURVE",
"820 22 OFFCURVE",
"710 -14 OFFCURVE",
"645 -8 QCURVE SMOOTH",
"564 0 OFFCURVE",
"446 33 OFFCURVE",
"399 54 QCURVE",
"409 62 OFFCURVE",
"427 79 OFFCURVE",
"437 90 QCURVE SMOOTH",
"478 134 OFFCURVE",
"567 263 OFFCURVE",
"659 409 OFFCURVE",
"750 562 OFFCURVE",
"794 631 QCURVE",
"836 598 OFFCURVE",
"904 512 OFFCURVE",
"948 412 OFFCURVE",
"966 298 OFFCURVE",
"960 237 QCURVE",
"960 237 LINE"
);
},
{
closed = 1;
nodes = (
"299 22 OFFCURVE",
"204 -10 OFFCURVE",
"150 -8 QCURVE SMOOTH",
"119 -7 OFFCURVE",
"82 21 OFFCURVE",
"66 57 OFFCURVE",
"73 97 OFFCURVE",
"103 124 OFFCURVE",
"154 133 OFFCURVE",
"190 120 QCURVE SMOOTH",
"235 104 OFFCURVE",
"305 69 OFFCURVE",
"341 52 QCURVE",
"341 52 LINE"
);
},
{
closed = 1;
nodes = (
"665 288 OFFCURVE",
"673 296 OFFCURVE",
"671 306 OFFCURVE",
"660 315 OFFCURVE",
"651 315 QCURVE SMOOTH",
"564 317 OFFCURVE",
"462 319 OFFCURVE",
"431 319 QCURVE SMOOTH",
"420 319 OFFCURVE",
"413 303 OFFCURVE",
"416 285 OFFCURVE",
"426 270 OFFCURVE",
"431 271 QCURVE SMOOTH",
"476 276 OFFCURVE",
"586 288 OFFCURVE",
"655 288 QCURVE",
"655 288 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
128 2 117 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
128 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
125 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
125 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1027;
}
);
note = Dcroat;
unicode = 0110;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acute;
transform = "{1, 0, 0, 1, 931, 421}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1039;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, 899, 334}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1039;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = Ohungarumlaut;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 345, 404}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 771;
}
);
note = Ohungarumlaut;
unicode = 0150;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, 798, 324}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1024;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ring;
transform = "{1, 0, 0, 1, 736, 265}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Uring;
unicode = 016E;
},
{
glyphname = Uhungarumlaut;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 720, 214}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Uhungarumlaut;
unicode = 0170;
},
{
glyphname = Tcommaaccent;
lastChange = "2020-07-16 16:24:45 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 156, -735}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1088;
}
);
note = Tcommaaccent;
rightKerningGroup = T;
unicode = 021A;
},
{
glyphname = racute;
layers = (
{
components = (
{
name = r;
},
{
name = acute;
transform = "{1, 0, 0, 1, 169, 90}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = racute;
unicode = 0155;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 175, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = abreve;
unicode = 0103;
},
{
glyphname = lacute;
layers = (
{
components = (
{
name = l;
},
{
name = acute;
transform = "{1, 0, 0, 1, 245, 286}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 212;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acute;
transform = "{1, 0, 0, 1, 182, 6}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = cacute;
unicode = 0107;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 146, -55}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = ccaron;
unicode = 010D;
},
{
glyphname = eogonek;
layers = (
{
components = (
{
name = e;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, -8, 32}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = eogonek;
unicode = 0119;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 127, -76}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = ecaron;
unicode = 011B;
},
{
glyphname = dcaron;
layers = (
{
components = (
{
name = d;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 395, -86}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 655;
}
);
note = dcaron;
unicode = 010F;
},
{
glyphname = dcroat;
layers = (
{
components = (
{
name = d;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, 164, 264}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 367;
}
);
note = dcroat;
unicode = 0111;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acute;
transform = "{1, 0, 0, 1, 203, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = nacute;
unicode = 0144;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, 161, -76}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = ncaron;
unicode = 0148;
},
{
glyphname = ohungarumlaut;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 127, 3}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = ohungarumlaut;
unicode = 0151;
},
{
glyphname = rcaron;
lastChange = "2020-07-07 20:55:23 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, 89, -34}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = rcaron;
unicode = 0159;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ring;
transform = "{1, 0, 0, 1, 142, -39}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = uring;
unicode = 016F;
},
{
glyphname = uhungarumlaut;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = uhungarumlaut;
unicode = 0171;
},
{
glyphname = tcommaaccent;
lastChange = "2020-07-16 16:24:45 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -71, -627}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 200;
}
);
note = tcommaaccent;
unicode = 021B;
},
{
glyphname = Hbar;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1565 568 LINE",
"750 568 LINE",
"740 528 LINE",
"1556 528 LINE",
"1556 528 LINE"
);
},
{
closed = 1;
nodes = (
"1537 757 OFFCURVE",
"1537 763 OFFCURVE",
"1519 761 OFFCURVE",
"1491 754 OFFCURVE",
"1476 749 QCURVE SMOOTH",
"1456 742 OFFCURVE",
"1411 684 OFFCURVE",
"1365 604 OFFCURVE",
"1321 511 OFFCURVE",
"1286 428 OFFCURVE",
"1262 365 OFFCURVE",
"1258 355 QCURVE",
"1232 355 OFFCURVE",
"1157 360 OFFCURVE",
"1068 367 OFFCURVE",
"969 372 OFFCURVE",
"919 372 QCURVE",
"923 383 OFFCURVE",
"940 429 OFFCURVE",
"963 489 OFFCURVE",
"989 558 OFFCURVE",
"1014 623 OFFCURVE",
"1039 679 OFFCURVE",
"1048 698 QCURVE",
"1063 698 OFFCURVE",
"1104 708 OFFCURVE",
"1140 727 OFFCURVE",
"1166 754 OFFCURVE",
"1166 772 QCURVE SMOOTH",
"1166 793 OFFCURVE",
"1131 806 OFFCURVE",
"1109 800 QCURVE SMOOTH",
"1097 796 OFFCURVE",
"1072 774 OFFCURVE",
"1050 748 OFFCURVE",
"1035 724 OFFCURVE",
"1032 720 QCURVE",
"983 715 OFFCURVE",
"867 710 OFFCURVE",
"748 698 OFFCURVE",
"631 672 OFFCURVE",
"534 620 OFFCURVE",
"462 537 OFFCURVE",
"446 474 QCURVE SMOOTH",
"434 425 OFFCURVE",
"459 338 OFFCURVE",
"518 280 OFFCURVE",
"601 259 OFFCURVE",
"646 276 QCURVE SMOOTH",
"673 286 OFFCURVE",
"722 329 OFFCURVE",
"753 385 OFFCURVE",
"760 449 OFFCURVE",
"746 480 QCURVE SMOOTH",
"743 486 OFFCURVE",
"736 489 OFFCURVE",
"730 487 OFFCURVE",
"729 479 OFFCURVE",
"733 473 QCURVE SMOOTH",
"738 466 OFFCURVE",
"732 416 OFFCURVE",
"711 358 OFFCURVE",
"673 305 OFFCURVE",
"645 295 QCURVE SMOOTH",
"607 281 OFFCURVE",
"547 298 OFFCURVE",
"511 346 OFFCURVE",
"501 417 OFFCURVE",
"514 458 QCURVE SMOOTH",
"532 516 OFFCURVE",
"593 593 OFFCURVE",
"673 642 OFFCURVE",
"766 669 OFFCURVE",
"866 683 OFFCURVE",
"969 690 OFFCURVE",
"1018 696 QCURVE",
"1010 680 OFFCURVE",
"977 610 OFFCURVE",
"935 520 OFFCURVE",
"891 419 OFFCURVE",
"872 372 QCURVE",
"833 372 LINE",
"813 370 OFFCURVE",
"778 345 OFFCURVE",
"771 334 QCURVE SMOOTH",
"765 324 OFFCURVE",
"769 317 OFFCURVE",
"780 317 OFFCURVE",
"794 321 OFFCURVE",
"798 323 QCURVE SMOOTH",
"812 330 OFFCURVE",
"842 339 OFFCURVE",
"858 339 QCURVE",
"833 274 OFFCURVE",
"757 138 OFFCURVE",
"643 18 OFFCURVE",
"486 -76 OFFCURVE",
"381 -100 QCURVE SMOOTH",
"346 -108 OFFCURVE",
"262 -109 OFFCURVE",
"179 -92 OFFCURVE",
"102 -55 OFFCURVE",
"47 3 OFFCURVE",
"19 86 OFFCURVE",
"26 140 QCURVE SMOOTH",
"30 171 OFFCURVE",
"54 224 OFFCURVE",
"84 265 OFFCURVE",
"116 293 OFFCURVE",
"128 298 QCURVE SMOOTH",
"136 301 OFFCURVE",
"142 312 OFFCURVE",
"126 312 QCURVE SMOOTH",
"114 312 OFFCURVE",
"78 290 OFFCURVE",
"41 255 OFFCURVE",
"10 209 OFFCURVE",
"4 185 QCURVE SMOOTH",
"-20 91 OFFCURVE",
"30 -50 OFFCURVE",
"145 -141 OFFCURVE",
"305 -178 OFFCURVE",
"391 -167 QCURVE SMOOTH",
"488 -155 OFFCURVE",
"652 -59 OFFCURVE",
"784 80 OFFCURVE",
"881 250 OFFCURVE",
"910 337 QCURVE",
"944 335 OFFCURVE",
"1046 331 OFFCURVE",
"1148 327 OFFCURVE",
"1232 324 OFFCURVE",
"1249 324 QCURVE",
"1243 307 OFFCURVE",
"1221 247 OFFCURVE",
"1198 175 OFFCURVE",
"1180 99 OFFCURVE",
"1177 31 OFFCURVE",
"1193 -21 OFFCURVE",
"1216 -33 QCURVE SMOOTH",
"1242 -47 OFFCURVE",
"1303 -32 OFFCURVE",
"1329 -6 QCURVE SMOOTH",
"1346 10 OFFCURVE",
"1374 42 OFFCURVE",
"1401 84 OFFCURVE",
"1431 141 OFFCURVE",
"1451 182 QCURVE SMOOTH",
"1459 200 OFFCURVE",
"1444 206 OFFCURVE",
"1436 189 QCURVE SMOOTH",
"1424 165 OFFCURVE",
"1396 113 OFFCURVE",
"1365 64 OFFCURVE",
"1330 22 OFFCURVE",
"1311 8 QCURVE SMOOTH",
"1294 -4 OFFCURVE",
"1265 -3 OFFCURVE",
"1255 8 QCURVE SMOOTH",
"1244 20 OFFCURVE",
"1241 68 OFFCURVE",
"1249 128 OFFCURVE",
"1266 195 OFFCURVE",
"1285 258 OFFCURVE",
"1302 309 OFFCURVE",
"1307 324 QCURVE",
"1329 326 OFFCURVE",
"1384 337 OFFCURVE",
"1404 351 QCURVE SMOOTH",
"1417 360 OFFCURVE",
"1410 368 OFFCURVE",
"1396 363 QCURVE SMOOTH",
"1390 361 OFFCURVE",
"1369 358 OFFCURVE",
"1346 356 OFFCURVE",
"1323 356 OFFCURVE",
"1316 356 QCURVE",
"1346 443 OFFCURVE",
"1413 586 OFFCURVE",
"1472 688 OFFCURVE",
"1516 746 OFFCURVE",
"1523 750 QCURVE",
"1523 750 LINE"
);
},
{
closed = 1;
nodes = (
"1123 771 OFFCURVE",
"1132 760 OFFCURVE",
"1126 744 OFFCURVE",
"1098 728 OFFCURVE",
"1066 723 QCURVE",
"1071 730 OFFCURVE",
"1086 748 OFFCURVE",
"1102 763 OFFCURVE",
"1115 773 OFFCURVE",
"1119 771 QCURVE",
"1119 771 LINE"
);
}
);
width = 1381;
}
);
note = Hbar;
unicode = 0126;
},
{
glyphname = Hcircumflex;
layers = (
{
components = (
{
name = H;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 1064, 483}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1381;
}
);
note = Hcircumflex;
unicode = 0124;
},
{
glyphname = Idotaccent;
layers = (
{
components = (
{
name = I;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 952, 374}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 929;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 126, -86}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 901;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = breve;
transform = "{1, 0, 0, 1, 466, 458}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 723;
}
);
note = Gbreve;
unicode = 011E;
},
{
glyphname = Jcircumflex;
layers = (
{
components = (
{
name = J;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 881, 476}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 998;
}
);
note = Jcircumflex;
unicode = 0134;
},
{
glyphname = hbar;
layers = (
{
components = (
{
name = h;
},
{
name = macron;
transform = "{0.98425, 0, 0, 0.67346, -55, 204}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 332;
}
);
note = hbar;
unicode = 0127;
},
{
glyphname = hcircumflex;
layers = (
{
components = (
{
name = h;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 55, 280}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 332;
}
);
note = hcircumflex;
unicode = 0125;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, -157, 3}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 256;
}
);
leftKerningGroup = s;
note = scedilla;
unicode = 015F;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = breve;
transform = "{1, 0, 0, 1, 148, 10}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 392;
}
);
note = gbreve;
unicode = 011F;
},
{
glyphname = jcircumflex;
layers = (
{
components = (
{
name = dotlessj;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -129, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 177;
}
);
note = jcircumflex;
unicode = 0135;
},
{
glyphname = dotlessj;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"53 149 OFFCURVE",
"36 114 OFFCURVE",
"17 76 OFFCURVE",
"-2 36 OFFCURVE",
"-11 18 QCURVE SMOOTH",
"-18 4 OFFCURVE",
"-35 -26 OFFCURVE",
"-43 -40 QCURVE",
"-104 -57 OFFCURVE",
"-235 -88 OFFCURVE",
"-286 -112 QCURVE SMOOTH",
"-315 -126 OFFCURVE",
"-366 -166 OFFCURVE",
"-380 -194 QCURVE SMOOTH",
"-391 -215 OFFCURVE",
"-397 -258 OFFCURVE",
"-380 -294 OFFCURVE",
"-338 -316 OFFCURVE",
"-300 -316 QCURVE SMOOTH",
"-245 -316 OFFCURVE",
"-151 -265 OFFCURVE",
"-75 -186 OFFCURVE",
"-14 -92 OFFCURVE",
"10 -50 QCURVE",
"64 -31 OFFCURVE",
"133 8 OFFCURVE",
"182 60 OFFCURVE",
"222 132 OFFCURVE",
"248 184 QCURVE SMOOTH",
"255 199 OFFCURVE",
"241 206 OFFCURVE",
"234 193 QCURVE SMOOTH",
"226 179 OFFCURVE",
"198 121 OFFCURVE",
"174 86 QCURVE SMOOTH",
"157 61 OFFCURVE",
"124 29 OFFCURVE",
"88 7 OFFCURVE",
"49 -9 OFFCURVE",
"27 -18 QCURVE",
"44 15 OFFCURVE",
"75 81 OFFCURVE",
"89 114 QCURVE SMOOTH",
"169 301 LINE SMOOTH",
"177 319 OFFCURVE",
"172 336 OFFCURVE",
"148 336 QCURVE SMOOTH",
"93 335 LINE",
"96 331 OFFCURVE",
"110 307 OFFCURVE",
"103 293 QCURVE SMOOTH",
"50 178 LINE SMOOTH",
"45 168 OFFCURVE",
"54 162 OFFCURVE",
"59 162 QCURVE",
"59 162 LINE"
);
},
{
closed = 1;
nodes = (
"-67 -82 OFFCURVE",
"-78 -101 OFFCURVE",
"-84 -109 QCURVE SMOOTH",
"-101 -133 OFFCURVE",
"-155 -197 OFFCURVE",
"-220 -255 OFFCURVE",
"-291 -296 OFFCURVE",
"-324 -296 QCURVE SMOOTH",
"-356 -296 OFFCURVE",
"-376 -258 OFFCURVE",
"-358 -205 OFFCURVE",
"-308 -151 OFFCURVE",
"-269 -134 QCURVE SMOOTH",
"-248 -125 OFFCURVE",
"-196 -108 OFFCURVE",
"-141 -92 OFFCURVE",
"-86 -78 OFFCURVE",
"-62 -72 QCURVE",
"-62 -72 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
65 1 36 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 177;
}
);
note = dotlessj;
unicode = 0237;
},
{
glyphname = Cdotaccent;
layers = (
{
components = (
{
name = C;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 559, 337}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 710;
}
);
note = Cdotaccent;
unicode = 010A;
},
{
glyphname = Ccircumflex;
layers = (
{
components = (
{
name = C;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 364, 477}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 710;
}
);
note = Ccircumflex;
unicode = 0108;
},
{
glyphname = Gdotaccent;
layers = (
{
components = (
{
name = G;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 538, 358}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 699;
}
);
note = Gdotaccent;
unicode = 0120;
},
{
glyphname = Gcircumflex;
layers = (
{
components = (
{
name = G;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 334, 492}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 699;
}
);
note = Gcircumflex;
unicode = 011C;
},
{
glyphname = Ubreve;
layers = (
{
components = (
{
name = U;
},
{
name = breve;
transform = "{1, 0, 0, 1, 730, 252}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Ubreve;
unicode = 016C;
},
{
glyphname = Scircumflex;
layers = (
{
components = (
{
name = S;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 561, 523}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 901;
}
);
note = Scircumflex;
unicode = 015C;
},
{
glyphname = ccircumflex;
layers = (
{
components = (
{
name = c;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -33, 15}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = ccircumflex;
unicode = 0109;
},
{
glyphname = cdotaccent;
layers = (
{
components = (
{
name = c;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 140, -83}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = cdotaccent;
unicode = 010B;
},
{
glyphname = gdotaccent;
layers = (
{
components = (
{
name = g;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 174, -48}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 392;
}
);
note = gdotaccent;
unicode = 0121;
},
{
glyphname = gcircumflex;
layers = (
{
components = (
{
name = g;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -7, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 392;
}
);
note = gcircumflex;
unicode = 011D;
},
{
glyphname = ubreve;
layers = (
{
components = (
{
name = u;
},
{
name = breve;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = ubreve;
unicode = 016D;
},
{
glyphname = scircumflex;
layers = (
{
components = (
{
name = s;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -131, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 256;
}
);
note = scircumflex;
unicode = 015D;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"368 343 OFFCURVE",
"322 349 OFFCURVE",
"283 335 QCURVE SMOOTH",
"260 326 OFFCURVE",
"214 293 OFFCURVE",
"170 253 OFFCURVE",
"131 209 OFFCURVE",
"115 189 QCURVE",
"135 230 OFFCURVE",
"176 311 OFFCURVE",
"197 350 QCURVE SMOOTH",
"206 368 LINE",
"182 372 LINE SMOOTH",
"158 374 OFFCURVE",
"127 341 OFFCURVE",
"111 309 QCURVE SMOOTH",
"99 285 OFFCURVE",
"74 233 OFFCURVE",
"41 161 OFFCURVE",
"-5 62 OFFCURVE",
"-37 -7 QCURVE",
"-29 -2 OFFCURVE",
"-14 -2 OFFCURVE",
"-3 -1 QCURVE SMOOTH",
"13 -1 OFFCURVE",
"29 3 OFFCURVE",
"34 14 QCURVE SMOOTH",
"44 36 OFFCURVE",
"63 80 OFFCURVE",
"74 103 QCURVE SMOOTH",
"85 123 OFFCURVE",
"109 160 OFFCURVE",
"122 177 QCURVE",
"119 163 OFFCURVE",
"118 121 OFFCURVE",
"123 89 QCURVE SMOOTH",
"127 63 OFFCURVE",
"148 29 OFFCURVE",
"174 6 OFFCURVE",
"203 -5 OFFCURVE",
"217 -6 QCURVE SMOOTH",
"239 -8 OFFCURVE",
"284 0 OFFCURVE",
"333 39 OFFCURVE",
"386 118 OFFCURVE",
"416 186 QCURVE SMOOTH",
"421 198 OFFCURVE",
"409 207 OFFCURVE",
"403 195 QCURVE SMOOTH",
"382 151 OFFCURVE",
"341 78 OFFCURVE",
"322 58 QCURVE SMOOTH",
"288 22 OFFCURVE",
"224 25 OFFCURVE",
"182 83 OFFCURVE",
"175 188 OFFCURVE",
"198 255 QCURVE",
"225 276 OFFCURVE",
"274 296 OFFCURVE",
"310 298 OFFCURVE",
"331 285 OFFCURVE",
"332 275 QCURVE",
"343 272 OFFCURVE",
"363 279 OFFCURVE",
"376 295 OFFCURVE",
"380 317 OFFCURVE",
"376 329 QCURVE",
"376 329 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 345;
}
);
note = kgreenlandic;
unicode = 0138;
},
{
glyphname = Rcommaaccent;
layers = (
{
components = (
{
name = R;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 382, -646}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1024;
}
);
note = Rcommaaccent;
unicode = 0156;
},
{
glyphname = Itilde;
layers = (
{
components = (
{
name = I;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 781, 432}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 929;
}
);
note = Itilde;
unicode = 0128;
},
{
glyphname = Lcommaaccent;
layers = (
{
components = (
{
name = L;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 224, -677}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 746;
}
);
note = Lcommaaccent;
unicode = 013B;
},
{
glyphname = Emacron;
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 446, 451}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 876;
}
);
note = Emacron;
unicode = 0112;
},
{
glyphname = Gcommaaccent;
layers = (
{
components = (
{
name = G;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 31, -971}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 699;
}
);
note = Gcommaaccent;
unicode = 0122;
},
{
glyphname = Tbar;
layers = (
{
components = (
{
name = T;
},
{
name = macron;
transform = "{1.2323, 0, 0, 0.65308, 540, 128}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1088;
}
);
note = Tbar;
unicode = 0166;
},
{
glyphname = rcommaaccent;
layers = (
{
components = (
{
name = r;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -78, -627}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 260;
}
);
note = rcommaaccent;
unicode = 0157;
},
{
glyphname = itilde;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -89, -15}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 174;
}
);
note = itilde;
unicode = 0129;
},
{
glyphname = lcommaaccent;
layers = (
{
components = (
{
name = l;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -62, -633}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 212;
}
);
note = lcommaaccent;
unicode = 013C;
},
{
glyphname = emacron;
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, -39, 37}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = emacron;
unicode = 0113;
},
{
glyphname = gcommaaccent;
lastChange = "2020-07-16 16:40:01 +0000";
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"263 457 OFFCURVE",
"283 431 OFFCURVE",
"303 431 QCURVE SMOOTH",
"318 431 OFFCURVE",
"344 452 OFFCURVE",
"346 468 QCURVE SMOOTH",
"348 483 OFFCURVE",
"331 505 OFFCURVE",
"315 505 QCURVE SMOOTH",
"308 505 OFFCURVE",
"295 500 OFFCURVE",
"290 496 QCURVE",
"293 526 OFFCURVE",
"333 566 OFFCURVE",
"358 574 QCURVE SMOOTH",
"367 576 OFFCURVE",
"365 587 OFFCURVE",
"357 584 QCURVE SMOOTH",
"343 579 OFFCURVE",
"310 560 OFFCURVE",
"282 532 OFFCURVE",
"263 496 OFFCURVE",
"263 474 QCURVE",
"263 474 LINE"
);
},
{
closed = 1;
nodes = (
"470 199 OFFCURVE",
"455 205 OFFCURVE",
"448 192 QCURVE SMOOTH",
"440 178 OFFCURVE",
"415 119 OFFCURVE",
"390 86 QCURVE SMOOTH",
"375 66 OFFCURVE",
"338 34 OFFCURVE",
"320 21 QCURVE",
"336 81 OFFCURVE",
"343 204 OFFCURVE",
"333 264 QCURVE",
"327 259 OFFCURVE",
"310 259 OFFCURVE",
"292 255 OFFCURVE",
"276 241 OFFCURVE",
"271 224 QCURVE SMOOTH",
"264 200 OFFCURVE",
"224 128 OFFCURVE",
"173 63 OFFCURVE",
"118 24 OFFCURVE",
"96 33 QCURVE SMOOTH",
"76 42 OFFCURVE",
"75 91 OFFCURVE",
"100 156 OFFCURVE",
"146 228 OFFCURVE",
"173 259 QCURVE SMOOTH",
"196 284 OFFCURVE",
"245 322 OFFCURVE",
"289 337 OFFCURVE",
"324 323 OFFCURVE",
"334 296 QCURVE SMOOTH",
"338 285 OFFCURVE",
"352 283 OFFCURVE",
"361 294 OFFCURVE",
"358 314 OFFCURVE",
"345 325 QCURVE SMOOTH",
"317 347 OFFCURVE",
"254 358 OFFCURVE",
"192 343 OFFCURVE",
"135 306 OFFCURVE",
"113 279 QCURVE SMOOTH",
"85 246 OFFCURVE",
"40 164 OFFCURVE",
"22 85 OFFCURVE",
"41 20 OFFCURVE",
"79 4 QCURVE",
"109 -5 OFFCURVE",
"167 29 OFFCURVE",
"218 87 OFFCURVE",
"259 154 OFFCURVE",
"271 177 QCURVE",
"273 169 OFFCURVE",
"273 124 OFFCURVE",
"270 95 QCURVE SMOOTH",
"267 65 OFFCURVE",
"256 10 OFFCURVE",
"247 -16 QCURVE",
"218 -28 OFFCURVE",
"155 -48 OFFCURVE",
"88 -72 OFFCURVE",
"18 -102 OFFCURVE",
"-19 -124 QCURVE SMOOTH",
"-55 -145 OFFCURVE",
"-106 -202 OFFCURVE",
"-106 -239 QCURVE SMOOTH",
"-106 -316 OFFCURVE",
"-12 -316 QCURVE SMOOTH",
"42 -316 OFFCURVE",
"144 -256 OFFCURVE",
"229 -166 OFFCURVE",
"292 -59 OFFCURVE",
"309 -12 QCURVE",
"337 1 OFFCURVE",
"377 36 OFFCURVE",
"412 83 OFFCURVE",
"444 145 OFFCURVE",
"463 184 QCURVE",
"463 184 LINE"
);
},
{
closed = 1;
nodes = (
"217 -94 OFFCURVE",
"180 -146 QCURVE SMOOTH",
"159 -174 OFFCURVE",
"113 -225 OFFCURVE",
"90 -244 QCURVE SMOOTH",
"81 -251 OFFCURVE",
"51 -269 OFFCURVE",
"17 -285 OFFCURVE",
"-20 -296 OFFCURVE",
"-36 -296 QCURVE SMOOTH",
"-67 -296 OFFCURVE",
"-88 -263 OFFCURVE",
"-77 -218 OFFCURVE",
"-42 -169 OFFCURVE",
"-18 -153 QCURVE SMOOTH",
"30 -121 OFFCURVE",
"147 -76 OFFCURVE",
"202 -57 QCURVE SMOOTH",
"211 -54 OFFCURVE",
"229 -48 OFFCURVE",
"237 -45 QCURVE",
"237 -45 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
127 133 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
125 133 127 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 392;
}
);
note = gcommaaccent;
unicode = 0123;
},
{
glyphname = tbar;
layers = (
{
components = (
{
name = t;
},
{
name = macron;
transform = "{0.93304, 0, 0, 0.42859, -166, 58}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 200;
}
);
note = tbar;
unicode = 0167;
},
{
glyphname = Eng;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1144 709 OFFCURVE",
"1101 753 OFFCURVE",
"1040 766 OFFCURVE",
"967 752 OFFCURVE",
"934 736 QCURVE SMOOTH",
"880 710 OFFCURVE",
"771 596 OFFCURVE",
"723 528 QCURVE SMOOTH",
"691 483 OFFCURVE",
"635 390 OFFCURVE",
"612 348 QCURVE SMOOTH",
"606 337 OFFCURVE",
"592 306 OFFCURVE",
"586 294 OFFCURVE",
"592 317 OFFCURVE",
"606 359 QCURVE SMOOTH",
"625 416 OFFCURVE",
"661 534 OFFCURVE",
"661 592 QCURVE SMOOTH",
"661 653 OFFCURVE",
"622 735 OFFCURVE",
"557 781 OFFCURVE",
"473 796 OFFCURVE",
"383 786 OFFCURVE",
"293 756 OFFCURVE",
"254 733 QCURVE SMOOTH",
"213 709 OFFCURVE",
"138 649 OFFCURVE",
"75 577 OFFCURVE",
"27 497 OFFCURVE",
"14 454 QCURVE SMOOTH",
"-9 377 OFFCURVE",
"9 255 OFFCURVE",
"69 168 OFFCURVE",
"157 122 OFFCURVE",
"205 122 QCURVE SMOOTH",
"271 122 OFFCURVE",
"372 177 OFFCURVE",
"437 258 OFFCURVE",
"463 349 OFFCURVE",
"445 420 OFFCURVE",
"381 456 OFFCURVE",
"324 442 QCURVE SMOOTH",
"320 441 OFFCURVE",
"315 435 OFFCURVE",
"315 429 OFFCURVE",
"320 425 OFFCURVE",
"328 426 QCURVE SMOOTH",
"372 432 OFFCURVE",
"417 394 OFFCURVE",
"424 331 OFFCURVE",
"397 254 OFFCURVE",
"341 186 OFFCURVE",
"257 141 OFFCURVE",
"205 141 QCURVE SMOOTH",
"155 141 OFFCURVE",
"88 197 OFFCURVE",
"57 288 OFFCURVE",
"64 405 OFFCURVE",
"111 527 OFFCURVE",
"202 644 OFFCURVE",
"270 690 QCURVE SMOOTH",
"330 730 OFFCURVE",
"455 772 OFFCURVE",
"554 750 OFFCURVE",
"610 653 OFFCURVE",
"600 554 QCURVE SMOOTH",
"594 501 OFFCURVE",
"569 381 OFFCURVE",
"536 261 OFFCURVE",
"498 146 OFFCURVE",
"461 49 OFFCURVE",
"430 -24 OFFCURVE",
"420 -42 QCURVE",
"418 -54 OFFCURVE",
"440 -65 OFFCURVE",
"469 -64 OFFCURVE",
"497 -50 OFFCURVE",
"502 -36 QCURVE SMOOTH",
"520 15 OFFCURVE",
"566 151 OFFCURVE",
"626 299 OFFCURVE",
"700 448 OFFCURVE",
"745 512 QCURVE SMOOTH",
"790 576 OFFCURVE",
"892 668 OFFCURVE",
"944 694 QCURVE SMOOTH",
"969 707 OFFCURVE",
"1014 718 OFFCURVE",
"1049 711 OFFCURVE",
"1071 683 OFFCURVE",
"1071 657 QCURVE SMOOTH",
"1071 618 OFFCURVE",
"1054 515 OFFCURVE",
"1027 402 OFFCURVE",
"992 289 OFFCURVE",
"975 241 QCURVE SMOOTH",
"925 92 OFFCURVE",
"822 -161 OFFCURVE",
"691 -355 OFFCURVE",
"520 -485 OFFCURVE",
"403 -512 QCURVE SMOOTH",
"364 -521 OFFCURVE",
"270 -518 OFFCURVE",
"176 -496 OFFCURVE",
"90 -452 OFFCURVE",
"28 -387 OFFCURVE",
"-1 -300 OFFCURVE",
"8 -245 QCURVE SMOOTH",
"13 -214 OFFCURVE",
"39 -161 OFFCURVE",
"71 -121 OFFCURVE",
"104 -93 OFFCURVE",
"116 -88 QCURVE SMOOTH",
"123 -84 OFFCURVE",
"131 -73 OFFCURVE",
"115 -74 QCURVE SMOOTH",
"103 -74 OFFCURVE",
"66 -96 OFFCURVE",
"28 -131 OFFCURVE",
"-5 -177 OFFCURVE",
"-12 -201 QCURVE SMOOTH",
"-31 -264 OFFCURVE",
"-20 -368 OFFCURVE",
"29 -451 OFFCURVE",
"112 -511 OFFCURVE",
"221 -545 OFFCURVE",
"349 -554 OFFCURVE",
"419 -544 QCURVE SMOOTH",
"467 -537 OFFCURVE",
"586 -493 OFFCURVE",
"705 -417 OFFCURVE",
"810 -309 OFFCURVE",
"843 -240 QCURVE SMOOTH",
"874 -175 OFFCURVE",
"946 -7 OFFCURVE",
"1016 175 OFFCURVE",
"1079 358 OFFCURVE",
"1126 517 OFFCURVE",
"1152 638 OFFCURVE",
"1149 668 QCURVE",
"1149 668 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
105 24 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1039;
}
);
note = Eng;
unicode = 014A;
},
{
glyphname = Amacron;
layers = (
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 433, 423}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
note = Amacron;
unicode = 0100;
},
{
glyphname = eng;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"413 199 OFFCURVE",
"398 206 OFFCURVE",
"392 193 QCURVE SMOOTH",
"384 177 OFFCURVE",
"354 119 OFFCURVE",
"316 62 OFFCURVE",
"274 20 OFFCURVE",
"255 20 QCURVE SMOOTH",
"245 20 OFFCURVE",
"233 39 OFFCURVE",
"239 70 QCURVE SMOOTH",
"241 83 OFFCURVE",
"254 119 OFFCURVE",
"272 160 OFFCURVE",
"293 204 OFFCURVE",
"304 225 QCURVE SMOOTH",
"329 274 OFFCURVE",
"359 328 QCURVE",
"346 332 OFFCURVE",
"299 316 OFFCURVE",
"245 287 OFFCURVE",
"192 250 OFFCURVE",
"174 234 QCURVE SMOOTH",
"151 214 OFFCURVE",
"106 163 OFFCURVE",
"91 144 QCURVE",
"104 171 OFFCURVE",
"137 232 OFFCURVE",
"170 286 OFFCURVE",
"201 326 OFFCURVE",
"212 332 QCURVE",
"201 330 OFFCURVE",
"180 335 OFFCURVE",
"170 336 QCURVE SMOOTH",
"146 337 OFFCURVE",
"118 309 OFFCURVE",
"99 273 QCURVE SMOOTH",
"62 205 OFFCURVE",
"-3 65 OFFCURVE",
"-39 -7 QCURVE",
"-31 -2 OFFCURVE",
"-16 -2 OFFCURVE",
"-5 -1 QCURVE SMOOTH",
"11 -1 OFFCURVE",
"27 3 OFFCURVE",
"33 14 QCURVE SMOOTH",
"75 97 OFFCURVE",
"146 189 OFFCURVE",
"172 212 QCURVE SMOOTH",
"201 239 OFFCURVE",
"237 259 OFFCURVE",
"254 255 OFFCURVE",
"252 233 OFFCURVE",
"243 218 QCURVE SMOOTH",
"222 184 OFFCURVE",
"194 133 OFFCURVE",
"188 113 QCURVE SMOOTH",
"184 102 OFFCURVE",
"181 83 OFFCURVE",
"179 75 QCURVE",
"151 18 LINE SMOOTH",
"144 4 OFFCURVE",
"127 -26 OFFCURVE",
"119 -40 QCURVE",
"58 -57 OFFCURVE",
"-73 -88 OFFCURVE",
"-124 -112 QCURVE SMOOTH",
"-153 -126 OFFCURVE",
"-204 -166 OFFCURVE",
"-218 -194 QCURVE SMOOTH",
"-229 -215 OFFCURVE",
"-235 -258 OFFCURVE",
"-218 -294 OFFCURVE",
"-176 -316 OFFCURVE",
"-138 -316 QCURVE SMOOTH",
"-96 -316 OFFCURVE",
"-22 -285 OFFCURVE",
"43 -235 OFFCURVE",
"98 -170 OFFCURVE",
"121 -135 QCURVE SMOOTH",
"144 -94 OFFCURVE",
"183 -23 OFFCURVE",
"200 9 QCURVE",
"209 2 OFFCURVE",
"230 -4 OFFCURVE",
"241 -4 QCURVE SMOOTH",
"270 -4 OFFCURVE",
"320 38 OFFCURVE",
"362 97 OFFCURVE",
"395 161 OFFCURVE",
"406 184 QCURVE",
"406 184 LINE"
);
},
{
closed = 1;
nodes = (
"95 -82 OFFCURVE",
"84 -101 OFFCURVE",
"78 -109 QCURVE SMOOTH",
"61 -133 OFFCURVE",
"7 -197 OFFCURVE",
"-58 -255 OFFCURVE",
"-129 -296 OFFCURVE",
"-162 -296 QCURVE SMOOTH",
"-194 -296 OFFCURVE",
"-214 -258 OFFCURVE",
"-196 -205 OFFCURVE",
"-146 -151 OFFCURVE",
"-107 -134 QCURVE SMOOTH",
"-86 -125 OFFCURVE",
"-34 -108 OFFCURVE",
"21 -92 OFFCURVE",
"76 -78 OFFCURVE",
"100 -72 QCURVE",
"100 -72 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
48 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
101 1 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
83 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 83 23 83 39 83 55 83 71 83 87 83 103 83 119 83 135 83 151 83 167 83 183 83 199 83 215 83 231 83 247 83 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 83 23 83 39 83 55 83 71 83 87 83 103 83 119 83 135 83 151 83 167 83 183 83 199 83 215 83 231 83 247 83 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 83 23 83 39 83 55 83 71 83 87 83 103 83 119 83 135 83 151 83 167 83 183 83 199 83 215 83 231 83 247 83 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 335;
}
);
note = eng;
unicode = 014B;
},
{
glyphname = Iogonek;
lastChange = "2020-07-07 20:55:35 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 172, -135}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 929;
}
);
note = Iogonek;
unicode = 012E;
},
{
glyphname = Edotaccent;
layers = (
{
components = (
{
name = E;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 292, 523}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 876;
}
);
note = Edotaccent;
unicode = 0116;
},
{
glyphname = Imacron;
layers = (
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, 788, 449}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 929;
}
);
note = Imacron;
unicode = 012A;
},
{
glyphname = Ncommaaccent;
layers = (
{
components = (
{
name = N;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 581, -677}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1039;
}
);
note = Ncommaaccent;
unicode = 0145;
},
{
glyphname = uogonek;
layers = (
{
components = (
{
name = u;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 95, 24}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = uogonek;
rightKerningGroup = u;
unicode = 0173;
},
{
glyphname = Omacron;
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 260, 414}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 771;
}
);
note = Omacron;
unicode = 014C;
},
{
glyphname = Kcommaaccent;
layers = (
{
components = (
{
name = K;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 639, -751}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1193;
}
);
note = Kcommaaccent;
unicode = 0136;
},
{
glyphname = Uogonek;
layers = (
{
components = (
{
name = U;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 452, -4}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Uogonek;
unicode = 0172;
},
{
glyphname = Utilde;
layers = (
{
components = (
{
name = U;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 603, 267}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Utilde;
unicode = 0168;
},
{
glyphname = utilde;
layers = (
{
components = (
{
name = u;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 1, -2}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = utilde;
unicode = 0169;
},
{
glyphname = Umacron;
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 606, 227}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
leftKerningGroup = U;
note = Umacron;
unicode = 016A;
},
{
glyphname = amacron;
layers = (
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 1, 21, 21}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
note = amacron;
unicode = 0101;
},
{
glyphname = iogonek;
layers = (
{
components = (
{
name = i;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, -106, 16}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 174;
}
);
leftKerningGroup = i;
note = iogonek;
unicode = 012F;
},
{
glyphname = edotaccent;
layers = (
{
components = (
{
name = e;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 137, -60}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
note = edotaccent;
unicode = 0117;
},
{
glyphname = imacron;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = macron;
transform = "{0.92639, 0, 0, 0.89471, -61, 52}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 174;
}
);
note = imacron;
unicode = 012B;
},
{
glyphname = ncommaaccent;
layers = (
{
components = (
{
name = n;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -29, -636}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = ncommaaccent;
unicode = 0146;
},
{
glyphname = omacron;
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, -24, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
note = omacron;
unicode = 014D;
},
{
glyphname = kcommaaccent;
layers = (
{
components = (
{
name = k;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -51, -648}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 345;
}
);
note = kcommaaccent;
unicode = 0137;
},
{
glyphname = umacron;
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
note = umacron;
unicode = 016B;
},
{
glyphname = afii00208;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"808 211 OFFCURVE",
"816 219 OFFCURVE",
"814 229 OFFCURVE",
"803 238 OFFCURVE",
"794 238 QCURVE SMOOTH",
"765 239 OFFCURVE",
"655 240 OFFCURVE",
"522 241 OFFCURVE",
"381 241 OFFCURVE",
"260 242 OFFCURVE",
"174 242 OFFCURVE",
"164 242 QCURVE SMOOTH",
"153 242 OFFCURVE",
"146 226 OFFCURVE",
"149 208 OFFCURVE",
"159 193 OFFCURVE",
"164 194 QCURVE SMOOTH",
"179 196 OFFCURVE",
"272 200 OFFCURVE",
"397 203 OFFCURVE",
"541 207 OFFCURVE",
"672 209 OFFCURVE",
"775 211 OFFCURVE",
"798 211 QCURVE",
"798 211 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 7 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 819;
}
);
note = afii00208;
unicode = 2015;
},
{
glyphname = uni1E02;
layers = (
{
components = (
{
name = B;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 848, 311}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1069;
}
);
note = uni1E02;
unicode = 1E02;
},
{
glyphname = uni1E03;
layers = (
{
components = (
{
name = b;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 225, 171}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 313;
}
);
note = uni1E03;
unicode = 1E03;
},
{
glyphname = uni1E0A;
layers = (
{
components = (
{
name = D;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 813, 316}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1027;
}
);
note = uni1E0A;
unicode = 1E0A;
},
{
glyphname = Wgrave;
layers = (
{
components = (
{
name = W;
},
{
name = grave;
transform = "{1, 0, 0, 1, 900, 283}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1344;
}
);
note = Wgrave;
unicode = 1E80;
},
{
glyphname = Wacute;
layers = (
{
components = (
{
name = W;
},
{
name = acute;
transform = "{1, 0, 0, 1, 901, 250}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1344;
}
);
note = Wacute;
unicode = 1E82;
},
{
glyphname = uni1E0B;
layers = (
{
components = (
{
name = d;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 411, 175}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 367;
}
);
note = uni1E0B;
unicode = 1E0B;
},
{
glyphname = Ygrave;
layers = (
{
components = (
{
name = Y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 791, 249}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1006;
}
);
note = Ygrave;
unicode = 1EF2;
},
{
glyphname = uni1E1E;
layers = (
{
components = (
{
name = F;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 987, 215}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1044;
}
);
note = uni1E1E;
unicode = 1E1E;
},
{
glyphname = uni1E1F;
layers = (
{
components = (
{
name = f;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 232, 175}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 198;
}
);
note = uni1E1F;
unicode = 1E1F;
},
{
glyphname = uni1E40;
layers = (
{
components = (
{
name = M;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 967, 269}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1355;
}
);
note = uni1E40;
unicode = 1E40;
},
{
glyphname = uni1E41;
layers = (
{
components = (
{
name = m;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 241, -69}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 507;
}
);
note = uni1E41;
unicode = 1E41;
},
{
glyphname = uni1E56;
layers = (
{
components = (
{
name = P;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 839, 322}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 990;
}
);
note = uni1E56;
unicode = 1E56;
},
{
glyphname = wgrave;
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 218, 12}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 476;
}
);
note = wgrave;
unicode = 1E81;
},
{
glyphname = uni1E57;
layers = (
{
components = (
{
name = p;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, -82}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 336;
}
);
note = uni1E57;
unicode = 1E57;
},
{
glyphname = wacute;
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 245, -8}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 476;
}
);
note = wacute;
unicode = 1E83;
},
{
glyphname = uni1E60;
layers = (
{
components = (
{
name = S;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 692, 379}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 901;
}
);
note = uni1E60;
unicode = 1E60;
},
{
glyphname = ygrave;
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 147, 4}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
note = ygrave;
unicode = 1EF3;
},
{
glyphname = Wdieresis;
layers = (
{
components = (
{
name = W;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 877, 264}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1344;
}
);
note = Wdieresis;
unicode = 1E84;
},
{
glyphname = wdieresis;
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 203, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 476;
}
);
note = wdieresis;
unicode = 1E85;
},
{
glyphname = uni1E61;
layers = (
{
components = (
{
name = s;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 100, -31}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 256;
}
);
note = uni1E61;
unicode = 1E61;
},
{
glyphname = Wcircumflex;
layers = (
{
components = (
{
name = W;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 731, 293}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1344;
}
);
note = Wcircumflex;
unicode = 0174;
},
{
glyphname = uni1E6A;
layers = (
{
components = (
{
name = T;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 1006, 294}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1088;
}
);
note = uni1E6A;
unicode = 1E6A;
},
{
glyphname = Ycircumflex;
layers = (
{
components = (
{
name = Y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 639, 264}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1006;
}
);
note = Ycircumflex;
unicode = 0176;
},
{
glyphname = wcircumflex;
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 52, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 476;
}
);
note = wcircumflex;
unicode = 0175;
},
{
glyphname = uni1E6B;
layers = (
{
components = (
{
name = t;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 181, 160}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 200;
}
);
note = uni1E6B;
unicode = 1E6B;
},
{
glyphname = ycircumflex;
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -4, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
note = ycircumflex;
unicode = 0177;
},
{
glyphname = A.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"735 680 OFFCURVE",
"735 684 QCURVE SMOOTH",
"735 697 OFFCURVE",
"708 699 QCURVE SMOOTH",
"619 704 OFFCURVE",
"479 606 QCURVE SMOOTH",
"379 537 OFFCURVE",
"283 438 QCURVE",
"197 546 OFFCURVE",
"120 546 QCURVE SMOOTH",
"78 546 OFFCURVE",
"51 511 QCURVE SMOOTH",
"25 476 OFFCURVE",
"25 419 QCURVE SMOOTH",
"25 320 OFFCURVE",
"98 208 QCURVE",
"76 176 OFFCURVE",
"34 113 OFFCURVE",
"12 81 QCURVE SMOOTH",
"-21 33 OFFCURVE",
"-82 -40 OFFCURVE",
"-109 -66 QCURVE SMOOTH",
"-182 -137 OFFCURVE",
"-235 -137 QCURVE SMOOTH",
"-270 -137 OFFCURVE",
"-276 -115 QCURVE",
"-262 -129 OFFCURVE",
"-243 -129 QCURVE SMOOTH",
"-224 -129 OFFCURVE",
"-207 -114 QCURVE SMOOTH",
"-192 -101 OFFCURVE",
"-189 -80 QCURVE SMOOTH",
"-186 -61 OFFCURVE",
"-200 -45 QCURVE SMOOTH",
"-214 -31 OFFCURVE",
"-233 -31 QCURVE SMOOTH",
"-259 -31 OFFCURVE",
"-279 -54 QCURVE SMOOTH",
"-297 -77 OFFCURVE",
"-297 -104 QCURVE SMOOTH",
"-297 -136 OFFCURVE",
"-270 -151 QCURVE SMOOTH",
"-251 -163 OFFCURVE",
"-221 -163 QCURVE SMOOTH",
"-202 -163 OFFCURVE",
"-182 -157 QCURVE SMOOTH",
"-124 -142 OFFCURVE",
"-41 -40 QCURVE SMOOTH",
"-30 -26 OFFCURVE",
"48 83 OFFCURVE",
"117 180 QCURVE",
"144 143 OFFCURVE",
"207 72 OFFCURVE",
"244 38 QCURVE SMOOTH",
"277 7 OFFCURVE",
"337 -40 OFFCURVE",
"365 -57 QCURVE SMOOTH",
"380 -66 OFFCURVE",
"380 -52 QCURVE SMOOTH",
"380 -46 OFFCURVE",
"373 -42 QCURVE SMOOTH",
"300 9 OFFCURVE",
"181 131 OFFCURVE",
"135 205 QCURVE",
"175 261 OFFCURVE",
"246 350 OFFCURVE",
"278 385 QCURVE",
"370 269 OFFCURVE",
"397 105 QCURVE",
"401 44 OFFCURVE",
"440 10 QCURVE SMOOTH",
"474 -20 OFFCURVE",
"516 -15 QCURVE SMOOTH",
"567 -9 OFFCURVE",
"616 70 QCURVE SMOOTH",
"622 79 OFFCURVE",
"654 144 OFFCURVE",
"683 201 QCURVE SMOOTH",
"688 211 OFFCURVE",
"688 217 QCURVE SMOOTH",
"688 226 OFFCURVE",
"683 224 QCURVE SMOOTH",
"676 222 OFFCURVE",
"672 212 QCURVE SMOOTH",
"578 16 OFFCURVE",
"526 16 QCURVE SMOOTH",
"475 16 OFFCURVE",
"475 79 QCURVE SMOOTH",
"475 89 OFFCURVE",
"478 113 OFFCURVE",
"480 127 QCURVE SMOOTH",
"507 271 OFFCURVE",
"732 674 QCURVE",
"732 674 LINE"
);
},
{
closed = 1;
nodes = (
"536 442 OFFCURVE",
"450 289 QCURVE SMOOTH",
"417 231 OFFCURVE",
"404 176 QCURVE",
"371 309 OFFCURVE",
"303 411 QCURVE",
"334 442 OFFCURVE",
"406 503 OFFCURVE",
"449 533 QCURVE SMOOTH",
"556 607 OFFCURVE",
"614 607 QCURVE SMOOTH",
"633 607 OFFCURVE",
"633 594 QCURVE SMOOTH",
"633 583 OFFCURVE",
"623 569 QCURVE",
"623 569 LINE"
);
},
{
closed = 1;
nodes = (
"225 376 OFFCURVE",
"156 289 OFFCURVE",
"117 235 QCURVE",
"79 309 OFFCURVE",
"79 378 QCURVE SMOOTH",
"79 421 OFFCURVE",
"97 450 QCURVE SMOOTH",
"113 477 OFFCURVE",
"144 477 QCURVE SMOOTH",
"193 477 OFFCURVE",
"256 410 QCURVE",
"256 410 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
119 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
119 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 108 26 108 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 108 25 108 41 108 57 108 73 108 89 108 105 108 121 108 137 108 153 108 169 108 185 108 201 108 217 108 233 108 249 108 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
108 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
102 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
42 79 102 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
114 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 114 22 114 38 114 54 114 70 114 86 114 102 114 118 114 134 114 150 114 166 114 182 114 198 114 214 114 230 114 246 114 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 114 21 114 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
116 79 102 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
69 2 49 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
57 65 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
83 110 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
67 65 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 606;
}
);
note = A.001;
},
{
glyphname = B.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"798 616 OFFCURVE",
"760 653 QCURVE SMOOTH",
"719 691 OFFCURVE",
"636 699 QCURVE",
"679 735 OFFCURVE",
"728 735 QCURVE SMOOTH",
"751 735 OFFCURVE",
"768 726 QCURVE SMOOTH",
"776 721 OFFCURVE",
"776 736 QCURVE SMOOTH",
"776 741 OFFCURVE",
"771 743 QCURVE SMOOTH",
"746 754 OFFCURVE",
"718 754 QCURVE SMOOTH",
"651 754 OFFCURVE",
"588 700 QCURVE",
"466 699 OFFCURVE",
"338 652 QCURVE SMOOTH",
"192 599 OFFCURVE",
"129 510 QCURVE SMOOTH",
"103 473 OFFCURVE",
"103 440 QCURVE SMOOTH",
"103 369 OFFCURVE",
"196 369 QCURVE SMOOTH",
"241 369 OFFCURVE",
"330 417 QCURVE SMOOTH",
"426 468 OFFCURVE",
"426 507 QCURVE SMOOTH",
"426 510 OFFCURVE",
"421 512 QCURVE SMOOTH",
"416 514 OFFCURVE",
"413 509 QCURVE",
"374 461 OFFCURVE",
"321 430 QCURVE SMOOTH",
"263 396 OFFCURVE",
"210 396 QCURVE SMOOTH",
"165 396 OFFCURVE",
"165 435 QCURVE SMOOTH",
"165 501 OFFCURVE",
"263 578 QCURVE SMOOTH",
"314 619 OFFCURVE",
"405 650 QCURVE SMOOTH",
"450 665 OFFCURVE",
"533 682 OFFCURVE",
"571 684 QCURVE",
"554 668 OFFCURVE",
"523 629 OFFCURVE",
"511 606 QCURVE SMOOTH",
"362 313 LINE SMOOTH",
"273 138 OFFCURVE",
"218 71 QCURVE SMOOTH",
"153 -6 OFFCURVE",
"68 -28 QCURVE SMOOTH",
"57 -31 OFFCURVE",
"46 -31 QCURVE SMOOTH",
"0 -31 OFFCURVE",
"-11 -2 QCURVE",
"1 -14 OFFCURVE",
"19 -14 QCURVE SMOOTH",
"39 -14 OFFCURVE",
"56 1 QCURVE SMOOTH",
"72 14 OFFCURVE",
"75 35 QCURVE SMOOTH",
"78 56 OFFCURVE",
"67 70 QCURVE SMOOTH",
"55 84 OFFCURVE",
"34 84 QCURVE SMOOTH",
"5 84 OFFCURVE",
"-16 61 QCURVE SMOOTH",
"-37 38 OFFCURVE",
"-37 8 QCURVE SMOOTH",
"-37 -65 OFFCURVE",
"65 -57 QCURVE SMOOTH",
"149 -51 OFFCURVE",
"240 25 QCURVE",
"239 -54 OFFCURVE",
"370 -54 QCURVE SMOOTH",
"378 -54 OFFCURVE",
"392 -54 OFFCURVE",
"400 -53 QCURVE SMOOTH",
"543 -43 OFFCURVE",
"644 46 QCURVE SMOOTH",
"737 128 OFFCURVE",
"737 219 QCURVE SMOOTH",
"737 327 OFFCURVE",
"601 351 QCURVE",
"682 379 OFFCURVE",
"737 443 QCURVE SMOOTH",
"763 473 OFFCURVE",
"792 533 OFFCURVE",
"794 565 QCURVE",
"794 565 LINE"
);
},
{
closed = 1;
nodes = (
"723 492 OFFCURVE",
"671 434 QCURVE SMOOTH",
"615 370 OFFCURVE",
"540 357 QCURVE",
"522 357 OFFCURVE",
"483 354 OFFCURVE",
"463 352 QCURVE",
"558 586 LINE SMOOTH",
"570 615 OFFCURVE",
"599 664 OFFCURVE",
"618 683 QCURVE",
"677 675 OFFCURVE",
"706 639 QCURVE SMOOTH",
"732 606 OFFCURVE",
"728 559 QCURVE",
"728 559 LINE"
);
},
{
closed = 1;
nodes = (
"567 208 OFFCURVE",
"567 218 QCURVE SMOOTH",
"567 222 OFFCURVE",
"556 222 QCURVE SMOOTH",
"548 222 OFFCURVE",
"535 219 QCURVE SMOOTH",
"489 209 OFFCURVE",
"404 180 OFFCURVE",
"364 160 QCURVE",
"374 174 OFFCURVE",
"390 200 OFFCURVE",
"397 212 QCURVE SMOOTH",
"417 248 OFFCURVE",
"444 306 OFFCURVE",
"452 326 QCURVE",
"480 329 OFFCURVE",
"506 329 QCURVE SMOOTH",
"587 329 OFFCURVE",
"629 296 QCURVE SMOOTH",
"667 266 OFFCURVE",
"667 215 QCURVE SMOOTH",
"667 149 OFFCURVE",
"607 79 QCURVE SMOOTH",
"549 10 OFFCURVE",
"462 -18 QCURVE SMOOTH",
"338 -57 OFFCURVE",
"302 -14 QCURVE SMOOTH",
"269 27 OFFCURVE",
"334 94 QCURVE SMOOTH",
"403 166 OFFCURVE",
"536 201 QCURVE",
"536 201 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
137 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
116 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 116 26 116 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 116 25 116 41 116 57 116 73 116 89 116 105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
7 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
137 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
46 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
53 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 53 21 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
63 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
87 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
99 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
116 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
104 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
128 69 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
138 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
77 1 85 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
24 32 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 2 67 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
16 32 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
34 32 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 733;
}
);
note = B.001;
},
{
glyphname = C.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"807 540 OFFCURVE",
"807 610 QCURVE SMOOTH",
"807 682 OFFCURVE",
"671 682 QCURVE SMOOTH",
"522 682 OFFCURVE",
"374 589 QCURVE",
"292 660 OFFCURVE",
"182 660 QCURVE SMOOTH",
"119 660 OFFCURVE",
"72 634 QCURVE SMOOTH",
"16 602 OFFCURVE",
"13 543 QCURVE SMOOTH",
"10 484 OFFCURVE",
"56 433 QCURVE SMOOTH",
"98 388 OFFCURVE",
"157 368 QCURVE",
"89 252 OFFCURVE",
"83 141 QCURVE SMOOTH",
"78 41 OFFCURVE",
"127 -15 QCURVE SMOOTH",
"178 -75 OFFCURVE",
"277 -75 QCURVE SMOOTH",
"364 -75 OFFCURVE",
"454 -34 QCURVE SMOOTH",
"542 6 OFFCURVE",
"597 76 QCURVE SMOOTH",
"649 141 OFFCURVE",
"652 207 QCURVE SMOOTH",
"655 255 OFFCURVE",
"629 287 QCURVE SMOOTH",
"603 317 OFFCURVE",
"556 317 QCURVE SMOOTH",
"484 317 OFFCURVE",
"394 249 QCURVE SMOOTH",
"306 182 OFFCURVE",
"275 113 QCURVE",
"274 112 OFFCURVE",
"274 108 QCURVE SMOOTH",
"274 98 OFFCURVE",
"281 98 QCURVE SMOOTH",
"285 98 OFFCURVE",
"288 103 QCURVE SMOOTH",
"328 166 OFFCURVE",
"412 228 QCURVE SMOOTH",
"506 297 OFFCURVE",
"570 297 QCURVE SMOOTH",
"630 297 OFFCURVE",
"627 236 QCURVE SMOOTH",
"624 179 OFFCURVE",
"561 102 QCURVE SMOOTH",
"430 -54 OFFCURVE",
"298 -54 QCURVE SMOOTH",
"225 -54 OFFCURVE",
"189 -2 QCURVE SMOOTH",
"158 45 OFFCURVE",
"162 120 QCURVE SMOOTH",
"168 228 OFFCURVE",
"244 349 QCURVE",
"258 347 OFFCURVE",
"289 345 OFFCURVE",
"305 345 QCURVE SMOOTH",
"540 345 OFFCURVE",
"696 459 QCURVE",
"696 459 LINE"
);
},
{
closed = 1;
nodes = (
"762 558 OFFCURVE",
"680 498 QCURVE SMOOTH",
"553 406 OFFCURVE",
"410 379 QCURVE SMOOTH",
"357 370 OFFCURVE",
"307 370 QCURVE SMOOTH",
"284 370 OFFCURVE",
"260 373 QCURVE",
"318 458 OFFCURVE",
"399 528 QCURVE",
"410 514 OFFCURVE",
"426 494 OFFCURVE",
"431 487 QCURVE SMOOTH",
"436 479 OFFCURVE",
"445 481 QCURVE SMOOTH",
"453 483 OFFCURVE",
"449 490 QCURVE SMOOTH",
"442 504 OFFCURVE",
"426 530 OFFCURVE",
"417 543 QCURVE",
"565 662 OFFCURVE",
"697 662 QCURVE SMOOTH",
"768 662 OFFCURVE",
"765 617 QCURVE",
"765 617 LINE"
);
},
{
closed = 1;
nodes = (
"242 500 OFFCURVE",
"173 394 QCURVE",
"43 442 OFFCURVE",
"49 547 QCURVE SMOOTH",
"52 594 OFFCURVE",
"89 619 QCURVE SMOOTH",
"123 642 OFFCURVE",
"170 642 QCURVE SMOOTH",
"265 642 OFFCURVE",
"351 574 QCURVE",
"351 574 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
63 3 61 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
93 3 51 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 4 35 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
7 3 45 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 7 21 7 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
10 63 26 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
79 51 61 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
87 51 61 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 93 21 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
11 1 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 1 89 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 2 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
87 31 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 658;
}
);
note = C.001;
},
{
glyphname = D.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"800 382 OFFCURVE",
"800 403 OFFCURVE",
"800 413 QCURVE SMOOTH",
"800 517 OFFCURVE",
"745 590 QCURVE SMOOTH",
"696 657 OFFCURVE",
"606 689 QCURVE",
"656 738 OFFCURVE",
"713 738 QCURVE SMOOTH",
"734 738 OFFCURVE",
"749 731 QCURVE",
"753 730 OFFCURVE",
"756 735 QCURVE SMOOTH",
"758 740 OFFCURVE",
"751 743 QCURVE SMOOTH",
"724 754 OFFCURVE",
"698 754 QCURVE SMOOTH",
"630 754 OFFCURVE",
"569 700 QCURVE",
"520 713 OFFCURVE",
"462 713 QCURVE SMOOTH",
"277 713 OFFCURVE",
"135 597 QCURVE SMOOTH",
"9 493 OFFCURVE",
"9 396 QCURVE SMOOTH",
"9 352 OFFCURVE",
"36 327 QCURVE SMOOTH",
"62 301 OFFCURVE",
"104 301 QCURVE SMOOTH",
"155 301 OFFCURVE",
"215 341 QCURVE SMOOTH",
"290 393 OFFCURVE",
"319 481 QCURVE SMOOTH",
"321 487 OFFCURVE",
"316 489 QCURVE",
"311 489 OFFCURVE",
"308 481 QCURVE SMOOTH",
"281 412 OFFCURVE",
"210 363 QCURVE SMOOTH",
"139 315 OFFCURVE",
"97 315 QCURVE SMOOTH",
"50 315 OFFCURVE",
"50 365 QCURVE SMOOTH",
"50 408 OFFCURVE",
"86 465 QCURVE SMOOTH",
"126 529 OFFCURVE",
"195 586 QCURVE SMOOTH",
"325 694 OFFCURVE",
"464 694 QCURVE SMOOTH",
"510 694 OFFCURVE",
"549 681 QCURVE",
"506 634 OFFCURVE",
"427 469 QCURVE SMOOTH",
"410 434 OFFCURVE",
"376 356 OFFCURVE",
"355 313 QCURVE SMOOTH",
"308 219 OFFCURVE",
"237 101 OFFCURVE",
"215 73 QCURVE SMOOTH",
"154 -5 OFFCURVE",
"71 -28 QCURVE SMOOTH",
"60 -31 OFFCURVE",
"48 -31 QCURVE SMOOTH",
"2 -31 OFFCURVE",
"-9 -2 QCURVE",
"4 -14 OFFCURVE",
"22 -14 QCURVE SMOOTH",
"41 -14 OFFCURVE",
"58 1 QCURVE SMOOTH",
"74 14 OFFCURVE",
"77 35 QCURVE SMOOTH",
"80 54 OFFCURVE",
"67 70 QCURVE SMOOTH",
"55 84 OFFCURVE",
"34 84 QCURVE SMOOTH",
"5 84 OFFCURVE",
"-16 61 QCURVE SMOOTH",
"-36 37 OFFCURVE",
"-35 8 QCURVE SMOOTH",
"-32 -65 OFFCURVE",
"69 -57 QCURVE SMOOTH",
"166 -49 OFFCURVE",
"267 47 QCURVE",
"260 32 OFFCURVE",
"260 16 QCURVE SMOOTH",
"260 -49 OFFCURVE",
"361 -49 QCURVE SMOOTH",
"368 -49 OFFCURVE",
"381 -48 OFFCURVE",
"389 -47 QCURVE SMOOTH",
"554 -32 OFFCURVE",
"668 90 QCURVE SMOOTH",
"782 210 OFFCURVE",
"798 371 QCURVE",
"798 371 LINE"
);
},
{
closed = 1;
nodes = (
"705 205 OFFCURVE",
"622 102 QCURVE SMOOTH",
"527 -14 OFFCURVE",
"385 -29 QCURVE SMOOTH",
"302 -38 OFFCURVE",
"302 14 QCURVE SMOOTH",
"302 53 OFFCURVE",
"368 112 QCURVE SMOOTH",
"407 146 OFFCURVE",
"475 166 QCURVE SMOOTH",
"541 184 OFFCURVE",
"588 180 QCURVE SMOOTH",
"600 178 OFFCURVE",
"600 186 QCURVE SMOOTH",
"600 191 OFFCURVE",
"593 191 QCURVE SMOOTH",
"562 193 OFFCURVE",
"499 188 OFFCURVE",
"467 181 QCURVE SMOOTH",
"390 166 OFFCURVE",
"343 132 QCURVE SMOOTH",
"341 131 LINE",
"357 153 OFFCURVE",
"383 192 OFFCURVE",
"393 212 QCURVE SMOOTH",
"433 292 OFFCURVE",
"450 340 QCURVE SMOOTH",
"463 375 OFFCURVE",
"486 447 OFFCURVE",
"499 482 QCURVE SMOOTH",
"525 553 OFFCURVE",
"569 644 OFFCURVE",
"586 667 QCURVE",
"729 598 OFFCURVE",
"729 413 QCURVE SMOOTH",
"729 399 OFFCURVE",
"727 370 OFFCURVE",
"725 355 QCURVE",
"725 355 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
51 3 69 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
126 3 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
97 3 91 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 33 values pushed */
6 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 150 126 166 126 182 126 198 126 214 126 230 126 246 126 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 126 21 126 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
11 9 126 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
43 69 91 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 51 21 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 97 26 97 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
83 91 97 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
87 69 91 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
97 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
111 69 91 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
133 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
116 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
116 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
118 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
118 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
77 1 85 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
128 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
19 27 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 1 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 1 65 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 27 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
29 27 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
128 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
116 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
120 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 120 24 120 40 120 56 120 72 120 88 120 104 120 120 120 136 120 152 120 168 120 184 120 200 120 216 120 232 120 248 120 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 120 24 120 40 120 56 120 72 120 88 120 104 120 120 120 136 120 152 120 168 120 184 120 200 120 216 120 232 120 248 120 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 120 24 120 40 120 56 120 72 120 88 120 104 120 120 120 136 120 152 120 168 120 184 120 200 120 216 120 232 120 248 120 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 765;
}
);
note = D.001;
},
{
glyphname = E.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"695 545 OFFCURVE",
"695 603 QCURVE SMOOTH",
"695 640 OFFCURVE",
"661 662 QCURVE SMOOTH",
"627 685 OFFCURVE",
"573 685 QCURVE SMOOTH",
"561 685 OFFCURVE",
"536 683 OFFCURVE",
"523 681 QCURVE SMOOTH",
"398 660 OFFCURVE",
"330 592 QCURVE SMOOTH",
"273 535 OFFCURVE",
"273 464 QCURVE SMOOTH",
"273 443 OFFCURVE",
"277 427 QCURVE",
"237 428 OFFCURVE",
"197 438 QCURVE SMOOTH",
"132 453 OFFCURVE",
"94 495 QCURVE SMOOTH",
"61 532 OFFCURVE",
"61 578 QCURVE SMOOTH",
"61 628 OFFCURVE",
"98 659 QCURVE SMOOTH",
"138 693 OFFCURVE",
"208 690 QCURVE SMOOTH",
"273 687 OFFCURVE",
"340 655 QCURVE SMOOTH",
"346 652 OFFCURVE",
"349 658 QCURVE",
"350 664 OFFCURVE",
"346 667 QCURVE",
"277 700 OFFCURVE",
"209 703 QCURVE SMOOTH",
"118 707 OFFCURVE",
"60 668 QCURVE SMOOTH",
"8 631 OFFCURVE",
"8 577 QCURVE SMOOTH",
"8 528 OFFCURVE",
"50 488 QCURVE SMOOTH",
"96 444 OFFCURVE",
"179 424 QCURVE SMOOTH",
"202 419 OFFCURVE",
"253 412 OFFCURVE",
"282 411 QCURVE",
"290 393 OFFCURVE",
"301 377 QCURVE",
"167 364 OFFCURVE",
"85 285 QCURVE SMOOTH",
"11 214 OFFCURVE",
"11 125 QCURVE SMOOTH",
"11 45 OFFCURVE",
"72 -6 QCURVE SMOOTH",
"139 -63 OFFCURVE",
"261 -63 QCURVE SMOOTH",
"386 -63 OFFCURVE",
"487 17 QCURVE SMOOTH",
"579 91 OFFCURVE",
"579 165 QCURVE SMOOTH",
"579 244 OFFCURVE",
"463 244 QCURVE SMOOTH",
"454 244 OFFCURVE",
"436 243 OFFCURVE",
"426 242 QCURVE SMOOTH",
"347 235 OFFCURVE",
"263 172 QCURVE SMOOTH",
"195 122 OFFCURVE",
"179 85 QCURVE SMOOTH",
"177 79 OFFCURVE",
"183 76 QCURVE SMOOTH",
"189 73 OFFCURVE",
"191 79 QCURVE SMOOTH",
"205 109 OFFCURVE",
"279 161 QCURVE SMOOTH",
"362 219 OFFCURVE",
"415 219 QCURVE SMOOTH",
"527 219 OFFCURVE",
"527 147 QCURVE SMOOTH",
"527 84 OFFCURVE",
"447 19 QCURVE SMOOTH",
"361 -50 OFFCURVE",
"261 -50 QCURVE SMOOTH",
"186 -50 OFFCURVE",
"146 -1 QCURVE SMOOTH",
"109 42 OFFCURVE",
"109 112 QCURVE SMOOTH",
"109 198 OFFCURVE",
"162 271 QCURVE SMOOTH",
"221 349 OFFCURVE",
"313 364 QCURVE",
"348 329 OFFCURVE",
"399 329 QCURVE SMOOTH",
"438 329 OFFCURVE",
"438 352 QCURVE SMOOTH",
"438 376 OFFCURVE",
"402 379 QCURVE SMOOTH",
"385 380 OFFCURVE",
"351 381 OFFCURVE",
"334 380 QCURVE",
"327 395 OFFCURVE",
"326 411 QCURVE",
"511 417 OFFCURVE",
"614 488 QCURVE",
"614 488 LINE"
);
},
{
closed = 1;
nodes = (
"482 435 OFFCURVE",
"326 428 QCURVE",
"332 509 OFFCURVE",
"408 576 QCURVE SMOOTH",
"500 658 OFFCURVE",
"599 658 QCURVE SMOOTH",
"672 658 OFFCURVE",
"672 613 QCURVE SMOOTH",
"672 569 OFFCURVE",
"587 509 QCURVE",
"587 509 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
81 3 65 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 3 44 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
104 4 100 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 25 26 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
56 65 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 81 21 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
87 65 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
9 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 153 104 169 104 185 104 201 104 217 104 233 104 249 104 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 153 104 169 104 185 104 201 104 217 104 233 104 249 104 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 153 104 169 104 185 104 201 104 217 104 233 104 249 104 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
100 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
113 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
21 1 48 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 1 77 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 2 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 11 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
106 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 586;
}
);
note = E.001;
},
{
glyphname = F.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"897 676 OFFCURVE",
"897 681 QCURVE SMOOTH",
"897 687 OFFCURVE",
"891 687 QCURVE SMOOTH",
"884 687 OFFCURVE",
"881 677 QCURVE SMOOTH",
"875 652 OFFCURVE",
"826 639 QCURVE SMOOTH",
"806 634 OFFCURVE",
"765 628 OFFCURVE",
"745 630 QCURVE SMOOTH",
"713 632 OFFCURVE",
"608 649 OFFCURVE",
"533 664 QCURVE SMOOTH",
"464 678 OFFCURVE",
"359 692 OFFCURVE",
"321 692 QCURVE SMOOTH",
"217 692 OFFCURVE",
"131 649 QCURVE SMOOTH",
"76 621 OFFCURVE",
"49 578 QCURVE SMOOTH",
"20 534 OFFCURVE",
"20 486 QCURVE SMOOTH",
"20 430 OFFCURVE",
"56 394 QCURVE SMOOTH",
"95 354 OFFCURVE",
"167 349 QCURVE SMOOTH",
"269 343 OFFCURVE",
"355 405 QCURVE SMOOTH",
"428 458 OFFCURVE",
"467 549 QCURVE SMOOTH",
"470 557 OFFCURVE",
"461 557 QCURVE SMOOTH",
"452 557 OFFCURVE",
"448 550 QCURVE SMOOTH",
"426 510 OFFCURVE",
"370 448 OFFCURVE",
"335 424 QCURVE SMOOTH",
"245 361 OFFCURVE",
"166 367 QCURVE SMOOTH",
"66 374 OFFCURVE",
"66 451 QCURVE SMOOTH",
"66 487 OFFCURVE",
"91 527 QCURVE SMOOTH",
"115 564 OFFCURVE",
"156 592 QCURVE SMOOTH",
"227 639 OFFCURVE",
"338 639 QCURVE SMOOTH",
"370 639 OFFCURVE",
"462 630 OFFCURVE",
"522 620 QCURVE SMOOTH",
"655 599 OFFCURVE",
"705 596 QCURVE SMOOTH",
"733 594 OFFCURVE",
"785 599 OFFCURVE",
"809 607 QCURVE SMOOTH",
"873 626 OFFCURVE",
"894 672 QCURVE",
"894 672 LINE"
);
},
{
closed = 1;
nodes = (
"706 570 OFFCURVE",
"708 576 QCURVE SMOOTH",
"709 580 OFFCURVE",
"701 582 QCURVE SMOOTH",
"683 585 OFFCURVE",
"666 585 QCURVE SMOOTH",
"604 585 OFFCURVE",
"493 495 OFFCURVE",
"445 403 QCURVE SMOOTH",
"397 310 LINE",
"259 301 OFFCURVE",
"196 279 QCURVE SMOOTH",
"108 249 OFFCURVE",
"108 186 QCURVE SMOOTH",
"108 159 OFFCURVE",
"124 134 QCURVE SMOOTH",
"141 109 OFFCURVE",
"162 98 QCURVE SMOOTH",
"167 96 OFFCURVE",
"170 101 QCURVE SMOOTH",
"173 107 OFFCURVE",
"168 110 QCURVE SMOOTH",
"137 126 OFFCURVE",
"137 163 QCURVE SMOOTH",
"137 222 OFFCURVE",
"233 255 QCURVE SMOOTH",
"296 276 OFFCURVE",
"385 288 QCURVE",
"359 237 OFFCURVE",
"308 152 OFFCURVE",
"284 116 QCURVE SMOOTH",
"243 54 OFFCURVE",
"206 26 QCURVE SMOOTH",
"166 -5 OFFCURVE",
"114 -11 QCURVE SMOOTH",
"86 -14 OFFCURVE",
"67 -6 QCURVE SMOOTH",
"43 3 OFFCURVE",
"40 24 QCURVE",
"54 10 OFFCURVE",
"72 10 QCURVE SMOOTH",
"92 10 OFFCURVE",
"109 25 QCURVE SMOOTH",
"124 39 OFFCURVE",
"126 59 QCURVE SMOOTH",
"128 80 OFFCURVE",
"115 94 QCURVE SMOOTH",
"101 108 OFFCURVE",
"82 108 QCURVE SMOOTH",
"53 108 OFFCURVE",
"33 85 QCURVE SMOOTH",
"12 61 OFFCURVE",
"15 32 QCURVE SMOOTH",
"18 -1 OFFCURVE",
"46 -20 QCURVE SMOOTH",
"80 -44 OFFCURVE",
"131 -44 QCURVE SMOOTH",
"205 -44 OFFCURVE",
"266 -1 QCURVE SMOOTH",
"381 81 OFFCURVE",
"468 297 QCURVE",
"527 302 OFFCURVE",
"536 303 QCURVE",
"522 266 OFFCURVE",
"523 221 QCURVE",
"524 215 OFFCURVE",
"530 214 QCURVE SMOOTH",
"536 214 OFFCURVE",
"536 220 QCURVE SMOOTH",
"537 243 OFFCURVE",
"546 285 OFFCURVE",
"556 305 QCURVE",
"576 308 OFFCURVE",
"590 311 QCURVE",
"659 332 OFFCURVE",
"659 368 QCURVE SMOOTH",
"659 390 OFFCURVE",
"634 390 QCURVE SMOOTH",
"621 390 OFFCURVE",
"607 382 QCURVE SMOOTH",
"558 356 OFFCURVE",
"542 322 QCURVE",
"516 319 OFFCURVE",
"476 316 QCURVE",
"489 349 OFFCURVE",
"508 398 OFFCURVE",
"515 414 QCURVE SMOOTH",
"579 574 OFFCURVE",
"680 574 QCURVE SMOOTH",
"685 574 OFFCURVE",
"696 573 OFFCURVE",
"701 572 QCURVE",
"701 572 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 3 35 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
126 4 136 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 4 81 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 16 21 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
66 97 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
9 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
111 35 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
122 97 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 150 126 166 126 182 126 198 126 214 126 230 126 246 126 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 150 126 166 126 182 126 198 126 214 126 230 126 246 126 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 150 126 166 126 182 126 198 126 214 126 230 126 246 126 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
151 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
101 109 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
144 1 61 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 1 31 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
68 1 87 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
111 109 101 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
140 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
140 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 571;
}
);
note = F.001;
},
{
glyphname = G.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"757 576 OFFCURVE",
"757 641 QCURVE SMOOTH",
"757 705 OFFCURVE",
"634 705 QCURVE SMOOTH",
"497 705 OFFCURVE",
"352 621 QCURVE",
"276 688 OFFCURVE",
"173 688 QCURVE SMOOTH",
"113 688 OFFCURVE",
"70 662 QCURVE SMOOTH",
"17 631 OFFCURVE",
"12 575 QCURVE SMOOTH",
"7 525 OFFCURVE",
"48 480 QCURVE SMOOTH",
"82 442 OFFCURVE",
"135 420 QCURVE",
"61 304 OFFCURVE",
"61 186 QCURVE SMOOTH",
"61 101 OFFCURVE",
"105 51 QCURVE SMOOTH",
"155 -5 OFFCURVE",
"256 -5 QCURVE SMOOTH",
"381 -5 OFFCURVE",
"506 177 QCURVE",
"429 0 OFFCURVE",
"335 -138 QCURVE SMOOTH",
"233 -286 OFFCURVE",
"128 -286 QCURVE SMOOTH",
"75 -286 OFFCURVE",
"71 -253 QCURVE",
"84 -268 OFFCURVE",
"105 -268 QCURVE SMOOTH",
"124 -268 OFFCURVE",
"141 -253 QCURVE SMOOTH",
"157 -240 OFFCURVE",
"159 -219 QCURVE SMOOTH",
"161 -198 OFFCURVE",
"148 -184 QCURVE SMOOTH",
"134 -170 OFFCURVE",
"115 -170 QCURVE SMOOTH",
"56 -170 OFFCURVE",
"55 -240 QCURVE SMOOTH",
"53 -282 OFFCURVE",
"90 -305 QCURVE SMOOTH",
"119 -324 OFFCURVE",
"160 -324 QCURVE SMOOTH",
"232 -324 OFFCURVE",
"312 -264 QCURVE SMOOTH",
"360 -228 OFFCURVE",
"435 -126 OFFCURVE",
"458 -57 QCURVE SMOOTH",
"478 4 OFFCURVE",
"513 127 OFFCURVE",
"532 189 QCURVE SMOOTH",
"542 219 OFFCURVE",
"547 221 QCURVE",
"570 242 OFFCURVE",
"579 254 QCURVE SMOOTH",
"619 303 OFFCURVE",
"619 339 QCURVE SMOOTH",
"619 372 OFFCURVE",
"591 372 QCURVE SMOOTH",
"563 372 OFFCURVE",
"543 334 QCURVE SMOOTH",
"537 321 OFFCURVE",
"529 294 OFFCURVE",
"527 278 QCURVE",
"526 276 OFFCURVE",
"523 235 QCURVE",
"519 228 LINE",
"455 138 OFFCURVE",
"408 94 QCURVE SMOOTH",
"332 24 OFFCURVE",
"256 24 QCURVE SMOOTH",
"205 24 OFFCURVE",
"170 59 QCURVE SMOOTH",
"136 93 OFFCURVE",
"136 158 QCURVE SMOOTH",
"136 265 OFFCURVE",
"221 398 QCURVE",
"236 396 OFFCURVE",
"268 394 OFFCURVE",
"285 394 QCURVE SMOOTH",
"501 394 OFFCURVE",
"650 499 QCURVE",
"650 499 LINE"
);
},
{
closed = 1;
nodes = (
"719 686 OFFCURVE",
"719 649 QCURVE SMOOTH",
"719 623 OFFCURVE",
"691 588 QCURVE SMOOTH",
"664 555 OFFCURVE",
"636 535 QCURVE SMOOTH",
"576 492 OFFCURVE",
"450 438 OFFCURVE",
"383 425 QCURVE SMOOTH",
"335 416 OFFCURVE",
"288 416 QCURVE SMOOTH",
"275 416 OFFCURVE",
"250 418 OFFCURVE",
"236 420 QCURVE",
"294 505 OFFCURVE",
"371 570 QCURVE",
"394 541 OFFCURVE",
"405 524 QCURVE SMOOTH",
"410 517 OFFCURVE",
"418 519 QCURVE SMOOTH",
"426 521 OFFCURVE",
"423 527 QCURVE SMOOTH",
"410 557 OFFCURVE",
"388 583 QCURVE",
"521 686 OFFCURVE",
"657 686 QCURVE",
"657 686 LINE"
);
},
{
closed = 1;
nodes = (
"220 539 OFFCURVE",
"151 444 QCURVE",
"48 489 OFFCURVE",
"55 580 QCURVE SMOOTH",
"59 623 OFFCURVE",
"94 646 QCURVE SMOOTH",
"125 667 OFFCURVE",
"170 667 QCURVE SMOOTH",
"253 667 OFFCURVE",
"330 608 QCURVE",
"330 608 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
109 3 83 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
117 3 73 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 117 22 117 38 117 54 117 70 117 86 117 102 117 118 117 134 117 150 117 166 117 182 117 198 117 214 117 230 117 246 117 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 117 21 117 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
55 117 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
61 73 83 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
97 73 83 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
10 109 26 109 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 109 25 109 41 109 57 109 73 109 89 109 105 109 121 109 137 109 153 109 169 109 185 109 201 109 217 109 233 109 249 109 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
111 73 83 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
122 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
113 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
100 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
100 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
69 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
97 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
63 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
57 2 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
45 53 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
100 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 25 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 12 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
199 11 215 11 231 11 247 11 4 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
55 53 45 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
61 63 113 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
111 63 113 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 603;
}
);
note = G.001;
},
{
glyphname = H.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1047 720 OFFCURVE",
"1047 727 QCURVE SMOOTH",
"1047 733 OFFCURVE",
"1035 732 QCURVE SMOOTH",
"942 720 OFFCURVE",
"844 582 QCURVE SMOOTH",
"810 534 OFFCURVE",
"751 426 OFFCURVE",
"726 366 QCURVE SMOOTH",
"670 229 OFFCURVE",
"668 128 QCURVE",
"649 165 OFFCURVE",
"607 235 OFFCURVE",
"582 269 QCURVE SMOOTH",
"550 312 OFFCURVE",
"513 344 QCURVE",
"526 373 OFFCURVE",
"557 454 OFFCURVE",
"576 505 QCURVE SMOOTH",
"591 547 OFFCURVE",
"617 604 OFFCURVE",
"628 620 QCURVE SMOOTH",
"659 664 OFFCURVE",
"707 682 QCURVE",
"742 659 OFFCURVE",
"764 657 QCURVE SMOOTH",
"787 656 OFFCURVE",
"803 665 QCURVE SMOOTH",
"817 673 OFFCURVE",
"817 685 QCURVE SMOOTH",
"817 710 OFFCURVE",
"766 710 QCURVE SMOOTH",
"739 710 OFFCURVE",
"705 701 QCURVE",
"628 714 OFFCURVE",
"538 714 QCURVE SMOOTH",
"264 714 OFFCURVE",
"173 608 QCURVE SMOOTH",
"142 573 OFFCURVE",
"142 536 QCURVE SMOOTH",
"142 495 OFFCURVE",
"180 472 QCURVE SMOOTH",
"212 452 OFFCURVE",
"256 452 QCURVE SMOOTH",
"312 452 OFFCURVE",
"372 480 QCURVE SMOOTH",
"434 509 OFFCURVE",
"464 548 QCURVE SMOOTH",
"465 549 OFFCURVE",
"465 552 QCURVE SMOOTH",
"465 557 OFFCURVE",
"461 558 QCURVE SMOOTH",
"456 560 OFFCURVE",
"452 556 QCURVE SMOOTH",
"369 476 OFFCURVE",
"272 476 QCURVE SMOOTH",
"257 476 OFFCURVE",
"244 479 QCURVE SMOOTH",
"203 487 OFFCURVE",
"203 522 QCURVE SMOOTH",
"203 552 OFFCURVE",
"231 587 QCURVE SMOOTH",
"261 623 OFFCURVE",
"310 652 QCURVE SMOOTH",
"386 697 OFFCURVE",
"570 697 QCURVE SMOOTH",
"601 697 OFFCURVE",
"656 694 OFFCURVE",
"681 690 QCURVE",
"622 669 OFFCURVE",
"576 614 QCURVE SMOOTH",
"538 570 OFFCURVE",
"497 489 QCURVE SMOOTH",
"446 390 LINE",
"401 410 OFFCURVE",
"366 410 QCURVE SMOOTH",
"327 410 OFFCURVE",
"305 388 QCURVE SMOOTH",
"282 367 OFFCURVE",
"282 328 QCURVE SMOOTH",
"282 268 OFFCURVE",
"337 189 QCURVE",
"332 181 OFFCURVE",
"322 164 OFFCURVE",
"317 156 QCURVE SMOOTH",
"223 2 OFFCURVE",
"106 -28 QCURVE SMOOTH",
"95 -31 OFFCURVE",
"84 -31 QCURVE SMOOTH",
"30 -31 OFFCURVE",
"26 5 QCURVE",
"36 -14 OFFCURVE",
"57 -14 QCURVE SMOOTH",
"102 -15 OFFCURVE",
"106 30 QCURVE SMOOTH",
"108 51 OFFCURVE",
"95 65 QCURVE SMOOTH",
"82 81 OFFCURVE",
"63 81 QCURVE SMOOTH",
"37 81 OFFCURVE",
"19 58 QCURVE SMOOTH",
"1 35 OFFCURVE",
"1 8 QCURVE SMOOTH",
"3 -65 OFFCURVE",
"104 -57 QCURVE SMOOTH",
"208 -50 OFFCURVE",
"299 34 QCURVE SMOOTH",
"348 79 OFFCURVE",
"387 128 QCURVE",
"445 72 OFFCURVE",
"513 42 QCURVE SMOOTH",
"517 40 OFFCURVE",
"521 44 QCURVE",
"524 49 OFFCURVE",
"519 51 QCURVE",
"453 87 OFFCURVE",
"401 145 QCURVE",
"427 180 OFFCURVE",
"474 261 OFFCURVE",
"496 307 QCURVE",
"512 294 OFFCURVE",
"542 265 OFFCURVE",
"557 248 QCURVE SMOOTH",
"577 226 OFFCURVE",
"615 171 OFFCURVE",
"635 139 QCURVE SMOOTH",
"652 111 OFFCURVE",
"671 72 OFFCURVE",
"676 59 QCURVE SMOOTH",
"703 -24 OFFCURVE",
"777 -15 QCURVE SMOOTH",
"827 -9 OFFCURVE",
"876 70 QCURVE SMOOTH",
"888 89 OFFCURVE",
"943 201 QCURVE SMOOTH",
"948 211 OFFCURVE",
"948 217 QCURVE SMOOTH",
"948 226 OFFCURVE",
"943 224 QCURVE SMOOTH",
"937 222 OFFCURVE",
"933 212 QCURVE SMOOTH",
"880 104 OFFCURVE",
"843 56 QCURVE SMOOTH",
"799 0 OFFCURVE",
"770 7 QCURVE SMOOTH",
"736 14 OFFCURVE",
"736 91 QCURVE SMOOTH",
"736 184 OFFCURVE",
"784 333 QCURVE SMOOTH",
"832 483 OFFCURVE",
"899 592 QCURVE SMOOTH",
"973 712 OFFCURVE",
"1041 720 QCURVE",
"1041 720 LINE"
);
},
{
closed = 1;
nodes = (
"405 311 OFFCURVE",
"368 243 OFFCURVE",
"351 214 QCURVE",
"322 266 OFFCURVE",
"322 302 QCURVE SMOOTH",
"322 359 OFFCURVE",
"378 359 QCURVE SMOOTH",
"401 359 OFFCURVE",
"425 349 QCURVE",
"425 349 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
93 3 113 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
157 3 73 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 3 50 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 58 21 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
62 50 58 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 93 21 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 157 22 157 38 157 54 157 70 157 86 157 102 157 118 157 134 157 150 157 166 157 182 157 198 157 214 157 230 157 246 157 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 157 21 157 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
77 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
64 2 48 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
119 1 129 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
54 60 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
97 2 109 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
42 60 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
62 60 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
84 129 119 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
119 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
155 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
217 155 233 155 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
8 155 24 155 40 155 56 155 72 155 88 155 104 155 120 155 136 155 152 155 168 155 184 155 200 155 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 854;
}
);
note = H.001;
},
{
glyphname = I.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"685 725 OFFCURVE",
"651 705 QCURVE",
"559 680 OFFCURVE",
"401 626 OFFCURVE",
"333 595 QCURVE SMOOTH",
"278 570 OFFCURVE",
"194 509 OFFCURVE",
"162 472 QCURVE SMOOTH",
"105 406 OFFCURVE",
"105 346 QCURVE SMOOTH",
"105 307 OFFCURVE",
"131 283 QCURVE SMOOTH",
"157 260 OFFCURVE",
"206 260 QCURVE SMOOTH",
"213 260 OFFCURVE",
"225 261 OFFCURVE",
"232 262 QCURVE SMOOTH",
"255 265 OFFCURVE",
"300 276 OFFCURVE",
"321 285 QCURVE SMOOTH",
"330 288 OFFCURVE",
"328 297 QCURVE SMOOTH",
"327 305 OFFCURVE",
"320 302 QCURVE SMOOTH",
"271 277 OFFCURVE",
"231 281 QCURVE SMOOTH",
"167 288 OFFCURVE",
"167 342 QCURVE SMOOTH",
"167 374 OFFCURVE",
"192 421 QCURVE SMOOTH",
"213 460 OFFCURVE",
"238 485 QCURVE SMOOTH",
"311 558 OFFCURVE",
"414 606 QCURVE SMOOTH",
"493 643 OFFCURVE",
"615 677 QCURVE",
"558 624 OFFCURVE",
"486 472 QCURVE SMOOTH",
"391 271 OFFCURVE",
"298 119 QCURVE SMOOTH",
"204 -35 OFFCURVE",
"87 -65 QCURVE SMOOTH",
"76 -68 OFFCURVE",
"66 -68 QCURVE SMOOTH",
"11 -68 OFFCURVE",
"7 -32 QCURVE",
"18 -52 OFFCURVE",
"38 -52 QCURVE SMOOTH",
"83 -53 OFFCURVE",
"87 -7 QCURVE SMOOTH",
"89 14 OFFCURVE",
"76 28 QCURVE SMOOTH",
"64 43 OFFCURVE",
"44 43 QCURVE SMOOTH",
"18 43 OFFCURVE",
"0 21 QCURVE SMOOTH",
"-18 -2 OFFCURVE",
"-18 -29 QCURVE SMOOTH",
"-16 -102 OFFCURVE",
"85 -94 QCURVE SMOOTH",
"264 -80 OFFCURVE",
"391 117 QCURVE SMOOTH",
"471 243 OFFCURVE",
"542 478 QCURVE SMOOTH",
"591 644 OFFCURVE",
"647 685 QCURVE",
"658 685 LINE",
"688 674 OFFCURVE",
"713 674 QCURVE SMOOTH",
"744 674 OFFCURVE",
"763 687 QCURVE SMOOTH",
"782 700 OFFCURVE",
"782 715 QCURVE SMOOTH",
"782 736 OFFCURVE",
"747 736 QCURVE SMOOTH",
"734 736 OFFCURVE",
"719 733 QCURVE",
"719 733 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
49 3 67 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 3 19 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 27 21 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
31 19 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 49 21 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
33 2 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
23 29 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
31 29 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 495;
}
);
note = I.001;
},
{
glyphname = J.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"787 657 OFFCURVE",
"801 666 QCURVE SMOOTH",
"815 675 OFFCURVE",
"815 687 QCURVE SMOOTH",
"815 713 OFFCURVE",
"766 713 QCURVE SMOOTH",
"742 713 OFFCURVE",
"704 702 QCURVE",
"665 709 OFFCURVE",
"583 715 OFFCURVE",
"539 715 QCURVE SMOOTH",
"266 715 OFFCURVE",
"173 608 QCURVE SMOOTH",
"142 573 OFFCURVE",
"142 536 QCURVE SMOOTH",
"142 495 OFFCURVE",
"180 472 QCURVE SMOOTH",
"212 452 OFFCURVE",
"256 452 QCURVE SMOOTH",
"312 452 OFFCURVE",
"372 480 QCURVE SMOOTH",
"434 509 OFFCURVE",
"464 548 QCURVE SMOOTH",
"467 553 OFFCURVE",
"466 556 QCURVE SMOOTH",
"465 560 OFFCURVE",
"461 560 QCURVE SMOOTH",
"459 560 OFFCURVE",
"457 558 QCURVE SMOOTH",
"423 524 OFFCURVE",
"372 501 QCURVE SMOOTH",
"321 476 OFFCURVE",
"271 476 QCURVE SMOOTH",
"257 476 OFFCURVE",
"244 479 QCURVE SMOOTH",
"202 486 OFFCURVE",
"202 522 QCURVE SMOOTH",
"202 550 OFFCURVE",
"231 587 QCURVE SMOOTH",
"258 621 OFFCURVE",
"310 652 QCURVE SMOOTH",
"386 697 OFFCURVE",
"570 697 QCURVE SMOOTH",
"601 697 OFFCURVE",
"656 694 OFFCURVE",
"681 690 QCURVE",
"622 669 OFFCURVE",
"576 614 QCURVE SMOOTH",
"557 592 OFFCURVE",
"518 530 OFFCURVE",
"497 489 QCURVE SMOOTH",
"486 468 OFFCURVE",
"442 377 OFFCURVE",
"410 305 QCURVE SMOOTH",
"381 242 OFFCURVE",
"333 143 OFFCURVE",
"313 108 QCURVE",
"170 86 OFFCURVE",
"64 46 QCURVE SMOOTH",
"-100 -17 OFFCURVE",
"-119 -112 QCURVE SMOOTH",
"-122 -126 OFFCURVE",
"-122 -136 QCURVE SMOOTH",
"-122 -204 OFFCURVE",
"-24 -204 QCURVE SMOOTH",
"29 -204 OFFCURVE",
"89 -186 QCURVE SMOOTH",
"273 -132 OFFCURVE",
"406 101 QCURVE",
"473 108 OFFCURVE",
"531 107 QCURVE SMOOTH",
"546 107 OFFCURVE",
"546 115 QCURVE SMOOTH",
"546 119 OFFCURVE",
"534 121 QCURVE SMOOTH",
"491 126 OFFCURVE",
"417 120 QCURVE",
"440 162 OFFCURVE",
"486 262 OFFCURVE",
"509 321 QCURVE SMOOTH",
"513 330 OFFCURVE",
"546 421 OFFCURVE",
"576 505 QCURVE SMOOTH",
"607 590 OFFCURVE",
"628 621 QCURVE SMOOTH",
"657 665 OFFCURVE",
"706 683 QCURVE",
"741 660 OFFCURVE",
"763 658 QCURVE",
"763 658 LINE"
);
},
{
closed = 1;
nodes = (
"196 -90 OFFCURVE",
"75 -152 QCURVE SMOOTH",
"20 -180 OFFCURVE",
"-25 -180 QCURVE SMOOTH",
"-93 -180 OFFCURVE",
"-93 -129 QCURVE SMOOTH",
"-93 -69 OFFCURVE",
"6 -10 QCURVE SMOOTH",
"112 51 OFFCURVE",
"300 86 QCURVE",
"300 86 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
52 3 74 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
93 4 26 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 52 21 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
95 2 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
78 1 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 2 70 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 549;
}
);
note = J.001;
},
{
glyphname = K.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1122 599 OFFCURVE",
"1137 618 QCURVE SMOOTH",
"1150 634 OFFCURVE",
"1150 661 QCURVE SMOOTH",
"1150 697 OFFCURVE",
"1120 717 QCURVE SMOOTH",
"1092 736 OFFCURVE",
"1047 736 QCURVE SMOOTH",
"988 736 OFFCURVE",
"945 708 QCURVE SMOOTH",
"908 685 OFFCURVE",
"836 606 OFFCURVE",
"801 549 QCURVE SMOOTH",
"771 500 OFFCURVE",
"715 402 OFFCURVE",
"686 354 QCURVE SMOOTH",
"653 299 OFFCURVE",
"588 225 OFFCURVE",
"556 205 QCURVE",
"540 236 OFFCURVE",
"513 292 OFFCURVE",
"502 318 QCURVE",
"517 352 OFFCURVE",
"554 445 OFFCURVE",
"576 505 QCURVE SMOOTH",
"631 658 OFFCURVE",
"707 685 QCURVE",
"735 667 OFFCURVE",
"755 665 QCURVE SMOOTH",
"798 664 OFFCURVE",
"798 688 QCURVE SMOOTH",
"798 709 OFFCURVE",
"756 709 QCURVE SMOOTH",
"737 709 OFFCURVE",
"705 701 QCURVE",
"700 702 OFFCURVE",
"696 703 OFFCURVE",
"697 703 QCURVE SMOOTH",
"644 713 OFFCURVE",
"559 713 QCURVE SMOOTH",
"440 713 OFFCURVE",
"340 690 QCURVE SMOOTH",
"220 663 OFFCURVE",
"173 608 QCURVE SMOOTH",
"142 573 OFFCURVE",
"142 536 QCURVE SMOOTH",
"142 495 OFFCURVE",
"180 472 QCURVE SMOOTH",
"212 452 OFFCURVE",
"256 452 QCURVE SMOOTH",
"312 452 OFFCURVE",
"372 480 QCURVE SMOOTH",
"434 509 OFFCURVE",
"464 548 QCURVE SMOOTH",
"465 549 OFFCURVE",
"465 552 QCURVE SMOOTH",
"465 557 OFFCURVE",
"461 558 QCURVE SMOOTH",
"456 560 OFFCURVE",
"452 556 QCURVE SMOOTH",
"369 476 OFFCURVE",
"272 476 QCURVE SMOOTH",
"257 476 OFFCURVE",
"244 479 QCURVE SMOOTH",
"202 486 OFFCURVE",
"202 522 QCURVE SMOOTH",
"202 550 OFFCURVE",
"231 587 QCURVE SMOOTH",
"258 621 OFFCURVE",
"310 652 QCURVE SMOOTH",
"386 697 OFFCURVE",
"571 697 QCURVE SMOOTH",
"602 697 OFFCURVE",
"656 694 OFFCURVE",
"681 690 QCURVE",
"622 669 OFFCURVE",
"576 614 QCURVE SMOOTH",
"538 570 OFFCURVE",
"497 489 QCURVE SMOOTH",
"456 410 LINE",
"427 439 OFFCURVE",
"388 439 QCURVE SMOOTH",
"339 439 OFFCURVE",
"311 402 QCURVE SMOOTH",
"283 365 OFFCURVE",
"283 316 QCURVE SMOOTH",
"283 238 OFFCURVE",
"338 192 QCURVE",
"317 156 LINE SMOOTH",
"223 2 OFFCURVE",
"106 -28 QCURVE SMOOTH",
"95 -31 OFFCURVE",
"84 -31 QCURVE SMOOTH",
"30 -31 OFFCURVE",
"26 5 QCURVE",
"36 -14 OFFCURVE",
"57 -14 QCURVE SMOOTH",
"102 -15 OFFCURVE",
"106 30 QCURVE SMOOTH",
"108 51 OFFCURVE",
"95 65 QCURVE SMOOTH",
"82 81 OFFCURVE",
"63 81 QCURVE SMOOTH",
"37 81 OFFCURVE",
"19 58 QCURVE SMOOTH",
"1 35 OFFCURVE",
"1 8 QCURVE SMOOTH",
"3 -65 OFFCURVE",
"104 -57 QCURVE SMOOTH",
"208 -50 OFFCURVE",
"299 34 QCURVE SMOOTH",
"331 63 OFFCURVE",
"387 126 OFFCURVE",
"411 159 QCURVE",
"426 156 OFFCURVE",
"443 156 QCURVE SMOOTH",
"466 156 OFFCURVE",
"510 164 OFFCURVE",
"532 173 QCURVE",
"650 -142 OFFCURVE",
"783 -142 QCURVE SMOOTH",
"842 -142 OFFCURVE",
"881 -94 QCURVE SMOOTH",
"919 -48 OFFCURVE",
"919 11 QCURVE SMOOTH",
"919 68 OFFCURVE",
"890 124 QCURVE SMOOTH",
"885 133 OFFCURVE",
"882 133 QCURVE SMOOTH",
"875 133 OFFCURVE",
"881 118 QCURVE SMOOTH",
"897 77 OFFCURVE",
"896 22 QCURVE SMOOTH",
"894 -19 OFFCURVE",
"878 -49 QCURVE SMOOTH",
"858 -85 OFFCURVE",
"820 -85 QCURVE SMOOTH",
"765 -85 OFFCURVE",
"690 3 QCURVE SMOOTH",
"627 77 OFFCURVE",
"565 189 QCURVE",
"597 207 OFFCURVE",
"660 265 OFFCURVE",
"693 305 QCURVE SMOOTH",
"733 354 OFFCURVE",
"801 455 QCURVE SMOOTH",
"834 506 OFFCURVE",
"882 573 OFFCURVE",
"897 591 QCURVE SMOOTH",
"992 704 OFFCURVE",
"1079 701 QCURVE SMOOTH",
"1099 701 OFFCURVE",
"1119 686 QCURVE SMOOTH",
"1139 672 OFFCURVE",
"1137 652 QCURVE",
"1131 674 OFFCURVE",
"1106 674 QCURVE SMOOTH",
"1071 674 OFFCURVE",
"1071 637 QCURVE SMOOTH",
"1071 608 OFFCURVE",
"1097 603 QCURVE",
"1097 603 LINE"
);
},
{
closed = 1;
nodes = (
"491 175 OFFCURVE",
"452 175 QCURVE SMOOTH",
"444 175 OFFCURVE",
"431 176 OFFCURVE",
"424 177 QCURVE",
"458 229 OFFCURVE",
"490 294 QCURVE",
"501 262 OFFCURVE",
"519 210 OFFCURVE",
"526 190 QCURVE",
"526 190 LINE"
);
},
{
closed = 1;
nodes = (
"418 335 OFFCURVE",
"373 251 OFFCURVE",
"354 219 QCURVE",
"329 253 OFFCURVE",
"329 300 QCURVE SMOOTH",
"329 338 OFFCURVE",
"347 368 QCURVE SMOOTH",
"368 402 OFFCURVE",
"404 402 QCURVE SMOOTH",
"425 402 OFFCURVE",
"444 386 QCURVE",
"444 386 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
95 3 115 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
177 3 75 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 4 36 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 3 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 3 157 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 2 26 2 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
6 157 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
9 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
6 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 62 21 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
66 54 62 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
81 54 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
86 54 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 95 22 95 38 95 54 95 70 95 86 95 102 95 118 95 134 95 150 95 166 95 182 95 198 95 214 95 230 95 246 95 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 95 21 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
107 54 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
164 54 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
166 54 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 177 22 177 38 177 54 177 70 177 86 177 102 177 118 177 134 177 150 177 166 177 182 177 198 177 214 177 230 177 246 177 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 177 21 177 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
179 54 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
157 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
183 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
166 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
166 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
169 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
169 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
24 40 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
121 1 89 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
68 2 52 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 2 111 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
169 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
173 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 173 24 173 40 173 56 173 72 173 88 173 104 173 120 173 136 173 152 173 168 173 184 173 200 173 216 173 232 173 248 173 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 173 24 173 40 173 56 173 72 173 88 173 104 173 120 173 136 173 152 173 168 173 184 173 200 173 216 173 232 173 248 173 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 173 24 173 40 173 56 173 72 173 88 173 104 173 120 173 136 173 152 173 168 173 184 173 200 173 216 173 232 173 248 173 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
81 79 173 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
123 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
128 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
164 42 79 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
179 42 79 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 919;
}
);
note = K.001;
},
{
glyphname = L.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"792 711 OFFCURVE",
"711 711 QCURVE SMOOTH",
"654 711 OFFCURVE",
"586 683 QCURVE SMOOTH",
"519 655 OFFCURVE",
"476 617 QCURVE SMOOTH",
"428 573 OFFCURVE",
"346 456 OFFCURVE",
"314 379 QCURVE SMOOTH",
"287 314 OFFCURVE",
"236 185 OFFCURVE",
"209 120 QCURVE SMOOTH",
"203 106 OFFCURVE",
"191 82 OFFCURVE",
"185 71 QCURVE",
"182 72 LINE SMOOTH",
"146 84 OFFCURVE",
"109 84 QCURVE SMOOTH",
"72 84 OFFCURVE",
"47 72 QCURVE SMOOTH",
"-4 48 OFFCURVE",
"-7 6 QCURVE SMOOTH",
"-9 -18 OFFCURVE",
"9 -33 QCURVE SMOOTH",
"26 -47 OFFCURVE",
"49 -47 QCURVE SMOOTH",
"121 -47 OFFCURVE",
"193 33 QCURVE",
"238 11 OFFCURVE",
"328 -33 OFFCURVE",
"373 -55 QCURVE SMOOTH",
"426 -81 OFFCURVE",
"519 -105 OFFCURVE",
"559 -105 QCURVE SMOOTH",
"576 -105 OFFCURVE",
"610 -102 OFFCURVE",
"627 -97 QCURVE SMOOTH",
"680 -84 OFFCURVE",
"716 -40 QCURVE SMOOTH",
"749 0 OFFCURVE",
"749 49 QCURVE SMOOTH",
"749 137 OFFCURVE",
"654 167 QCURVE SMOOTH",
"624 177 OFFCURVE",
"587 177 QCURVE SMOOTH",
"537 177 OFFCURVE",
"495 159 QCURVE SMOOTH",
"427 131 OFFCURVE",
"380 63 QCURVE SMOOTH",
"379 62 OFFCURVE",
"379 60 QCURVE SMOOTH",
"379 55 OFFCURVE",
"385 54 QCURVE SMOOTH",
"390 53 OFFCURVE",
"395 58 QCURVE SMOOTH",
"446 115 OFFCURVE",
"507 140 QCURVE SMOOTH",
"556 160 OFFCURVE",
"602 160 QCURVE SMOOTH",
"628 160 OFFCURVE",
"652 152 QCURVE SMOOTH",
"720 129 OFFCURVE",
"720 78 QCURVE SMOOTH",
"720 44 OFFCURVE",
"692 12 QCURVE SMOOTH",
"663 -21 OFFCURVE",
"622 -36 QCURVE SMOOTH",
"605 -42 OFFCURVE",
"568 -49 OFFCURVE",
"548 -49 QCURVE SMOOTH",
"483 -49 OFFCURVE",
"384 -10 QCURVE SMOOTH",
"341 7 OFFCURVE",
"257 43 OFFCURVE",
"215 60 QCURVE",
"249 103 OFFCURVE",
"282 163 QCURVE SMOOTH",
"352 291 OFFCURVE",
"446 457 OFFCURVE",
"471 495 QCURVE SMOOTH",
"570 649 OFFCURVE",
"687 682 QCURVE SMOOTH",
"699 685 OFFCURVE",
"712 685 QCURVE SMOOTH",
"765 685 OFFCURVE",
"768 651 QCURVE",
"758 670 OFFCURVE",
"736 670 QCURVE SMOOTH",
"692 670 OFFCURVE",
"686 624 QCURVE SMOOTH",
"683 604 OFFCURVE",
"696 590 QCURVE SMOOTH",
"710 576 OFFCURVE",
"729 576 QCURVE SMOOTH",
"754 576 OFFCURVE",
"774 599 QCURVE SMOOTH",
"792 621 OFFCURVE",
"792 649 QCURVE",
"792 649 LINE"
);
},
{
closed = 1;
nodes = (
"114 -27 OFFCURVE",
"54 -27 QCURVE SMOOTH",
"37 -27 OFFCURVE",
"27 -17 QCURVE SMOOTH",
"16 -8 OFFCURVE",
"18 6 QCURVE SMOOTH",
"23 59 OFFCURVE",
"98 60 QCURVE SMOOTH",
"114 59 OFFCURVE",
"148 51 OFFCURVE",
"167 44 QCURVE",
"167 44 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
109 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
109 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 33 values pushed */
9 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 76 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
98 76 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
103 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
28 64 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 2 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 4 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 2 101 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 4 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 39 24 39 40 39 56 39 72 39 88 39 104 39 120 39 136 39 152 39 168 39 184 39 200 39 216 39 232 39 248 39 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 39 24 39 40 39 56 39 72 39 88 39 104 39 120 39 136 39 152 39 168 39 184 39 200 39 216 39 232 39 248 39 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 39 24 39 40 39 56 39 72 39 88 39 104 39 120 39 136 39 152 39 168 39 184 39 200 39 216 39 232 39 248 39 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
107 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 762;
}
);
note = L.001;
},
{
glyphname = M.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1157 728 OFFCURVE",
"1075 728 QCURVE SMOOTH",
"1070 728 OFFCURVE",
"1060 728 OFFCURVE",
"1055 727 QCURVE SMOOTH",
"1022 724 OFFCURVE",
"1024 722 QCURVE",
"1011 720 OFFCURVE",
"990 716 OFFCURVE",
"982 713 QCURVE SMOOTH",
"872 677 OFFCURVE",
"760 562 QCURVE SMOOTH",
"712 513 OFFCURVE",
"625 397 OFFCURVE",
"584 328 QCURVE",
"572 515 OFFCURVE",
"497 643 QCURVE SMOOTH",
"410 788 OFFCURVE",
"271 787 QCURVE SMOOTH",
"190 785 OFFCURVE",
"137 734 QCURVE SMOOTH",
"80 680 OFFCURVE",
"80 596 QCURVE SMOOTH",
"80 546 OFFCURVE",
"100 497 QCURVE SMOOTH",
"140 396 OFFCURVE",
"244 341 QCURVE",
"248 338 OFFCURVE",
"253 343 QCURVE",
"256 349 OFFCURVE",
"250 352 QCURVE SMOOTH",
"172 396 OFFCURVE",
"130 497 QCURVE SMOOTH",
"118 528 OFFCURVE",
"118 560 QCURVE SMOOTH",
"118 624 OFFCURVE",
"165 669 QCURVE SMOOTH",
"211 714 OFFCURVE",
"277 714 QCURVE SMOOTH",
"374 714 OFFCURVE",
"445 611 QCURVE SMOOTH",
"530 487 OFFCURVE",
"540 248 QCURVE",
"460 80 OFFCURVE",
"460 7 QCURVE SMOOTH",
"460 -32 OFFCURVE",
"484 -32 QCURVE SMOOTH",
"502 -32 OFFCURVE",
"511 -21 QCURVE SMOOTH",
"587 74 OFFCURVE",
"585 279 QCURVE",
"676 430 OFFCURVE",
"786 543 QCURVE SMOOTH",
"915 675 OFFCURVE",
"1025 706 QCURVE",
"966 668 OFFCURVE",
"905 582 QCURVE SMOOTH",
"831 478 OFFCURVE",
"779 366 QCURVE SMOOTH",
"714 224 OFFCURVE",
"714 129 QCURVE SMOOTH",
"714 49 OFFCURVE",
"758 10 QCURVE SMOOTH",
"792 -20 OFFCURVE",
"837 -15 QCURVE SMOOTH",
"886 -9 OFFCURVE",
"936 70 QCURVE SMOOTH",
"949 89 OFFCURVE",
"1004 201 QCURVE SMOOTH",
"1008 209 OFFCURVE",
"1008 217 QCURVE SMOOTH",
"1008 226 OFFCURVE",
"1003 224 QCURVE SMOOTH",
"997 222 OFFCURVE",
"993 212 QCURVE SMOOTH",
"940 104 OFFCURVE",
"903 56 QCURVE SMOOTH",
"860 1 OFFCURVE",
"831 7 QCURVE SMOOTH",
"799 15 OFFCURVE",
"799 90 QCURVE SMOOTH",
"799 186 OFFCURVE",
"844 335 QCURVE SMOOTH",
"891 489 OFFCURVE",
"953 591 QCURVE SMOOTH",
"1025 708 OFFCURVE",
"1088 702 QCURVE SMOOTH",
"1133 697 OFFCURVE",
"1137 669 QCURVE",
"1126 687 OFFCURVE",
"1104 687 QCURVE SMOOTH",
"1058 687 OFFCURVE",
"1057 642 QCURVE SMOOTH",
"1055 622 OFFCURVE",
"1070 608 QCURVE",
"1082 594 OFFCURVE",
"1104 594 QCURVE SMOOTH",
"1130 594 OFFCURVE",
"1147 617 QCURVE SMOOTH",
"1163 639 OFFCURVE",
"1162 666 QCURVE",
"1162 666 LINE"
);
},
{
closed = 1;
nodes = (
"428 578 OFFCURVE",
"427 585 QCURVE SMOOTH",
"426 592 OFFCURVE",
"421 592 QCURVE SMOOTH",
"416 592 OFFCURVE",
"410 574 QCURVE SMOOTH",
"367 444 OFFCURVE",
"265 228 OFFCURVE",
"205 140 QCURVE SMOOTH",
"87 -35 OFFCURVE",
"-20 -65 QCURVE SMOOTH",
"-31 -68 OFFCURVE",
"-40 -68 QCURVE SMOOTH",
"-61 -68 OFFCURVE",
"-78 -57 QCURVE SMOOTH",
"-95 -47 OFFCURVE",
"-96 -30 QCURVE",
"-83 -49 OFFCURVE",
"-59 -49 QCURVE SMOOTH",
"-40 -49 OFFCURVE",
"-23 -34 QCURVE SMOOTH",
"-7 -21 OFFCURVE",
"-5 0 QCURVE SMOOTH",
"-3 21 OFFCURVE",
"-16 35 QCURVE SMOOTH",
"-30 49 OFFCURVE",
"-49 49 QCURVE SMOOTH",
"-77 49 OFFCURVE",
"-94 29 QCURVE SMOOTH",
"-112 8 OFFCURVE",
"-112 -20 QCURVE SMOOTH",
"-112 -51 OFFCURVE",
"-92 -71 QCURVE SMOOTH",
"-70 -95 OFFCURVE",
"-27 -95 QCURVE SMOOTH",
"-2 -95 OFFCURVE",
"25 -88 QCURVE SMOOTH",
"196 -43 OFFCURVE",
"317 230 QCURVE SMOOTH",
"343 290 OFFCURVE",
"398 460 OFFCURVE",
"427 572 QCURVE",
"427 572 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
66 3 78 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
120 3 112 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 3 20 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 8 26 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
12 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
10 40 26 40 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 40 25 40 41 40 57 40 73 40 89 40 105 40 121 40 137 40 153 40 169 40 185 40 201 40 217 40 233 40 249 40 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
46 112 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 66 21 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
86 112 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 120 21 120 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
126 112 120 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
130 2 108 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
116 124 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 2 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 4 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 4 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
46 14 96 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
126 124 116 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
139 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
139 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 918;
}
);
note = M.001;
},
{
glyphname = N.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"702 -42 OFFCURVE",
"731 -42 QCURVE SMOOTH",
"747 -42 OFFCURVE",
"757 -29 QCURVE SMOOTH",
"767 -16 OFFCURVE",
"767 0 QCURVE SMOOTH",
"767 27 OFFCURVE",
"747 54 QCURVE SMOOTH",
"746 55 OFFCURVE",
"730 73 OFFCURVE",
"714 92 QCURVE",
"709 226 OFFCURVE",
"807 441 QCURVE SMOOTH",
"907 663 OFFCURVE",
"1006 724 QCURVE SMOOTH",
"1019 732 OFFCURVE",
"1045 739 OFFCURVE",
"1059 739 QCURVE SMOOTH",
"1100 739 OFFCURVE",
"1104 710 QCURVE",
"1094 726 OFFCURVE",
"1074 726 QCURVE SMOOTH",
"1033 726 OFFCURVE",
"1031 685 QCURVE SMOOTH",
"1030 667 OFFCURVE",
"1043 654 QCURVE SMOOTH",
"1055 641 OFFCURVE",
"1074 641 QCURVE SMOOTH",
"1096 641 OFFCURVE",
"1113 662 QCURVE SMOOTH",
"1128 681 OFFCURVE",
"1126 707 QCURVE SMOOTH",
"1123 752 OFFCURVE",
"1051 752 QCURVE SMOOTH",
"888 752 OFFCURVE",
"785 527 QCURVE SMOOTH",
"702 343 OFFCURVE",
"699 150 QCURVE SMOOTH",
"699 116 OFFCURVE",
"698 116 QCURVE SMOOTH",
"694 116 OFFCURVE",
"684 146 QCURVE SMOOTH",
"598 391 OFFCURVE",
"598 568 QCURVE SMOOTH",
"598 684 OFFCURVE",
"646 713 QCURVE",
"679 694 OFFCURVE",
"697 693 QCURVE SMOOTH",
"719 692 OFFCURVE",
"734 700 QCURVE SMOOTH",
"747 707 OFFCURVE",
"747 719 QCURVE SMOOTH",
"747 744 OFFCURVE",
"699 744 QCURVE SMOOTH",
"681 744 OFFCURVE",
"662 740 QCURVE",
"652 744 OFFCURVE",
"636 736 QCURVE",
"629 737 OFFCURVE",
"620 738 OFFCURVE",
"618 738 QCURVE SMOOTH",
"591 741 OFFCURVE",
"533 747 OFFCURVE",
"501 747 QCURVE SMOOTH",
"441 747 OFFCURVE",
"335 733 OFFCURVE",
"286 719 QCURVE SMOOTH",
"170 686 OFFCURVE",
"117 624 QCURVE SMOOTH",
"80 581 OFFCURVE",
"80 546 QCURVE SMOOTH",
"80 509 OFFCURVE",
"117 487 QCURVE SMOOTH",
"154 465 OFFCURVE",
"210 465 QCURVE SMOOTH",
"273 465 OFFCURVE",
"333 494 QCURVE SMOOTH",
"393 523 OFFCURVE",
"423 562 QCURVE SMOOTH",
"424 563 OFFCURVE",
"424 565 QCURVE SMOOTH",
"424 572 OFFCURVE",
"416 572 QCURVE SMOOTH",
"414 572 OFFCURVE",
"410 570 QCURVE",
"371 531 OFFCURVE",
"317 507 QCURVE SMOOTH",
"263 484 OFFCURVE",
"221 484 QCURVE SMOOTH",
"148 484 OFFCURVE",
"148 538 QCURVE SMOOTH",
"148 604 OFFCURVE",
"261 670 QCURVE SMOOTH",
"284 683 OFFCURVE",
"343 705 OFFCURVE",
"380 713 QCURVE SMOOTH",
"417 721 OFFCURVE",
"490 729 OFFCURVE",
"526 729 QCURVE SMOOTH",
"546 729 OFFCURVE",
"581 727 OFFCURVE",
"597 724 QCURVE SMOOTH",
"607 722 OFFCURVE",
"615 721 QCURVE",
"530 648 OFFCURVE",
"468 548 QCURVE SMOOTH",
"428 482 OFFCURVE",
"372 358 QCURVE SMOOTH",
"341 289 OFFCURVE",
"293 188 OFFCURVE",
"275 156 QCURVE SMOOTH",
"168 -34 OFFCURVE",
"55 -64 QCURVE SMOOTH",
"44 -67 OFFCURVE",
"34 -67 QCURVE SMOOTH",
"-21 -67 OFFCURVE",
"-27 -31 QCURVE",
"-16 -51 OFFCURVE",
"6 -51 QCURVE SMOOTH",
"50 -53 OFFCURVE",
"52 -6 QCURVE SMOOTH",
"53 13 OFFCURVE",
"39 29 QCURVE SMOOTH",
"25 42 OFFCURVE",
"6 44 QCURVE SMOOTH",
"-20 46 OFFCURVE",
"-37 22 QCURVE SMOOTH",
"-53 0 OFFCURVE",
"-52 -28 QCURVE SMOOTH",
"-48 -95 OFFCURVE",
"31 -95 QCURVE SMOOTH",
"37 -95 OFFCURVE",
"49 -94 OFFCURVE",
"55 -93 QCURVE SMOOTH",
"233 -64 OFFCURVE",
"333 108 QCURVE SMOOTH",
"381 190 OFFCURVE",
"457 434 QCURVE SMOOTH",
"516 625 OFFCURVE",
"578 666 QCURVE",
"559 622 OFFCURVE",
"559 552 QCURVE SMOOTH",
"559 440 OFFCURVE",
"607 287 QCURVE SMOOTH",
"647 158 OFFCURVE",
"694 82 QCURVE",
"684 32 OFFCURVE",
"692 0 QCURVE",
"692 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 3 104 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 3 77 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
124 3 116 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 3 19 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 6 26 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
8 104 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 27 21 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
31 19 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
44 19 116 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 57 22 57 38 57 54 57 70 57 86 57 102 57 118 57 134 57 150 57 166 57 182 57 198 57 214 57 230 57 246 57 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 57 21 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 124 26 124 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
128 116 124 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
116 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
149 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
33 2 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
114 1 130 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
23 29 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
126 120 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 1 73 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 120 126 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
31 29 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
44 120 126 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
126 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
128 120 126 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 861;
}
);
note = N.001;
},
{
glyphname = O.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"804 585 OFFCURVE",
"804 617 QCURVE SMOOTH",
"804 693 OFFCURVE",
"664 693 QCURVE SMOOTH",
"514 693 OFFCURVE",
"372 599 QCURVE",
"286 671 OFFCURVE",
"176 671 QCURVE SMOOTH",
"112 671 OFFCURVE",
"67 644 QCURVE SMOOTH",
"13 612 OFFCURVE",
"13 553 QCURVE SMOOTH",
"13 493 OFFCURVE",
"62 443 QCURVE SMOOTH",
"83 421 OFFCURVE",
"136 389 OFFCURVE",
"167 378 QCURVE",
"105 262 OFFCURVE",
"105 152 QCURVE SMOOTH",
"105 52 OFFCURVE",
"159 -6 QCURVE SMOOTH",
"211 -64 OFFCURVE",
"311 -64 QCURVE SMOOTH",
"454 -64 OFFCURVE",
"576 32 QCURVE SMOOTH",
"683 117 OFFCURVE",
"754 258 QCURVE SMOOTH",
"802 355 OFFCURVE",
"802 442 QCURVE SMOOTH",
"802 505 OFFCURVE",
"777 546 QCURVE",
"777 546 LINE"
);
},
{
closed = 1;
nodes = (
"761 605 OFFCURVE",
"747 579 QCURVE",
"713 605 OFFCURVE",
"666 605 QCURVE SMOOTH",
"626 605 OFFCURVE",
"575 585 QCURVE SMOOTH",
"564 580 OFFCURVE",
"564 572 QCURVE SMOOTH",
"564 566 OFFCURVE",
"571 566 QCURVE SMOOTH",
"575 566 OFFCURVE",
"577 567 QCURVE SMOOTH",
"607 581 OFFCURVE",
"633 581 QCURVE SMOOTH",
"682 581 OFFCURVE",
"714 537 QCURVE",
"706 529 OFFCURVE",
"691 515 OFFCURVE",
"682 508 QCURVE SMOOTH",
"622 461 OFFCURVE",
"491 404 OFFCURVE",
"419 390 QCURVE SMOOTH",
"348 378 OFFCURVE",
"271 385 QCURVE",
"326 473 OFFCURVE",
"400 539 QCURVE",
"411 525 OFFCURVE",
"429 504 OFFCURVE",
"434 497 QCURVE SMOOTH",
"439 489 OFFCURVE",
"448 491 QCURVE SMOOTH",
"457 492 OFFCURVE",
"452 500 QCURVE SMOOTH",
"437 528 OFFCURVE",
"417 553 QCURVE",
"559 672 OFFCURVE",
"691 672 QCURVE SMOOTH",
"761 672 OFFCURVE",
"761 627 QCURVE",
"761 627 LINE"
);
},
{
closed = 1;
nodes = (
"246 510 OFFCURVE",
"181 404 QCURVE",
"49 447 OFFCURVE",
"49 557 QCURVE SMOOTH",
"49 603 OFFCURVE",
"85 629 QCURVE SMOOTH",
"117 652 OFFCURVE",
"165 652 QCURVE SMOOTH",
"258 652 OFFCURVE",
"350 584 QCURVE",
"350 584 LINE"
);
},
{
closed = 1;
nodes = (
"747 465 OFFCURVE",
"747 420 QCURVE SMOOTH",
"747 338 OFFCURVE",
"705 254 QCURVE SMOOTH",
"675 194 OFFCURVE",
"598 95 OFFCURVE",
"552 53 QCURVE SMOOTH",
"443 -44 OFFCURVE",
"331 -44 QCURVE SMOOTH",
"255 -44 OFFCURVE",
"218 8 QCURVE SMOOTH",
"185 53 OFFCURVE",
"185 131 QCURVE SMOOTH",
"185 238 OFFCURVE",
"255 359 QCURVE",
"271 357 OFFCURVE",
"304 355 OFFCURVE",
"321 355 QCURVE SMOOTH",
"430 355 OFFCURVE",
"541 390 QCURVE SMOOTH",
"660 429 OFFCURVE",
"734 498 QCURVE",
"734 498 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
100 3 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 3 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
89 3 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
46 19 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
70 19 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 76 22 76 38 76 54 76 70 76 86 76 102 76 118 76 134 76 150 76 166 76 182 76 198 76 214 76 230 76 246 76 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 76 21 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
80 19 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 89 21 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 100 26 100 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 100 25 100 41 100 57 100 73 100 89 100 105 100 121 100 137 100 153 100 169 100 185 100 201 100 217 100 233 100 249 100 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
103 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
93 1 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
66 2 56 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
70 56 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 737;
}
);
note = O.001;
},
{
glyphname = P.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"789 613 OFFCURVE",
"724 661 QCURVE SMOOTH",
"678 695 OFFCURVE",
"596 696 QCURVE",
"639 735 OFFCURVE",
"689 735 QCURVE SMOOTH",
"711 735 OFFCURVE",
"729 726 QCURVE SMOOTH",
"734 723 OFFCURVE",
"736 732 QCURVE SMOOTH",
"738 740 OFFCURVE",
"731 743 QCURVE SMOOTH",
"704 754 OFFCURVE",
"678 754 QCURVE SMOOTH",
"612 754 OFFCURVE",
"551 701 QCURVE",
"539 702 OFFCURVE",
"514 702 OFFCURVE",
"501 702 QCURVE SMOOTH",
"432 702 OFFCURVE",
"303 683 OFFCURVE",
"243 665 QCURVE SMOOTH",
"106 623 OFFCURVE",
"59 552 QCURVE SMOOTH",
"31 510 OFFCURVE",
"31 470 QCURVE SMOOTH",
"31 425 OFFCURVE",
"64 395 QCURVE SMOOTH",
"95 365 OFFCURVE",
"153 365 QCURVE SMOOTH",
"276 365 OFFCURVE",
"343 459 QCURVE SMOOTH",
"356 476 OFFCURVE",
"378 517 OFFCURVE",
"386 541 QCURVE SMOOTH",
"391 553 OFFCURVE",
"397 579 OFFCURVE",
"402 592 QCURVE SMOOTH",
"405 603 OFFCURVE",
"397 603 QCURVE SMOOTH",
"392 603 OFFCURVE",
"389 596 QCURVE SMOOTH",
"375 556 OFFCURVE",
"345 497 OFFCURVE",
"328 476 QCURVE SMOOTH",
"258 388 OFFCURVE",
"146 388 QCURVE SMOOTH",
"55 388 OFFCURVE",
"55 451 QCURVE SMOOTH",
"55 482 OFFCURVE",
"84 519 QCURVE SMOOTH",
"146 596 OFFCURVE",
"280 641 QCURVE SMOOTH",
"407 683 OFFCURVE",
"529 679 QCURVE",
"515 663 OFFCURVE",
"490 628 OFFCURVE",
"480 606 QCURVE SMOOTH",
"348 313 LINE SMOOTH",
"309 225 OFFCURVE",
"245 104 OFFCURVE",
"219 71 QCURVE SMOOTH",
"160 -5 OFFCURVE",
"74 -28 QCURVE SMOOTH",
"63 -31 OFFCURVE",
"52 -31 QCURVE SMOOTH",
"-2 -31 OFFCURVE",
"-8 5 QCURVE",
"2 -14 OFFCURVE",
"24 -14 QCURVE SMOOTH",
"70 -16 OFFCURVE",
"71 30 QCURVE SMOOTH",
"72 49 OFFCURVE",
"58 65 QCURVE SMOOTH",
"44 81 OFFCURVE",
"25 81 QCURVE SMOOTH",
"-1 81 OFFCURVE",
"-18 58 QCURVE SMOOTH",
"-34 36 OFFCURVE",
"-33 8 QCURVE SMOOTH",
"-27 -64 OFFCURVE",
"73 -57 QCURVE SMOOTH",
"169 -49 OFFCURVE",
"266 45 QCURVE SMOOTH",
"348 125 OFFCURVE",
"389 212 QCURVE SMOOTH",
"407 250 OFFCURVE",
"432 311 OFFCURVE",
"440 333 QCURVE",
"550 324 OFFCURVE",
"656 382 QCURVE SMOOTH",
"774 446 OFFCURVE",
"783 548 QCURVE",
"783 548 LINE"
);
},
{
closed = 1;
nodes = (
"655 435 OFFCURVE",
"598 396 QCURVE SMOOTH",
"536 354 OFFCURVE",
"469 354 QCURVE SMOOTH",
"464 354 OFFCURVE",
"453 354 OFFCURVE",
"448 355 QCURVE",
"459 390 OFFCURVE",
"481 462 OFFCURVE",
"493 497 QCURVE SMOOTH",
"515 563 OFFCURVE",
"555 649 OFFCURVE",
"572 671 QCURVE",
"627 675 OFFCURVE",
"667 643 QCURVE SMOOTH",
"707 610 OFFCURVE",
"707 560 QCURVE SMOOTH",
"707 532 OFFCURVE",
"691 502 QCURVE",
"691 502 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
44 4 67 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
95 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
38 67 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
89 67 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
10 95 26 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 95 25 95 41 95 57 95 73 95 89 95 105 95 121 95 137 95 153 95 169 95 185 95 201 95 217 95 233 95 249 95 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
27 2 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
79 1 87 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 23 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 2 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
108 1 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
25 23 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 708;
}
);
note = P.001;
},
{
glyphname = Q.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"804 693 OFFCURVE",
"664 693 QCURVE SMOOTH",
"514 693 OFFCURVE",
"372 599 QCURVE",
"286 671 OFFCURVE",
"176 671 QCURVE SMOOTH",
"112 671 OFFCURVE",
"67 644 QCURVE SMOOTH",
"13 612 OFFCURVE",
"13 553 QCURVE SMOOTH",
"13 493 OFFCURVE",
"62 444 QCURVE SMOOTH",
"105 400 OFFCURVE",
"167 378 QCURVE",
"105 262 OFFCURVE",
"105 152 QCURVE SMOOTH",
"105 61 OFFCURVE",
"149 5 QCURVE SMOOTH",
"196 -55 OFFCURVE",
"285 -63 QCURVE",
"259 -83 OFFCURVE",
"206 -119 OFFCURVE",
"178 -133 QCURVE",
"101 -84 OFFCURVE",
"35 -84 QCURVE SMOOTH",
"18 -84 OFFCURVE",
"2 -87 QCURVE SMOOTH",
"-29 -93 OFFCURVE",
"-55 -109 QCURVE SMOOTH",
"-90 -130 OFFCURVE",
"-90 -154 QCURVE SMOOTH",
"-90 -195 OFFCURVE",
"8 -195 QCURVE SMOOTH",
"84 -195 OFFCURVE",
"158 -165 QCURVE",
"185 -185 OFFCURVE",
"239 -227 OFFCURVE",
"266 -248 QCURVE SMOOTH",
"325 -293 OFFCURVE",
"376 -314 QCURVE SMOOTH",
"408 -328 OFFCURVE",
"475 -339 OFFCURVE",
"511 -339 QCURVE SMOOTH",
"520 -339 LINE SMOOTH",
"538 -339 OFFCURVE",
"575 -332 OFFCURVE",
"594 -326 QCURVE SMOOTH",
"641 -310 OFFCURVE",
"681 -275 QCURVE SMOOTH",
"727 -232 OFFCURVE",
"727 -189 QCURVE SMOOTH",
"727 -138 OFFCURVE",
"666 -111 QCURVE SMOOTH",
"618 -90 OFFCURVE",
"559 -90 QCURVE SMOOTH",
"452 -90 OFFCURVE",
"350 -156 QCURVE SMOOTH",
"347 -158 OFFCURVE",
"347 -160 QCURVE SMOOTH",
"347 -165 OFFCURVE",
"355 -165 QCURVE SMOOTH",
"357 -165 OFFCURVE",
"363 -163 QCURVE",
"474 -108 OFFCURVE",
"570 -108 QCURVE SMOOTH",
"593 -108 OFFCURVE",
"634 -114 OFFCURVE",
"654 -122 QCURVE SMOOTH",
"706 -141 OFFCURVE",
"706 -179 QCURVE SMOOTH",
"706 -222 OFFCURVE",
"644 -254 QCURVE SMOOTH",
"597 -280 OFFCURVE",
"545 -286 QCURVE SMOOTH",
"537 -287 OFFCURVE",
"520 -288 OFFCURVE",
"512 -288 QCURVE SMOOTH",
"434 -288 OFFCURVE",
"346 -240 QCURVE SMOOTH",
"335 -235 OFFCURVE",
"262 -188 OFFCURVE",
"198 -146 QCURVE",
"261 -114 OFFCURVE",
"320 -64 QCURVE",
"462 -61 OFFCURVE",
"580 35 QCURVE SMOOTH",
"684 119 OFFCURVE",
"754 258 QCURVE SMOOTH",
"802 354 OFFCURVE",
"802 442 QCURVE SMOOTH",
"802 505 OFFCURVE",
"777 546 QCURVE",
"804 585 OFFCURVE",
"804 617 QCURVE",
"804 617 LINE"
);
},
{
closed = 1;
nodes = (
"761 605 OFFCURVE",
"747 579 QCURVE",
"713 605 OFFCURVE",
"666 605 QCURVE SMOOTH",
"655 605 OFFCURVE",
"625 602 OFFCURVE",
"608 597 QCURVE SMOOTH",
"564 586 OFFCURVE",
"564 572 QCURVE SMOOTH",
"564 566 OFFCURVE",
"571 566 QCURVE SMOOTH",
"574 566 OFFCURVE",
"577 567 QCURVE SMOOTH",
"610 581 OFFCURVE",
"633 581 QCURVE SMOOTH",
"682 581 OFFCURVE",
"714 537 QCURVE",
"664 487 OFFCURVE",
"577 444 QCURVE SMOOTH",
"535 424 OFFCURVE",
"457 398 OFFCURVE",
"419 390 QCURVE SMOOTH",
"399 386 OFFCURVE",
"355 382 OFFCURVE",
"330 382 QCURVE SMOOTH",
"299 382 OFFCURVE",
"271 385 QCURVE",
"326 473 OFFCURVE",
"400 539 QCURVE",
"411 525 OFFCURVE",
"429 504 OFFCURVE",
"434 497 QCURVE SMOOTH",
"438 491 OFFCURVE",
"446 491 QCURVE SMOOTH",
"454 491 OFFCURVE",
"454 496 QCURVE SMOOTH",
"454 509 OFFCURVE",
"417 553 QCURVE",
"559 672 OFFCURVE",
"691 672 QCURVE SMOOTH",
"761 672 OFFCURVE",
"761 627 QCURVE",
"761 627 LINE"
);
},
{
closed = 1;
nodes = (
"246 510 OFFCURVE",
"181 404 QCURVE",
"49 447 OFFCURVE",
"49 557 QCURVE SMOOTH",
"49 603 OFFCURVE",
"85 629 QCURVE SMOOTH",
"117 652 OFFCURVE",
"165 652 QCURVE SMOOTH",
"259 652 OFFCURVE",
"350 584 QCURVE",
"350 584 LINE"
);
},
{
closed = 1;
nodes = (
"747 336 OFFCURVE",
"705 254 QCURVE SMOOTH",
"647 139 OFFCURVE",
"559 59 QCURVE SMOOTH",
"452 -39 OFFCURVE",
"344 -43 QCURVE",
"426 33 OFFCURVE",
"426 92 QCURVE SMOOTH",
"426 159 OFFCURVE",
"370 159 QCURVE SMOOTH",
"343 159 OFFCURVE",
"324 141 QCURVE SMOOTH",
"306 124 OFFCURVE",
"306 98 QCURVE SMOOTH",
"306 81 OFFCURVE",
"317 67 QCURVE SMOOTH",
"327 55 OFFCURVE",
"345 55 QCURVE SMOOTH",
"378 55 OFFCURVE",
"394 89 QCURVE",
"393 34 OFFCURVE",
"309 -42 QCURVE",
"185 -29 OFFCURVE",
"185 131 QCURVE SMOOTH",
"185 238 OFFCURVE",
"255 359 QCURVE",
"271 357 OFFCURVE",
"304 355 OFFCURVE",
"321 355 QCURVE SMOOTH",
"430 355 OFFCURVE",
"541 390 QCURVE SMOOTH",
"660 429 OFFCURVE",
"734 498 QCURVE",
"747 465 OFFCURVE",
"747 420 QCURVE",
"747 420 LINE"
);
},
{
closed = 1;
nodes = (
"74 -178 OFFCURVE",
"9 -178 QCURVE SMOOTH",
"-61 -178 OFFCURVE",
"-61 -149 QCURVE SMOOTH",
"-61 -127 OFFCURVE",
"-27 -114 QCURVE SMOOTH",
"-1 -104 OFFCURVE",
"26 -104 QCURVE SMOOTH",
"71 -104 OFFCURVE",
"139 -151 QCURVE",
"139 -151 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
146 3 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
142 3 84 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
187 4 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
167 173 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
157 3 78 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
12 63 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
74 63 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
109 63 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
218 167 234 167 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 167 25 167 41 167 57 167 73 167 89 167 105 167 121 167 137 167 153 167 169 167 185 167 201 167 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
136 173 167 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 142 22 142 38 142 54 142 70 142 86 142 102 142 118 142 134 142 150 142 166 142 182 142 198 142 214 142 230 142 246 142 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 142 21 142 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 146 26 146 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 146 25 146 41 146 57 146 73 146 89 146 105 146 121 146 137 146 153 146 169 146 185 146 201 146 217 146 233 146 249 146 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
148 63 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 157 22 157 38 157 54 157 70 157 86 157 102 157 118 157 134 157 150 157 166 157 182 157 198 157 214 157 230 157 246 157 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 157 21 157 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
161 173 167 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
175 173 167 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
181 78 157 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 187 22 187 38 187 54 187 70 187 86 187 102 187 118 187 134 187 150 187 166 187 182 187 198 187 214 187 230 187 246 187 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 187 22 187 38 187 54 187 70 187 86 187 102 187 118 187 134 187 150 187 166 187 182 187 198 187 214 187 230 187 246 187 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 187 22 187 38 187 54 187 70 187 86 187 102 187 118 187 134 187 150 187 166 187 182 187 198 187 214 187 230 187 246 187 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
192 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
88 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
17 51 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
132 2 121 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
189 1 61 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 1 183 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
111 2 152 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
183 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
111 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
109 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
109 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
136 121 132 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
138 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
152 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
155 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
155 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 731;
}
);
note = Q.001;
},
{
glyphname = R.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"867 190 OFFCURVE",
"793 279 QCURVE SMOOTH",
"784 289 OFFCURVE",
"781 284 QCURVE SMOOTH",
"778 280 OFFCURVE",
"785 270 QCURVE SMOOTH",
"843 187 OFFCURVE",
"843 112 QCURVE SMOOTH",
"843 68 OFFCURVE",
"821 45 QCURVE SMOOTH",
"800 22 OFFCURVE",
"765 22 QCURVE SMOOTH",
"721 22 OFFCURVE",
"677 57 QCURVE SMOOTH",
"633 92 OFFCURVE",
"586 199 QCURVE SMOOTH",
"568 240 OFFCURVE",
"545 308 OFFCURVE",
"538 336 QCURVE",
"644 349 OFFCURVE",
"718 422 QCURVE SMOOTH",
"787 490 OFFCURVE",
"793 565 QCURVE SMOOTH",
"796 618 OFFCURVE",
"758 653 QCURVE SMOOTH",
"717 691 OFFCURVE",
"633 699 QCURVE",
"676 735 OFFCURVE",
"725 735 QCURVE SMOOTH",
"747 735 OFFCURVE",
"765 726 QCURVE SMOOTH",
"772 723 OFFCURVE",
"772 736 QCURVE SMOOTH",
"772 741 OFFCURVE",
"767 743 QCURVE SMOOTH",
"742 754 OFFCURVE",
"715 754 QCURVE SMOOTH",
"648 754 OFFCURVE",
"585 700 QCURVE",
"462 698 OFFCURVE",
"336 652 QCURVE SMOOTH",
"188 598 OFFCURVE",
"128 510 QCURVE SMOOTH",
"104 474 OFFCURVE",
"104 441 QCURVE SMOOTH",
"104 369 OFFCURVE",
"197 369 QCURVE SMOOTH",
"241 369 OFFCURVE",
"330 417 QCURVE SMOOTH",
"425 468 OFFCURVE",
"425 507 QCURVE SMOOTH",
"425 511 OFFCURVE",
"421 512 QCURVE SMOOTH",
"415 513 OFFCURVE",
"412 509 QCURVE SMOOTH",
"393 486 OFFCURVE",
"348 446 OFFCURVE",
"321 430 QCURVE SMOOTH",
"263 396 OFFCURVE",
"210 396 QCURVE SMOOTH",
"165 396 OFFCURVE",
"165 436 QCURVE SMOOTH",
"165 501 OFFCURVE",
"261 578 QCURVE SMOOTH",
"312 619 OFFCURVE",
"403 650 QCURVE SMOOTH",
"448 665 OFFCURVE",
"530 682 OFFCURVE",
"568 684 QCURVE",
"551 668 OFFCURVE",
"521 630 OFFCURVE",
"509 606 QCURVE SMOOTH",
"364 313 LINE SMOOTH",
"320 225 OFFCURVE",
"251 105 OFFCURVE",
"223 71 QCURVE SMOOTH",
"160 -6 OFFCURVE",
"73 -28 QCURVE SMOOTH",
"62 -31 OFFCURVE",
"52 -31 QCURVE SMOOTH",
"-3 -31 OFFCURVE",
"-7 5 QCURVE",
"3 -14 OFFCURVE",
"24 -14 QCURVE SMOOTH",
"69 -15 OFFCURVE",
"73 30 QCURVE SMOOTH",
"75 51 OFFCURVE",
"62 65 QCURVE SMOOTH",
"48 81 OFFCURVE",
"29 81 QCURVE SMOOTH",
"3 81 OFFCURVE",
"-15 58 QCURVE SMOOTH",
"-32 35 OFFCURVE",
"-32 8 QCURVE SMOOTH",
"-30 -65 OFFCURVE",
"71 -57 QCURVE SMOOTH",
"165 -50 OFFCURVE",
"269 45 QCURVE SMOOTH",
"356 126 OFFCURVE",
"400 212 QCURVE SMOOTH",
"441 292 OFFCURVE",
"460 340 QCURVE SMOOTH",
"556 586 LINE SMOOTH",
"579 645 OFFCURVE",
"615 683 QCURVE",
"674 675 OFFCURVE",
"704 639 QCURVE SMOOTH",
"730 607 OFFCURVE",
"727 559 QCURVE SMOOTH",
"723 490 OFFCURVE",
"663 427 QCURVE SMOOTH",
"600 361 OFFCURVE",
"518 352 QCURVE",
"556 102 OFFCURVE",
"619 25 QCURVE SMOOTH",
"667 -32 OFFCURVE",
"734 -32 QCURVE SMOOTH",
"787 -32 OFFCURVE",
"828 6 QCURVE SMOOTH",
"867 43 OFFCURVE",
"867 104 QCURVE",
"867 104 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
59 3 76 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
113 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 3 98 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 3 27 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 12 26 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 35 21 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
39 27 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
52 27 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 59 21 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
94 27 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
9 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
41 2 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 1 92 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
31 37 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 2 74 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
39 37 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 866;
}
);
note = R.001;
},
{
glyphname = S.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"734 651 OFFCURVE",
"706 651 QCURVE SMOOTH",
"660 651 OFFCURVE",
"659 606 QCURVE SMOOTH",
"657 586 OFFCURVE",
"672 572 QCURVE SMOOTH",
"687 557 OFFCURVE",
"706 557 QCURVE SMOOTH",
"731 557 OFFCURVE",
"748 581 QCURVE SMOOTH",
"765 606 OFFCURVE",
"765 635 QCURVE SMOOTH",
"765 679 OFFCURVE",
"732 702 QCURVE SMOOTH",
"686 733 OFFCURVE",
"597 733 QCURVE SMOOTH",
"519 733 OFFCURVE",
"452 696 QCURVE SMOOTH",
"378 655 OFFCURVE",
"365 591 QCURVE SMOOTH",
"362 577 OFFCURVE",
"362 563 QCURVE SMOOTH",
"362 506 OFFCURVE",
"415 455 QCURVE SMOOTH",
"429 441 OFFCURVE",
"479 405 OFFCURVE",
"516 381 QCURVE SMOOTH",
"661 288 OFFCURVE",
"661 172 QCURVE SMOOTH",
"661 71 OFFCURVE",
"561 10 QCURVE SMOOTH",
"503 -25 OFFCURVE",
"368 -65 OFFCURVE",
"289 -68 QCURVE SMOOTH",
"182 -73 OFFCURVE",
"124 -32 QCURVE SMOOTH",
"70 4 OFFCURVE",
"70 64 QCURVE SMOOTH",
"70 127 OFFCURVE",
"129 183 QCURVE SMOOTH",
"191 242 OFFCURVE",
"296 262 QCURVE SMOOTH",
"326 268 OFFCURVE",
"364 268 QCURVE SMOOTH",
"485 268 OFFCURVE",
"521 217 QCURVE SMOOTH",
"527 209 OFFCURVE",
"530 218 QCURVE SMOOTH",
"532 228 OFFCURVE",
"526 235 QCURVE SMOOTH",
"485 291 OFFCURVE",
"369 291 QCURVE SMOOTH",
"349 291 OFFCURVE",
"312 287 OFFCURVE",
"295 284 QCURVE SMOOTH",
"170 260 OFFCURVE",
"93 192 QCURVE SMOOTH",
"21 127 OFFCURVE",
"21 55 QCURVE SMOOTH",
"21 -11 OFFCURVE",
"86 -52 QCURVE SMOOTH",
"158 -96 OFFCURVE",
"289 -92 QCURVE SMOOTH",
"458 -86 OFFCURVE",
"593 -8 QCURVE SMOOTH",
"656 28 OFFCURVE",
"694 84 QCURVE SMOOTH",
"732 139 OFFCURVE",
"732 198 QCURVE SMOOTH",
"732 332 OFFCURVE",
"553 434 QCURVE SMOOTH",
"416 513 OFFCURVE",
"426 589 QCURVE SMOOTH",
"432 637 OFFCURVE",
"486 673 QCURVE SMOOTH",
"534 706 OFFCURVE",
"594 711 QCURVE SMOOTH",
"673 716 OFFCURVE",
"719 680 QCURVE SMOOTH",
"745 660 OFFCURVE",
"740 633 QCURVE",
"740 633 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
43 3 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
77 3 69 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 77 26 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
0 69 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 43 21 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
47 2 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
65 1 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
79 73 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 2 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 73 79 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 758;
}
);
note = S.001;
},
{
glyphname = T.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"940 641 OFFCURVE",
"940 648 QCURVE SMOOTH",
"940 662 OFFCURVE",
"924 653 QCURVE SMOOTH",
"882 628 OFFCURVE",
"806 633 QCURVE SMOOTH",
"741 638 OFFCURVE",
"585 669 QCURVE SMOOTH",
"445 697 OFFCURVE",
"365 697 QCURVE SMOOTH",
"256 697 OFFCURVE",
"166 653 QCURVE SMOOTH",
"111 625 OFFCURVE",
"81 578 QCURVE SMOOTH",
"51 531 OFFCURVE",
"51 483 QCURVE SMOOTH",
"51 427 OFFCURVE",
"89 387 QCURVE SMOOTH",
"129 346 OFFCURVE",
"204 341 QCURVE SMOOTH",
"313 335 OFFCURVE",
"400 398 QCURVE SMOOTH",
"439 427 OFFCURVE",
"497 501 OFFCURVE",
"517 548 QCURVE SMOOTH",
"521 557 OFFCURVE",
"510 557 QCURVE SMOOTH",
"502 557 OFFCURVE",
"497 549 QCURVE SMOOTH",
"474 508 OFFCURVE",
"414 444 OFFCURVE",
"379 418 QCURVE SMOOTH",
"287 353 OFFCURVE",
"203 359 QCURVE SMOOTH",
"99 367 OFFCURVE",
"99 446 QCURVE SMOOTH",
"99 484 OFFCURVE",
"125 525 QCURVE SMOOTH",
"150 565 OFFCURVE",
"192 593 QCURVE SMOOTH",
"265 642 OFFCURVE",
"383 642 QCURVE SMOOTH",
"412 642 OFFCURVE",
"487 636 OFFCURVE",
"532 629 QCURVE SMOOTH",
"570 623 OFFCURVE",
"645 611 OFFCURVE",
"683 606 QCURVE",
"584 577 OFFCURVE",
"502 422 QCURVE SMOOTH",
"482 384 OFFCURVE",
"442 308 OFFCURVE",
"422 270 QCURVE SMOOTH",
"400 229 OFFCURVE",
"356 157 OFFCURVE",
"333 124 QCURVE SMOOTH",
"243 -10 OFFCURVE",
"140 -10 QCURVE SMOOTH",
"96 -10 OFFCURVE",
"79 28 QCURVE",
"92 16 OFFCURVE",
"110 16 QCURVE SMOOTH",
"129 16 OFFCURVE",
"146 30 QCURVE SMOOTH",
"161 44 OFFCURVE",
"163 64 QCURVE SMOOTH",
"165 86 OFFCURVE",
"152 99 QCURVE SMOOTH",
"140 113 OFFCURVE",
"120 113 QCURVE SMOOTH",
"90 113 OFFCURVE",
"70 90 QCURVE SMOOTH",
"51 69 OFFCURVE",
"53 38 QCURVE SMOOTH",
"55 17 OFFCURVE",
"64 4 QCURVE SMOOTH",
"96 -43 OFFCURVE",
"175 -43 QCURVE SMOOTH",
"252 -43 OFFCURVE",
"315 2 QCURVE SMOOTH",
"407 68 OFFCURVE",
"474 198 QCURVE SMOOTH",
"490 229 OFFCURVE",
"574 434 QCURVE SMOOTH",
"637 589 OFFCURVE",
"733 600 QCURVE",
"741 599 OFFCURVE",
"757 598 OFFCURVE",
"765 597 QCURVE SMOOTH",
"866 591 OFFCURVE",
"932 636 QCURVE",
"932 636 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
55 3 75 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 33 values pushed */
6 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 55 21 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
31 75 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
33 2 13 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
81 49 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
21 29 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 2 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 1 71 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
31 29 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
43 2 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 630;
}
);
note = T.001;
},
{
glyphname = U.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"956 748 OFFCURVE",
"935 762 QCURVE SMOOTH",
"912 777 OFFCURVE",
"884 777 QCURVE SMOOTH",
"790 777 OFFCURVE",
"684 618 QCURVE SMOOTH",
"648 564 OFFCURVE",
"591 441 OFFCURVE",
"559 376 QCURVE SMOOTH",
"555 368 OFFCURVE",
"547 352 OFFCURVE",
"542 342 QCURVE SMOOTH",
"502 257 OFFCURVE",
"416 121 OFFCURVE",
"368 69 QCURVE SMOOTH",
"296 -10 OFFCURVE",
"240 -10 QCURVE SMOOTH",
"206 -10 OFFCURVE",
"190 20 QCURVE SMOOTH",
"173 51 OFFCURVE",
"176 101 QCURVE SMOOTH",
"178 136 OFFCURVE",
"205 215 OFFCURVE",
"228 260 QCURVE",
"252 264 OFFCURVE",
"306 280 OFFCURVE",
"336 291 QCURVE SMOOTH",
"346 295 OFFCURVE",
"346 302 QCURVE SMOOTH",
"346 309 OFFCURVE",
"338 309 QCURVE SMOOTH",
"335 309 OFFCURVE",
"332 308 QCURVE SMOOTH",
"281 288 OFFCURVE",
"238 280 QCURVE",
"263 322 OFFCURVE",
"312 405 OFFCURVE",
"335 448 QCURVE SMOOTH",
"385 542 OFFCURVE",
"379 621 QCURVE SMOOTH",
"370 735 OFFCURVE",
"268 735 QCURVE SMOOTH",
"207 735 OFFCURVE",
"151 676 QCURVE SMOOTH",
"128 653 OFFCURVE",
"91 597 OFFCURVE",
"75 565 QCURVE SMOOTH",
"32 478 OFFCURVE",
"32 401 QCURVE SMOOTH",
"32 267 OFFCURVE",
"162 258 QCURVE",
"124 170 OFFCURVE",
"121 108 QCURVE SMOOTH",
"118 41 OFFCURVE",
"145 7 QCURVE SMOOTH",
"173 -29 OFFCURVE",
"221 -29 QCURVE SMOOTH",
"296 -29 OFFCURVE",
"379 51 QCURVE SMOOTH",
"446 117 OFFCURVE",
"512 232 QCURVE",
"497 170 OFFCURVE",
"497 124 QCURVE SMOOTH",
"497 46 OFFCURVE",
"534 10 QCURVE SMOOTH",
"564 -20 OFFCURVE",
"606 -15 QCURVE SMOOTH",
"655 -9 OFFCURVE",
"705 70 QCURVE SMOOTH",
"718 89 OFFCURVE",
"773 201 QCURVE SMOOTH",
"777 209 OFFCURVE",
"777 217 QCURVE SMOOTH",
"777 226 OFFCURVE",
"772 224 QCURVE SMOOTH",
"766 222 OFFCURVE",
"762 212 QCURVE SMOOTH",
"709 104 OFFCURVE",
"672 56 QCURVE SMOOTH",
"629 1 OFFCURVE",
"599 7 QCURVE SMOOTH",
"566 14 OFFCURVE",
"566 91 QCURVE SMOOTH",
"566 128 OFFCURVE",
"589 244 OFFCURVE",
"612 324 QCURVE SMOOTH",
"664 501 OFFCURVE",
"727 618 QCURVE SMOOTH",
"807 764 OFFCURVE",
"882 764 QCURVE SMOOTH",
"903 764 OFFCURVE",
"921 752 QCURVE SMOOTH",
"937 741 OFFCURVE",
"939 722 QCURVE",
"925 742 OFFCURVE",
"902 742 QCURVE SMOOTH",
"856 742 OFFCURVE",
"855 697 QCURVE SMOOTH",
"853 677 OFFCURVE",
"868 663 QCURVE",
"880 649 OFFCURVE",
"902 649 QCURVE SMOOTH",
"929 649 OFFCURVE",
"946 669 QCURVE SMOOTH",
"962 690 OFFCURVE",
"959 719 QCURVE",
"959 719 LINE"
);
},
{
closed = 1;
nodes = (
"304 540 OFFCURVE",
"254 441 QCURVE SMOOTH",
"233 399 OFFCURVE",
"191 318 OFFCURVE",
"171 276 QCURVE",
"73 287 OFFCURVE",
"73 398 QCURVE SMOOTH",
"73 464 OFFCURVE",
"108 546 QCURVE SMOOTH",
"125 585 OFFCURVE",
"167 647 OFFCURVE",
"191 671 QCURVE SMOOTH",
"237 715 OFFCURVE",
"273 715 QCURVE SMOOTH",
"325 715 OFFCURVE",
"325 650 QCURVE SMOOTH",
"325 628 OFFCURVE",
"319 603 QCURVE",
"319 603 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
117 3 57 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 3 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
66 3 108 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 3 53 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 3 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 8 26 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
12 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
45 23 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 85 21 85 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
55 53 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 25 values pushed */
70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 12 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 9 values pushed */
6 66 22 66 38 66 54 66 4 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 66 21 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
71 57 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 19 values pushed */
118 117 134 117 150 117 166 117 182 117 198 117 214 117 230 117 246 117 9 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 117 22 117 38 117 54 117 70 117 86 117 102 117 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 117 21 117 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
89 1 49 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
102 1 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 689;
}
);
note = U.001;
},
{
glyphname = V.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"867 718 OFFCURVE",
"847 718 QCURVE SMOOTH",
"807 718 OFFCURVE",
"800 676 QCURVE SMOOTH",
"797 659 OFFCURVE",
"808 645 QCURVE SMOOTH",
"818 632 OFFCURVE",
"837 632 QCURVE SMOOTH",
"860 632 OFFCURVE",
"877 653 QCURVE SMOOTH",
"893 672 OFFCURVE",
"893 698 QCURVE SMOOTH",
"893 726 OFFCURVE",
"869 740 QCURVE SMOOTH",
"833 760 OFFCURVE",
"783 746 QCURVE SMOOTH",
"757 738 OFFCURVE",
"700 684 OFFCURVE",
"671 634 QCURVE SMOOTH",
"641 583 OFFCURVE",
"586 479 OFFCURVE",
"557 427 QCURVE SMOOTH",
"480 288 OFFCURVE",
"300 94 OFFCURVE",
"197 36 QCURVE SMOOTH",
"159 14 OFFCURVE",
"135 14 QCURVE SMOOTH",
"114 14 OFFCURVE",
"114 29 QCURVE SMOOTH",
"114 41 OFFCURVE",
"128 58 QCURVE SMOOTH",
"158 95 OFFCURVE",
"195 157 QCURVE",
"229 140 OFFCURVE",
"267 140 QCURVE SMOOTH",
"295 140 OFFCURVE",
"320 147 QCURVE SMOOTH",
"331 150 OFFCURVE",
"331 157 QCURVE SMOOTH",
"331 166 OFFCURVE",
"317 161 QCURVE SMOOTH",
"294 155 OFFCURVE",
"275 155 QCURVE SMOOTH",
"239 155 OFFCURVE",
"205 175 QCURVE",
"345 418 OFFCURVE",
"345 552 QCURVE SMOOTH",
"345 617 OFFCURVE",
"306 659 QCURVE SMOOTH",
"270 698 OFFCURVE",
"219 698 QCURVE SMOOTH",
"163 698 OFFCURVE",
"122 648 QCURVE SMOOTH",
"62 574 OFFCURVE",
"62 444 QCURVE SMOOTH",
"62 284 OFFCURVE",
"145 195 QCURVE",
"105 126 OFFCURVE",
"47 27 OFFCURVE",
"29 -4 QCURVE SMOOTH",
"26 -10 OFFCURVE",
"26 -14 QCURVE SMOOTH",
"26 -28 OFFCURVE",
"53 -29 QCURVE SMOOTH",
"135 -33 OFFCURVE",
"231 23 QCURVE SMOOTH",
"288 57 OFFCURVE",
"388 142 OFFCURVE",
"433 194 QCURVE SMOOTH",
"468 236 OFFCURVE",
"540 339 OFFCURVE",
"575 404 QCURVE SMOOTH",
"592 434 OFFCURVE",
"622 494 OFFCURVE",
"638 523 QCURVE SMOOTH",
"662 568 OFFCURVE",
"708 636 OFFCURVE",
"728 661 QCURVE SMOOTH",
"783 727 OFFCURVE",
"833 727 QCURVE SMOOTH",
"870 727 OFFCURVE",
"875 701 QCURVE",
"875 701 LINE"
);
},
{
closed = 1;
nodes = (
"282 484 OFFCURVE",
"221 350 QCURVE SMOOTH",
"188 276 OFFCURVE",
"158 218 QCURVE",
"87 307 OFFCURVE",
"87 449 QCURVE SMOOTH",
"87 541 OFFCURVE",
"122 603 QCURVE SMOOTH",
"159 670 OFFCURVE",
"213 670 QCURVE SMOOTH",
"273 670 OFFCURVE",
"277 576 QCURVE",
"277 576 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
88 4 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 3 82 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 35 21 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
6 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
90 27 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
31 2 84 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 1 47 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 606;
}
);
note = V.001;
},
{
glyphname = W.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"913 368 OFFCURVE",
"913 463 QCURVE SMOOTH",
"913 590 OFFCURVE",
"819 636 QCURVE SMOOTH",
"787 651 OFFCURVE",
"743 651 QCURVE SMOOTH",
"666 651 OFFCURVE",
"633 611 QCURVE SMOOTH",
"629 607 OFFCURVE",
"629 602 QCURVE SMOOTH",
"629 597 OFFCURVE",
"635 597 QCURVE SMOOTH",
"641 597 OFFCURVE",
"649 605 QCURVE",
"671 632 OFFCURVE",
"721 632 QCURVE SMOOTH",
"767 632 OFFCURVE",
"792 613 QCURVE SMOOTH",
"849 571 OFFCURVE",
"849 471 QCURVE SMOOTH",
"849 363 OFFCURVE",
"799 269 QCURVE SMOOTH",
"655 -7 OFFCURVE",
"532 -7 QCURVE SMOOTH",
"484 -7 OFFCURVE",
"472 57 QCURVE SMOOTH",
"469 73 OFFCURVE",
"469 95 QCURVE SMOOTH",
"469 159 OFFCURVE",
"493 224 QCURVE",
"502 237 OFFCURVE",
"520 261 OFFCURVE",
"529 274 QCURVE SMOOTH",
"540 291 OFFCURVE",
"561 326 OFFCURVE",
"569 346 QCURVE SMOOTH",
"580 373 OFFCURVE",
"580 389 QCURVE SMOOTH",
"580 420 OFFCURVE",
"554 420 QCURVE SMOOTH",
"515 420 OFFCURVE",
"491 364 QCURVE SMOOTH",
"468 310 OFFCURVE",
"454 229 QCURVE",
"386 111 OFFCURVE",
"355 77 QCURVE SMOOTH",
"282 -5 OFFCURVE",
"227 -5 QCURVE SMOOTH",
"197 -5 OFFCURVE",
"180 24 QCURVE SMOOTH",
"165 52 OFFCURVE",
"168 101 QCURVE SMOOTH",
"174 171 OFFCURVE",
"225 260 QCURVE",
"252 264 OFFCURVE",
"312 280 OFFCURVE",
"345 291 QCURVE",
"356 296 OFFCURVE",
"356 302 QCURVE SMOOTH",
"356 309 OFFCURVE",
"348 309 QCURVE SMOOTH",
"344 309 OFFCURVE",
"341 308 QCURVE SMOOTH",
"284 288 OFFCURVE",
"237 280 QCURVE",
"263 322 OFFCURVE",
"318 405 OFFCURVE",
"344 448 QCURVE SMOOTH",
"373 496 OFFCURVE",
"395 583 OFFCURVE",
"392 621 QCURVE SMOOTH",
"383 735 OFFCURVE",
"270 735 QCURVE SMOOTH",
"204 735 OFFCURVE",
"141 676 QCURVE SMOOTH",
"116 653 OFFCURVE",
"74 597 OFFCURVE",
"57 565 QCURVE SMOOTH",
"9 476 OFFCURVE",
"9 401 QCURVE SMOOTH",
"9 267 OFFCURVE",
"153 258 QCURVE",
"110 169 OFFCURVE",
"107 108 QCURVE SMOOTH",
"104 43 OFFCURVE",
"131 7 QCURVE SMOOTH",
"158 -29 OFFCURVE",
"205 -29 QCURVE SMOOTH",
"279 -29 OFFCURVE",
"359 51 QCURVE SMOOTH",
"378 70 OFFCURVE",
"415 117 OFFCURVE",
"434 145 QCURVE",
"422 85 OFFCURVE",
"435 40 QCURVE SMOOTH",
"454 -26 OFFCURVE",
"532 -26 QCURVE SMOOTH",
"629 -26 OFFCURVE",
"730 81 QCURVE SMOOTH",
"767 119 OFFCURVE",
"833 214 OFFCURVE",
"862 271 QCURVE",
"862 271 LINE"
);
},
{
closed = 1;
nodes = (
"310 540 OFFCURVE",
"255 441 QCURVE SMOOTH",
"232 399 OFFCURVE",
"185 318 OFFCURVE",
"162 276 QCURVE",
"54 286 OFFCURVE",
"54 398 QCURVE SMOOTH",
"54 465 OFFCURVE",
"93 546 QCURVE SMOOTH",
"130 623 OFFCURVE",
"184 671 QCURVE SMOOTH",
"234 715 OFFCURVE",
"275 715 QCURVE SMOOTH",
"332 715 OFFCURVE",
"332 650 QCURVE SMOOTH",
"332 628 OFFCURVE",
"326 603 QCURVE",
"326 603 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
112 3 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 3 104 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
82 3 100 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 22 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 50 21 50 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
20 18 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 31 21 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
37 22 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
10 82 26 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
94 22 100 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 112 22 112 38 112 54 112 70 112 86 112 102 112 118 112 134 112 150 112 166 112 182 112 198 112 214 112 230 112 246 112 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 112 21 112 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
100 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
120 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
54 2 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 1 86 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 845;
}
);
note = W.001;
},
{
glyphname = X.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"971 739 OFFCURVE",
"971 748 QCURVE SMOOTH",
"971 759 OFFCURVE",
"930 759 QCURVE SMOOTH",
"798 759 OFFCURVE",
"606 543 QCURVE SMOOTH",
"589 523 OFFCURVE",
"537 456 OFFCURVE",
"503 406 QCURVE",
"496 458 OFFCURVE",
"476 549 OFFCURVE",
"462 590 QCURVE SMOOTH",
"423 704 OFFCURVE",
"322 704 QCURVE SMOOTH",
"250 704 OFFCURVE",
"189 645 QCURVE SMOOTH",
"126 583 OFFCURVE",
"126 501 QCURVE SMOOTH",
"126 461 OFFCURVE",
"143 419 QCURVE SMOOTH",
"163 373 OFFCURVE",
"219 336 QCURVE SMOOTH",
"268 304 OFFCURVE",
"325 287 QCURVE SMOOTH",
"340 282 OFFCURVE",
"340 294 QCURVE SMOOTH",
"340 299 OFFCURVE",
"333 300 QCURVE",
"284 314 OFFCURVE",
"241 353 QCURVE SMOOTH",
"196 393 OFFCURVE",
"178 437 QCURVE SMOOTH",
"139 532 OFFCURVE",
"185 609 QCURVE SMOOTH",
"228 682 OFFCURVE",
"298 682 QCURVE SMOOTH",
"377 682 OFFCURVE",
"407 577 QCURVE SMOOTH",
"423 519 OFFCURVE",
"430 446 QCURVE SMOOTH",
"433 413 OFFCURVE",
"439 312 QCURVE",
"326 145 OFFCURVE",
"265 72 QCURVE SMOOTH",
"167 -47 OFFCURVE",
"111 -57 QCURVE",
"105 -59 OFFCURVE",
"93 -59 OFFCURVE",
"87 -59 QCURVE SMOOTH",
"43 -59 OFFCURVE",
"36 -35 QCURVE",
"49 -48 OFFCURVE",
"69 -48 QCURVE SMOOTH",
"88 -48 OFFCURVE",
"105 -34 QCURVE SMOOTH",
"120 -21 OFFCURVE",
"123 0 QCURVE SMOOTH",
"126 21 OFFCURVE",
"112 35 QCURVE SMOOTH",
"98 49 OFFCURVE",
"79 49 QCURVE SMOOTH",
"53 49 OFFCURVE",
"33 26 QCURVE SMOOTH",
"15 3 OFFCURVE",
"15 -23 QCURVE SMOOTH",
"15 -56 OFFCURVE",
"42 -71 QCURVE SMOOTH",
"61 -82 OFFCURVE",
"92 -82 QCURVE SMOOTH",
"215 -82 OFFCURVE",
"443 252 QCURVE",
"453 117 OFFCURVE",
"491 30 QCURVE SMOOTH",
"528 -57 OFFCURVE",
"608 -57 QCURVE SMOOTH",
"660 -57 OFFCURVE",
"699 -15 QCURVE SMOOTH",
"737 26 OFFCURVE",
"737 95 QCURVE SMOOTH",
"737 162 OFFCURVE",
"711 235 QCURVE SMOOTH",
"708 245 OFFCURVE",
"703 245 QCURVE SMOOTH",
"696 245 OFFCURVE",
"701 230 QCURVE SMOOTH",
"717 173 OFFCURVE",
"717 117 QCURVE SMOOTH",
"717 70 OFFCURVE",
"699 33 QCURVE SMOOTH",
"676 -12 OFFCURVE",
"634 -12 QCURVE SMOOTH",
"582 -12 OFFCURVE",
"555 58 QCURVE SMOOTH",
"544 88 OFFCURVE",
"527 168 OFFCURVE",
"520 219 QCURVE SMOOTH",
"517 245 OFFCURVE",
"510 309 OFFCURVE",
"508 349 QCURVE",
"562 431 OFFCURVE",
"628 526 OFFCURVE",
"641 540 QCURVE SMOOTH",
"725 632 OFFCURVE",
"802 685 QCURVE SMOOTH",
"886 744 OFFCURVE",
"941 744 QCURVE SMOOTH",
"946 744 OFFCURVE",
"957 743 OFFCURVE",
"962 742 QCURVE",
"962 742 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
13 3 67 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 4 30 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 13 21 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 22 25 22 41 22 57 22 73 22 89 22 105 22 121 22 137 22 153 22 169 22 185 22 201 22 217 22 233 22 249 22 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 22 25 22 41 22 57 22 73 22 89 22 105 22 121 22 137 22 153 22 169 22 185 22 201 22 217 22 233 22 249 22 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 22 25 22 41 22 57 22 73 22 89 22 105 22 121 22 137 22 153 22 169 22 185 22 201 22 217 22 233 22 249 22 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
100 67 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
60 2 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
105 1 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
95 1 73 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
58 34 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 753;
}
);
note = X.001;
},
{
glyphname = Y.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"797 747 OFFCURVE",
"797 755 QCURVE SMOOTH",
"797 761 OFFCURVE",
"785 760 QCURVE SMOOTH",
"623 739 OFFCURVE",
"459 320 QCURVE SMOOTH",
"403 178 OFFCURVE",
"315 69 QCURVE SMOOTH",
"251 -10 OFFCURVE",
"205 -10 QCURVE SMOOTH",
"176 -10 OFFCURVE",
"163 20 QCURVE SMOOTH",
"150 49 OFFCURVE",
"153 101 QCURVE SMOOTH",
"157 171 OFFCURVE",
"204 260 QCURVE",
"255 268 OFFCURVE",
"313 291 QCURVE SMOOTH",
"322 294 OFFCURVE",
"322 302 QCURVE SMOOTH",
"322 309 OFFCURVE",
"315 309 QCURVE SMOOTH",
"311 309 OFFCURVE",
"309 308 QCURVE SMOOTH",
"258 288 OFFCURVE",
"214 280 QCURVE",
"239 322 OFFCURVE",
"289 405 OFFCURVE",
"312 448 QCURVE SMOOTH",
"338 496 OFFCURVE",
"358 583 OFFCURVE",
"355 621 QCURVE SMOOTH",
"346 735 OFFCURVE",
"244 735 QCURVE SMOOTH",
"184 735 OFFCURVE",
"128 676 QCURVE SMOOTH",
"85 633 OFFCURVE",
"51 565 QCURVE SMOOTH",
"8 479 OFFCURVE",
"8 401 QCURVE SMOOTH",
"8 267 OFFCURVE",
"139 258 QCURVE",
"120 214 OFFCURVE",
"99 140 OFFCURVE",
"97 108 QCURVE SMOOTH",
"94 42 OFFCURVE",
"119 7 QCURVE SMOOTH",
"143 -29 OFFCURVE",
"186 -29 QCURVE SMOOTH",
"254 -29 OFFCURVE",
"325 51 QCURVE SMOOTH",
"351 80 OFFCURVE",
"401 154 OFFCURVE",
"426 202 QCURVE",
"424 192 OFFCURVE",
"422 174 OFFCURVE",
"421 166 QCURVE SMOOTH",
"374 -244 OFFCURVE",
"146 -285 QCURVE SMOOTH",
"142 -286 OFFCURVE",
"134 -286 OFFCURVE",
"130 -286 QCURVE SMOOTH",
"104 -286 OFFCURVE",
"84 -275 QCURVE SMOOTH",
"65 -265 OFFCURVE",
"66 -246 QCURVE",
"73 -264 OFFCURVE",
"97 -264 QCURVE SMOOTH",
"117 -264 OFFCURVE",
"131 -250 QCURVE SMOOTH",
"144 -235 OFFCURVE",
"147 -216 QCURVE SMOOTH",
"150 -195 OFFCURVE",
"136 -181 QCURVE SMOOTH",
"122 -167 OFFCURVE",
"103 -167 QCURVE SMOOTH",
"77 -167 OFFCURVE",
"59 -189 QCURVE SMOOTH",
"42 -211 OFFCURVE",
"42 -237 QCURVE SMOOTH",
"42 -280 OFFCURVE",
"75 -302 QCURVE SMOOTH",
"104 -321 OFFCURVE",
"154 -321 QCURVE SMOOTH",
"339 -318 OFFCURVE",
"423 -139 QCURVE SMOOTH",
"473 -31 OFFCURVE",
"500 205 QCURVE SMOOTH",
"521 379 OFFCURVE",
"611 555 QCURVE SMOOTH",
"705 738 OFFCURVE",
"790 747 QCURVE",
"790 747 LINE"
);
},
{
closed = 1;
nodes = (
"280 537 OFFCURVE",
"231 441 QCURVE SMOOTH",
"147 276 LINE",
"49 287 OFFCURVE",
"49 398 QCURVE SMOOTH",
"49 467 OFFCURVE",
"84 546 QCURVE SMOOTH",
"119 624 OFFCURVE",
"167 671 QCURVE SMOOTH",
"213 715 OFFCURVE",
"249 715 QCURVE SMOOTH",
"301 715 OFFCURVE",
"301 650 QCURVE SMOOTH",
"301 628 OFFCURVE",
"295 603 QCURVE",
"295 603 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
102 3 52 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 3 94 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
78 3 47 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 102 22 102 38 102 54 102 70 102 86 102 102 102 118 102 134 102 150 102 166 102 182 102 198 102 214 102 230 102 246 102 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 102 21 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 33 values pushed */
6 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 60 21 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
26 52 60 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 78 21 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
50 47 78 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
66 52 60 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
88 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
30 2 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
16 24 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
82 1 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
26 24 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 606;
}
);
note = Y.001;
},
{
glyphname = Z.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1028 645 OFFCURVE",
"1028 674 QCURVE SMOOTH",
"1028 696 OFFCURVE",
"999 696 QCURVE SMOOTH",
"959 696 OFFCURVE",
"901 648 QCURVE",
"894 641 OFFCURVE",
"855 644 QCURVE SMOOTH",
"810 647 OFFCURVE",
"691 678 QCURVE SMOOTH",
"577 707 OFFCURVE",
"504 707 QCURVE SMOOTH",
"411 707 OFFCURVE",
"320 671 QCURVE SMOOTH",
"248 642 OFFCURVE",
"207 589 QCURVE SMOOTH",
"167 537 OFFCURVE",
"167 488 QCURVE SMOOTH",
"167 447 OFFCURVE",
"194 420 QCURVE SMOOTH",
"221 393 OFFCURVE",
"273 390 QCURVE SMOOTH",
"359 384 OFFCURVE",
"468 440 QCURVE SMOOTH",
"563 489 OFFCURVE",
"640 569 QCURVE",
"643 570 OFFCURVE",
"643 573 QCURVE SMOOTH",
"643 577 OFFCURVE",
"637 576 QCURVE SMOOTH",
"630 575 OFFCURVE",
"624 570 QCURVE SMOOTH",
"584 535 OFFCURVE",
"503 478 OFFCURVE",
"460 456 QCURVE SMOOTH",
"360 406 OFFCURVE",
"293 406 QCURVE SMOOTH",
"214 406 OFFCURVE",
"214 463 QCURVE SMOOTH",
"214 498 OFFCURVE",
"248 535 QCURVE SMOOTH",
"286 578 OFFCURVE",
"352 610 QCURVE SMOOTH",
"445 656 OFFCURVE",
"554 656 QCURVE SMOOTH",
"583 656 OFFCURVE",
"664 646 OFFCURVE",
"715 637 QCURVE SMOOTH",
"764 628 OFFCURVE",
"834 621 OFFCURVE",
"854 622 QCURVE",
"720 546 OFFCURVE",
"393 267 OFFCURVE",
"198 59 QCURVE",
"159 72 OFFCURVE",
"125 72 QCURVE SMOOTH",
"96 72 OFFCURVE",
"74 63 QCURVE SMOOTH",
"31 45 OFFCURVE",
"25 11 QCURVE SMOOTH",
"22 -8 OFFCURVE",
"35 -20 QCURVE SMOOTH",
"49 -31 OFFCURVE",
"67 -31 QCURVE SMOOTH",
"134 -31 OFFCURVE",
"214 31 QCURVE",
"264 8 OFFCURVE",
"362 -40 OFFCURVE",
"413 -62 QCURVE SMOOTH",
"480 -91 OFFCURVE",
"597 -119 OFFCURVE",
"648 -119 QCURVE SMOOTH",
"668 -119 OFFCURVE",
"707 -116 OFFCURVE",
"726 -111 QCURVE SMOOTH",
"795 -96 OFFCURVE",
"839 -43 QCURVE SMOOTH",
"881 6 OFFCURVE",
"881 62 QCURVE SMOOTH",
"881 147 OFFCURVE",
"785 179 QCURVE SMOOTH",
"749 190 OFFCURVE",
"709 190 QCURVE SMOOTH",
"653 190 OFFCURVE",
"602 170 QCURVE SMOOTH",
"518 137 OFFCURVE",
"460 65 QCURVE SMOOTH",
"459 64 OFFCURVE",
"459 61 QCURVE SMOOTH",
"459 56 OFFCURVE",
"465 55 QCURVE SMOOTH",
"472 54 OFFCURVE",
"477 59 QCURVE SMOOTH",
"538 120 OFFCURVE",
"614 149 QCURVE SMOOTH",
"643 160 OFFCURVE",
"698 171 OFFCURVE",
"724 171 QCURVE SMOOTH",
"754 171 OFFCURVE",
"781 163 QCURVE SMOOTH",
"838 143 OFFCURVE",
"838 100 QCURVE SMOOTH",
"838 61 OFFCURVE",
"799 21 QCURVE SMOOTH",
"761 -20 OFFCURVE",
"715 -36 QCURVE SMOOTH",
"680 -48 OFFCURVE",
"632 -48 QCURVE SMOOTH",
"507 -48 OFFCURVE",
"239 51 QCURVE",
"384 192 OFFCURVE",
"540 343 OFFCURVE",
"552 354 QCURVE SMOOTH",
"661 454 OFFCURVE",
"838 593 OFFCURVE",
"907 631 QCURVE",
"911 632 LINE",
"933 630 OFFCURVE",
"970 630 OFFCURVE",
"984 634 QCURVE",
"984 634 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
120 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
120 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
102 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
102 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 18 26 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 102 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 7 values pushed */
214 81 230 81 246 81 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
6 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 198 81 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 81 21 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
69 18 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
104 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
121 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
83 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
12 48 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
108 75 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
64 56 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 56 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
98 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 98 24 98 40 98 56 98 72 98 88 98 104 98 120 98 136 98 152 98 168 98 184 98 200 98 216 98 232 98 248 98 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 98 24 98 40 98 56 98 72 98 88 98 104 98 120 98 136 98 152 98 168 98 184 98 200 98 216 98 232 98 248 98 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 98 24 98 40 98 56 98 72 98 88 98 104 98 120 98 136 98 152 98 168 98 184 98 200 98 216 98 232 98 248 98 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 882;
}
);
note = Z.001;
},
{
glyphname = Z.001.stroke;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1028 645 OFFCURVE",
"1028 674 QCURVE SMOOTH",
"1028 696 OFFCURVE",
"999 696 QCURVE SMOOTH",
"959 696 OFFCURVE",
"901 648 QCURVE",
"894 641 OFFCURVE",
"855 644 QCURVE SMOOTH",
"810 647 OFFCURVE",
"691 678 QCURVE SMOOTH",
"577 707 OFFCURVE",
"504 707 QCURVE SMOOTH",
"411 707 OFFCURVE",
"320 671 QCURVE SMOOTH",
"248 642 OFFCURVE",
"207 589 QCURVE SMOOTH",
"167 537 OFFCURVE",
"167 488 QCURVE SMOOTH",
"167 447 OFFCURVE",
"194 420 QCURVE SMOOTH",
"221 393 OFFCURVE",
"273 390 QCURVE SMOOTH",
"359 384 OFFCURVE",
"468 440 QCURVE SMOOTH",
"563 489 OFFCURVE",
"640 569 QCURVE",
"643 570 OFFCURVE",
"643 573 QCURVE SMOOTH",
"643 577 OFFCURVE",
"637 576 QCURVE SMOOTH",
"630 575 OFFCURVE",
"624 570 QCURVE SMOOTH",
"584 535 OFFCURVE",
"503 478 OFFCURVE",
"460 456 QCURVE SMOOTH",
"360 406 OFFCURVE",
"293 406 QCURVE SMOOTH",
"214 406 OFFCURVE",
"214 463 QCURVE SMOOTH",
"214 498 OFFCURVE",
"248 535 QCURVE SMOOTH",
"286 578 OFFCURVE",
"352 610 QCURVE SMOOTH",
"445 656 OFFCURVE",
"554 656 QCURVE SMOOTH",
"583 656 OFFCURVE",
"664 646 OFFCURVE",
"715 637 QCURVE SMOOTH",
"764 628 OFFCURVE",
"834 621 OFFCURVE",
"854 622 QCURVE",
"694 531 OFFCURVE",
"494 351 QCURVE",
"447 352 OFFCURVE",
"353 351 OFFCURVE",
"328 351 QCURVE SMOOTH",
"311 351 OFFCURVE",
"300 336 OFFCURVE",
"305 318 OFFCURVE",
"320 303 OFFCURVE",
"328 304 QCURVE SMOOTH",
"338 304 OFFCURVE",
"367 306 OFFCURVE",
"400 308 OFFCURVE",
"435 311 OFFCURVE",
"451 312 QCURVE",
"391 256 OFFCURVE",
"265 131 OFFCURVE",
"198 59 QCURVE",
"159 72 OFFCURVE",
"125 72 QCURVE SMOOTH",
"96 72 OFFCURVE",
"74 63 QCURVE SMOOTH",
"31 45 OFFCURVE",
"25 11 QCURVE SMOOTH",
"22 -8 OFFCURVE",
"35 -20 QCURVE SMOOTH",
"49 -31 OFFCURVE",
"67 -31 QCURVE SMOOTH",
"134 -31 OFFCURVE",
"214 31 QCURVE",
"264 8 OFFCURVE",
"362 -40 OFFCURVE",
"413 -62 QCURVE SMOOTH",
"480 -91 OFFCURVE",
"597 -119 OFFCURVE",
"648 -119 QCURVE SMOOTH",
"668 -119 OFFCURVE",
"707 -116 OFFCURVE",
"726 -111 QCURVE SMOOTH",
"795 -96 OFFCURVE",
"839 -43 QCURVE SMOOTH",
"881 6 OFFCURVE",
"881 62 QCURVE SMOOTH",
"881 147 OFFCURVE",
"785 179 QCURVE SMOOTH",
"749 190 OFFCURVE",
"709 190 QCURVE SMOOTH",
"653 190 OFFCURVE",
"602 170 QCURVE SMOOTH",
"518 137 OFFCURVE",
"460 65 QCURVE SMOOTH",
"459 64 OFFCURVE",
"459 61 QCURVE SMOOTH",
"459 56 OFFCURVE",
"465 55 QCURVE SMOOTH",
"472 54 OFFCURVE",
"477 59 QCURVE SMOOTH",
"538 120 OFFCURVE",
"614 149 QCURVE SMOOTH",
"643 160 OFFCURVE",
"698 171 OFFCURVE",
"724 171 QCURVE SMOOTH",
"754 171 OFFCURVE",
"781 163 QCURVE SMOOTH",
"838 143 OFFCURVE",
"838 100 QCURVE SMOOTH",
"838 61 OFFCURVE",
"799 21 QCURVE SMOOTH",
"761 -20 OFFCURVE",
"715 -36 QCURVE SMOOTH",
"680 -48 OFFCURVE",
"632 -48 QCURVE SMOOTH",
"507 -48 OFFCURVE",
"239 51 QCURVE",
"339 149 OFFCURVE",
"476 281 OFFCURVE",
"513 316 QCURVE",
"531 317 OFFCURVE",
"575 318 OFFCURVE",
"620 320 OFFCURVE",
"662 321 OFFCURVE",
"678 321 QCURVE SMOOTH",
"694 321 OFFCURVE",
"706 329 OFFCURVE",
"703 338 OFFCURVE",
"685 347 OFFCURVE",
"672 347 QCURVE SMOOTH",
"650 347 OFFCURVE",
"578 348 OFFCURVE",
"548 349 QCURVE",
"633 427 OFFCURVE",
"807 574 OFFCURVE",
"907 631 QCURVE",
"911 632 LINE",
"933 630 OFFCURVE",
"970 630 OFFCURVE",
"984 634 QCURVE",
"984 634 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
148 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
148 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
130 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
130 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 31 26 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 130 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
23 130 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
109 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 109 22 109 38 109 54 109 70 109 86 109 102 109 118 109 134 109 150 109 166 109 182 109 198 109 214 109 230 109 246 109 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 109 21 109 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
82 130 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
97 31 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
109 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
132 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
132 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
149 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
111 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
111 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
25 61 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
136 103 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
77 69 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
95 35 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
82 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
23 69 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 882;
}
);
note = Z.001.stroke;
},
{
glyphname = r.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"338 198 OFFCURVE",
"325 206 OFFCURVE",
"318 193 QCURVE SMOOTH",
"310 177 OFFCURVE",
"281 120 OFFCURVE",
"246 66 OFFCURVE",
"209 26 OFFCURVE",
"194 26 QCURVE SMOOTH",
"179 27 OFFCURVE",
"174 55 OFFCURVE",
"184 98 OFFCURVE",
"205 150 OFFCURVE",
"228 197 OFFCURVE",
"247 235 OFFCURVE",
"251 243 QCURVE SMOOTH",
"255 252 OFFCURVE",
"265 275 OFFCURVE",
"272 296 OFFCURVE",
"275 315 OFFCURVE",
"272 320 QCURVE",
"235 316 OFFCURVE",
"162 314 OFFCURVE",
"134 316 QCURVE",
"147 325 OFFCURVE",
"184 362 OFFCURVE",
"189 383 QCURVE SMOOTH",
"194 408 OFFCURVE",
"179 441 OFFCURVE",
"155 453 OFFCURVE",
"131 440 OFFCURVE",
"128 419 QCURVE SMOOTH",
"119 359 OFFCURVE",
"68 220 OFFCURVE",
"-3 82 OFFCURVE",
"-90 -44 OFFCURVE",
"-136 -89 QCURVE SMOOTH",
"-142 -95 OFFCURVE",
"-134 -107 OFFCURVE",
"-128 -102 QCURVE SMOOTH",
"-110 -84 OFFCURVE",
"-50 -14 OFFCURVE",
"16 82 OFFCURVE",
"80 198 OFFCURVE",
"103 260 QCURVE SMOOTH",
"115 292 LINE",
"157 291 OFFCURVE",
"203 270 OFFCURVE",
"192 245 QCURVE SMOOTH",
"188 236 OFFCURVE",
"172 208 OFFCURVE",
"153 176 OFFCURVE",
"136 142 OFFCURVE",
"130 127 QCURVE SMOOTH",
"115 88 OFFCURVE",
"119 37 OFFCURVE",
"141 7 OFFCURVE",
"172 -2 OFFCURVE",
"185 1 QCURVE SMOOTH",
"209 7 OFFCURVE",
"253 48 OFFCURVE",
"289 102 OFFCURVE",
"319 160 OFFCURVE",
"330 183 QCURVE",
"330 183 LINE"
);
}
);
width = 260;
}
);
note = r.001;
},
{
glyphname = r.002;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"368 198 OFFCURVE",
"355 206 OFFCURVE",
"348 193 QCURVE SMOOTH",
"340 177 OFFCURVE",
"311 120 OFFCURVE",
"276 66 OFFCURVE",
"239 26 OFFCURVE",
"224 26 QCURVE SMOOTH",
"209 27 OFFCURVE",
"204 55 OFFCURVE",
"214 98 OFFCURVE",
"235 150 OFFCURVE",
"258 197 OFFCURVE",
"277 235 OFFCURVE",
"281 243 QCURVE SMOOTH",
"285 252 OFFCURVE",
"295 275 OFFCURVE",
"302 296 OFFCURVE",
"305 315 OFFCURVE",
"302 320 QCURVE",
"265 316 OFFCURVE",
"192 314 OFFCURVE",
"164 316 QCURVE",
"177 325 OFFCURVE",
"214 362 OFFCURVE",
"219 383 QCURVE SMOOTH",
"224 408 OFFCURVE",
"209 441 OFFCURVE",
"186 453 OFFCURVE",
"162 440 OFFCURVE",
"158 419 QCURVE SMOOTH",
"150 374 OFFCURVE",
"114 274 OFFCURVE",
"60 178 OFFCURVE",
"-9 93 OFFCURVE",
"-90 31 OFFCURVE",
"-182 -1 OFFCURVE",
"-231 5 QCURVE SMOOTH",
"-239 6 OFFCURVE",
"-245 -11 OFFCURVE",
"-232 -15 QCURVE SMOOTH",
"-169 -33 OFFCURVE",
"-60 10 OFFCURVE",
"34 103 OFFCURVE",
"113 229 OFFCURVE",
"145 292 QCURVE",
"187 291 OFFCURVE",
"233 270 OFFCURVE",
"222 245 QCURVE SMOOTH",
"218 236 OFFCURVE",
"202 208 OFFCURVE",
"183 176 OFFCURVE",
"166 142 OFFCURVE",
"160 127 QCURVE SMOOTH",
"145 88 OFFCURVE",
"149 37 OFFCURVE",
"171 7 OFFCURVE",
"202 -2 OFFCURVE",
"215 1 QCURVE SMOOTH",
"239 7 OFFCURVE",
"283 48 OFFCURVE",
"319 102 OFFCURVE",
"349 160 OFFCURVE",
"360 183 QCURVE",
"360 183 LINE"
);
}
);
width = 290;
}
);
note = r.002;
},
{
glyphname = P_r.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1277 198 OFFCURVE",
"1264 206 OFFCURVE",
"1257 193 QCURVE SMOOTH",
"1249 177 OFFCURVE",
"1220 120 OFFCURVE",
"1185 66 OFFCURVE",
"1148 26 OFFCURVE",
"1133 26 QCURVE SMOOTH",
"1118 27 OFFCURVE",
"1113 55 OFFCURVE",
"1123 98 OFFCURVE",
"1144 150 OFFCURVE",
"1167 197 OFFCURVE",
"1186 235 OFFCURVE",
"1190 243 QCURVE SMOOTH",
"1194 252 OFFCURVE",
"1204 275 OFFCURVE",
"1211 296 OFFCURVE",
"1214 315 OFFCURVE",
"1211 320 QCURVE",
"1174 316 OFFCURVE",
"1101 314 OFFCURVE",
"1073 316 QCURVE",
"1086 325 OFFCURVE",
"1123 362 OFFCURVE",
"1128 383 QCURVE SMOOTH",
"1133 408 OFFCURVE",
"1118 441 OFFCURVE",
"1094 453 OFFCURVE",
"1070 440 OFFCURVE",
"1067 419 QCURVE SMOOTH",
"1060 377 OFFCURVE",
"1029 278 OFFCURVE",
"981 181 OFFCURVE",
"917 92 OFFCURVE",
"837 27 OFFCURVE",
"742 -6 OFFCURVE",
"687 2 QCURVE SMOOTH",
"679 3 OFFCURVE",
"679 -18 OFFCURVE",
"687 -19 QCURVE SMOOTH",
"742 -25 OFFCURVE",
"850 15 OFFCURVE",
"944 92 OFFCURVE",
"1019 199 OFFCURVE",
"1042 260 QCURVE SMOOTH",
"1054 292 LINE",
"1096 291 OFFCURVE",
"1142 270 OFFCURVE",
"1131 245 QCURVE SMOOTH",
"1127 236 OFFCURVE",
"1111 208 OFFCURVE",
"1092 176 OFFCURVE",
"1075 142 OFFCURVE",
"1069 127 QCURVE SMOOTH",
"1054 88 OFFCURVE",
"1058 37 OFFCURVE",
"1080 7 OFFCURVE",
"1111 -2 OFFCURVE",
"1124 1 QCURVE SMOOTH",
"1148 7 OFFCURVE",
"1192 48 OFFCURVE",
"1228 102 OFFCURVE",
"1258 160 OFFCURVE",
"1269 183 QCURVE",
"1269 183 LINE"
);
},
{
closed = 1;
nodes = (
"912 736 OFFCURVE",
"848 753 QCURVE",
"861 766 OFFCURVE",
"885 785 OFFCURVE",
"893 790 QCURVE SMOOTH",
"911 801 OFFCURVE",
"907 815 OFFCURVE",
"883 805 QCURVE SMOOTH",
"860 797 OFFCURVE",
"825 776 OFFCURVE",
"808 763 QCURVE",
"719 781 OFFCURVE",
"532 776 OFFCURVE",
"448 764 QCURVE SMOOTH",
"412 759 OFFCURVE",
"326 739 OFFCURVE",
"237 708 OFFCURVE",
"153 665 OFFCURVE",
"86 607 OFFCURVE",
"44 535 OFFCURVE",
"42 490 QCURVE SMOOTH",
"40 452 OFFCURVE",
"64 395 OFFCURVE",
"105 356 OFFCURVE",
"160 336 OFFCURVE",
"190 335 QCURVE SMOOTH",
"219 334 OFFCURVE",
"278 352 OFFCURVE",
"326 388 OFFCURVE",
"356 441 OFFCURVE",
"356 475 QCURVE SMOOTH",
"356 486 OFFCURVE",
"344 487 OFFCURVE",
"342 476 QCURVE",
"333 451 OFFCURVE",
"302 406 OFFCURVE",
"262 373 OFFCURVE",
"216 354 OFFCURVE",
"192 355 QCURVE SMOOTH",
"169 356 OFFCURVE",
"130 376 OFFCURVE",
"103 410 OFFCURVE",
"90 456 OFFCURVE",
"94 482 QCURVE SMOOTH",
"103 538 OFFCURVE",
"182 623 OFFCURVE",
"288 684 OFFCURVE",
"405 722 OFFCURVE",
"452 731 QCURVE SMOOTH",
"483 737 OFFCURVE",
"562 745 OFFCURVE",
"648 748 OFFCURVE",
"738 744 OFFCURVE",
"781 738 QCURVE",
"767 725 OFFCURVE",
"742 697 OFFCURVE",
"728 682 QCURVE SMOOTH",
"664 610 OFFCURVE",
"567 446 OFFCURVE",
"482 286 OFFCURVE",
"400 144 OFFCURVE",
"351 96 QCURVE SMOOTH",
"300 47 OFFCURVE",
"188 -11 OFFCURVE",
"121 -8 QCURVE SMOOTH",
"86 -6 OFFCURVE",
"47 24 OFFCURVE",
"34 66 OFFCURVE",
"47 110 OFFCURVE",
"84 140 OFFCURVE",
"143 148 OFFCURVE",
"183 133 QCURVE SMOOTH",
"196 128 OFFCURVE",
"202 140 OFFCURVE",
"186 146 QCURVE SMOOTH",
"129 165 OFFCURVE",
"44 156 OFFCURVE",
"-10 120 OFFCURVE",
"-30 65 OFFCURVE",
"-13 12 OFFCURVE",
"45 -30 OFFCURVE",
"96 -36 QCURVE SMOOTH",
"177 -46 OFFCURVE",
"326 7 OFFCURVE",
"390 67 QCURVE SMOOTH",
"433 109 OFFCURVE",
"507 200 OFFCURVE",
"540 249 QCURVE",
"580 246 OFFCURVE",
"702 258 OFFCURVE",
"764 273 QCURVE SMOOTH",
"813 285 OFFCURVE",
"917 338 OFFCURVE",
"1003 408 OFFCURVE",
"1062 493 OFFCURVE",
"1074 581 OFFCURVE",
"1027 668 OFFCURVE",
"964 705 QCURVE",
"964 705 LINE"
);
},
{
closed = 1;
nodes = (
"980 658 OFFCURVE",
"1010 589 OFFCURVE",
"1000 514 OFFCURVE",
"954 438 OFFCURVE",
"881 369 OFFCURVE",
"786 313 OFFCURVE",
"732 297 QCURVE SMOOTH",
"684 283 OFFCURVE",
"592 268 OFFCURVE",
"554 270 QCURVE",
"590 326 OFFCURVE",
"657 443 OFFCURVE",
"723 560 OFFCURVE",
"791 675 OFFCURVE",
"829 729 QCURVE",
"861 721 OFFCURVE",
"918 699 OFFCURVE",
"941 684 QCURVE",
"941 684 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
124 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
42 50 124 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
171 50 124 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1199;
}
);
note = P_r.001;
},
{
glyphname = ffi;
layers = (
{
components = (
{
name = f;
},
{
name = f;
transform = "{1, 0, 0, 1, 198, 0}";
},
{
name = i;
transform = "{1, 0, 0, 1, 396, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 570;
}
);
note = ffi;
unicode = FB03;
},
{
glyphname = fl;
layers = (
{
components = (
{
name = f;
},
{
name = l;
transform = "{1, 0, 0, 1, 198, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 410;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = ffl;
layers = (
{
components = (
{
name = f;
},
{
name = f;
transform = "{1, 0, 0, 1, 198, 0}";
},
{
name = l;
transform = "{1, 0, 0, 1, 396, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 608;
}
);
note = ffl;
unicode = FB04;
},
{
glyphname = t_t;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"194 517 OFFCURVE",
"162 454 OFFCURVE",
"145 419 QCURVE",
"97 417 OFFCURVE",
"24 380 OFFCURVE",
"7 340 QCURVE",
"5 333 OFFCURVE",
"16 328 OFFCURVE",
"20 333 QCURVE",
"23 339 LINE SMOOTH",
"31 353 OFFCURVE",
"44 371 OFFCURVE",
"55 376 QCURVE SMOOTH",
"72 384 OFFCURVE",
"113 392 OFFCURVE",
"133 394 QCURVE",
"110 343 OFFCURVE",
"72 239 OFFCURVE",
"59 192 QCURVE SMOOTH",
"55 177 OFFCURVE",
"43 136 OFFCURVE",
"35 92 OFFCURVE",
"34 50 OFFCURVE",
"47 16 OFFCURVE",
"78 -5 OFFCURVE",
"106 -5 QCURVE SMOOTH",
"142 -5 OFFCURVE",
"198 35 OFFCURVE",
"220 64 QCURVE",
"221 35 OFFCURVE",
"252 -5 OFFCURVE",
"292 -5 QCURVE SMOOTH",
"330 -5 OFFCURVE",
"388 39 OFFCURVE",
"431 99 OFFCURVE",
"461 163 OFFCURVE",
"470 183 QCURVE SMOOTH",
"477 198 OFFCURVE",
"462 201 OFFCURVE",
"455 188 QCURVE SMOOTH",
"450 178 OFFCURVE",
"435 149 OFFCURVE",
"416 115 OFFCURVE",
"393 79 OFFCURVE",
"381 61 QCURVE SMOOTH",
"361 33 OFFCURVE",
"315 13 OFFCURVE",
"280 28 OFFCURVE",
"266 79 OFFCURVE",
"278 124 QCURVE SMOOTH",
"314 258 OFFCURVE",
"361 363 QCURVE SMOOTH",
"370 382 LINE",
"400 380 OFFCURVE",
"445 379 OFFCURVE",
"484 383 OFFCURVE",
"520 394 OFFCURVE",
"541 405 QCURVE SMOOTH",
"552 411 OFFCURVE",
"570 430 OFFCURVE",
"575 445 QCURVE SMOOTH",
"577 452 OFFCURVE",
"566 453 OFFCURVE",
"562 448 QCURVE",
"552 428 OFFCURVE",
"532 419 QCURVE SMOOTH",
"517 413 OFFCURVE",
"489 408 OFFCURVE",
"455 407 OFFCURVE",
"412 409 OFFCURVE",
"382 410 QCURVE",
"405 461 OFFCURVE",
"451 530 OFFCURVE",
"465 550 QCURVE SMOOTH",
"481 573 OFFCURVE",
"511 595 OFFCURVE",
"525 598 QCURVE",
"520 616 OFFCURVE",
"492 626 OFFCURVE",
"456 613 OFFCURVE",
"415 575 OFFCURVE",
"397 545 QCURVE SMOOTH",
"389 533 OFFCURVE",
"371 500 OFFCURVE",
"352 464 OFFCURVE",
"334 428 OFFCURVE",
"327 413 QCURVE",
"202 420 LINE",
"219 455 OFFCURVE",
"258 519 OFFCURVE",
"279 550 QCURVE SMOOTH",
"295 573 OFFCURVE",
"325 595 OFFCURVE",
"339 598 QCURVE",
"334 616 OFFCURVE",
"306 626 OFFCURVE",
"270 613 OFFCURVE",
"229 575 OFFCURVE",
"211 545 QCURVE",
"211 545 LINE"
);
},
{
closed = 1;
nodes = (
"175 33 OFFCURVE",
"129 13 OFFCURVE",
"94 28 OFFCURVE",
"80 79 OFFCURVE",
"92 124 QCURVE SMOOTH",
"113 202 OFFCURVE",
"161 335 OFFCURVE",
"190 395 QCURVE",
"209 396 OFFCURVE",
"274 390 OFFCURVE",
"315 386 QCURVE",
"310 375 OFFCURVE",
"301 351 OFFCURVE",
"296 340 QCURVE SMOOTH",
"280 302 OFFCURVE",
"255 227 OFFCURVE",
"245 192 QCURVE SMOOTH",
"240 175 OFFCURVE",
"227 128 OFFCURVE",
"223 104 QCURVE",
"209 80 OFFCURVE",
"195 61 QCURVE",
"195 61 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
67 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
70 67 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
83 28 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
110 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 400;
}
);
note = t_t;
},
{
glyphname = b.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"44 394 OFFCURVE",
"52 375 OFFCURVE",
"59 367 QCURVE SMOOTH",
"73 350 OFFCURVE",
"112 341 OFFCURVE",
"134 343 QCURVE",
"112 301 OFFCURVE",
"69 216 OFFCURVE",
"30 141 OFFCURVE",
"-5 79 OFFCURVE",
"-20 59 QCURVE SMOOTH",
"-25 52 OFFCURVE",
"-18 41 OFFCURVE",
"-12 46 QCURVE SMOOTH",
"3 60 OFFCURVE",
"55 151 OFFCURVE",
"90 217 QCURVE",
"75 186 OFFCURVE",
"52 130 OFFCURVE",
"46 107 QCURVE SMOOTH",
"39 80 OFFCURVE",
"49 33 OFFCURVE",
"82 3 OFFCURVE",
"141 -5 OFFCURVE",
"184 7 QCURVE SMOOTH",
"215 15 OFFCURVE",
"269 56 OFFCURVE",
"311 112 OFFCURVE",
"340 176 OFFCURVE",
"347 208 QCURVE SMOOTH",
"352 232 OFFCURVE",
"349 279 OFFCURVE",
"330 318 OFFCURVE",
"294 345 OFFCURVE",
"267 349 QCURVE SMOOTH",
"250 352 OFFCURVE",
"233 345 OFFCURVE",
"231 336 OFFCURVE",
"242 328 OFFCURVE",
"253 329 QCURVE SMOOTH",
"277 331 OFFCURVE",
"302 312 OFFCURVE",
"309 276 OFFCURVE",
"301 230 OFFCURVE",
"291 205 QCURVE SMOOTH",
"278 175 OFFCURVE",
"237 106 OFFCURVE",
"216 81 QCURVE SMOOTH",
"163 17 OFFCURVE",
"130 24 QCURVE SMOOTH",
"104 29 OFFCURVE",
"92 82 OFFCURVE",
"105 157 OFFCURVE",
"137 242 OFFCURVE",
"156 280 QCURVE SMOOTH",
"164 297 OFFCURVE",
"185 335 OFFCURVE",
"196 356 QCURVE",
"315 394 OFFCURVE",
"482 482 OFFCURVE",
"547 547 QCURVE SMOOTH",
"577 577 OFFCURVE",
"627 645 OFFCURVE",
"660 710 OFFCURVE",
"674 769 OFFCURVE",
"663 813 OFFCURVE",
"623 837 OFFCURVE",
"586 835 QCURVE SMOOTH",
"548 833 OFFCURVE",
"478 799 OFFCURVE",
"411 744 OFFCURVE",
"345 671 OFFCURVE",
"312 631 QCURVE SMOOTH",
"261 568 OFFCURVE",
"185 439 OFFCURVE",
"149 367 QCURVE",
"122 364 OFFCURVE",
"75 375 OFFCURVE",
"71 399 QCURVE SMOOTH",
"71 401 LINE SMOOTH",
"71 408 OFFCURVE",
"65 415 OFFCURVE",
"56 417 OFFCURVE",
"47 411 OFFCURVE",
"46 404 QCURVE",
"46 404 LINE"
);
},
{
closed = 1;
nodes = (
"235 421 OFFCURVE",
"290 509 OFFCURVE",
"354 601 OFFCURVE",
"423 690 OFFCURVE",
"495 760 OFFCURVE",
"566 802 OFFCURVE",
"599 802 QCURVE SMOOTH",
"630 802 OFFCURVE",
"643 756 OFFCURVE",
"618 686 OFFCURVE",
"563 603 OFFCURVE",
"527 566 QCURVE SMOOTH",
"460 497 OFFCURVE",
"295 410 OFFCURVE",
"214 387 QCURVE",
"214 387 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
17 2 93 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 345;
}
);
note = b.alt;
},
{
glyphname = d.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"705 727 OFFCURVE",
"713 787 OFFCURVE",
"692 817 OFFCURVE",
"646 818 OFFCURVE",
"592 792 OFFCURVE",
"535 740 OFFCURVE",
"513 703 QCURVE SMOOTH",
"464 619 OFFCURVE",
"381 455 OFFCURVE",
"346 376 QCURVE",
"325 337 LINE",
"298 353 OFFCURVE",
"240 357 OFFCURVE",
"183 339 OFFCURVE",
"131 303 OFFCURVE",
"110 279 QCURVE SMOOTH",
"83 246 OFFCURVE",
"39 159 OFFCURVE",
"22 77 OFFCURVE",
"41 14 OFFCURVE",
"76 4 QCURVE SMOOTH",
"102 -3 OFFCURVE",
"146 16 OFFCURVE",
"182 52 OFFCURVE",
"211 97 OFFCURVE",
"222 115 QCURVE",
"220 94 OFFCURVE",
"230 52 OFFCURVE",
"254 20 OFFCURVE",
"294 0 OFFCURVE",
"321 0 QCURVE SMOOTH",
"357 0 OFFCURVE",
"412 42 OFFCURVE",
"454 102 OFFCURVE",
"483 165 OFFCURVE",
"494 186 QCURVE SMOOTH",
"501 201 OFFCURVE",
"484 206 OFFCURVE",
"478 192 QCURVE SMOOTH",
"467 167 OFFCURVE",
"435 108 OFFCURVE",
"397 58 OFFCURVE",
"354 25 OFFCURVE",
"332 25 QCURVE SMOOTH",
"311 25 OFFCURVE",
"284 48 OFFCURVE",
"273 86 OFFCURVE",
"280 137 OFFCURVE",
"295 165 QCURVE SMOOTH",
"367 303 LINE",
"415 340 OFFCURVE",
"506 433 OFFCURVE",
"585 533 OFFCURVE",
"652 635 OFFCURVE",
"678 680 QCURVE",
"678 680 LINE"
);
},
{
closed = 1;
nodes = (
"282 255 OFFCURVE",
"211 134 OFFCURVE",
"183 95 QCURVE SMOOTH",
"151 50 OFFCURVE",
"100 24 OFFCURVE",
"74 48 OFFCURVE",
"79 114 OFFCURVE",
"104 161 QCURVE SMOOTH",
"124 198 OFFCURVE",
"181 271 OFFCURVE",
"242 322 OFFCURVE",
"298 339 OFFCURVE",
"317 321 QCURVE",
"317 321 LINE"
);
},
{
closed = 1;
nodes = (
"638 653 OFFCURVE",
"575 557 OFFCURVE",
"504 463 OFFCURVE",
"428 377 OFFCURVE",
"392 347 QCURVE",
"409 380 OFFCURVE",
"464 486 OFFCURVE",
"526 599 OFFCURVE",
"589 703 OFFCURVE",
"613 734 QCURVE SMOOTH",
"640 769 OFFCURVE",
"670 781 OFFCURVE",
"680 758 OFFCURVE",
"671 714 OFFCURVE",
"660 694 QCURVE",
"660 694 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 422;
}
);
note = d.alt;
},
{
glyphname = e.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"248 216 OFFCURVE",
"282 258 OFFCURVE",
"298 299 OFFCURVE",
"293 333 OFFCURVE",
"279 344 QCURVE SMOOTH",
"259 359 OFFCURVE",
"203 352 OFFCURVE",
"174 335 QCURVE SMOOTH",
"133 311 OFFCURVE",
"71 232 OFFCURVE",
"51 184 QCURVE SMOOTH",
"30 130 OFFCURVE",
"31 38 OFFCURVE",
"67 -30 OFFCURVE",
"135 -71 OFFCURVE",
"182 -72 QCURVE SMOOTH",
"242 -74 OFFCURVE",
"345 -15 OFFCURVE",
"375 36 QCURVE SMOOTH",
"384 52 OFFCURVE",
"394 95 OFFCURVE",
"388 137 OFFCURVE",
"364 169 OFFCURVE",
"340 174 QCURVE",
"333 174 OFFCURVE",
"329 164 OFFCURVE",
"335 162 QCURVE SMOOTH",
"346 158 LINE SMOOTH",
"364 150 OFFCURVE",
"374 116 OFFCURVE",
"369 77 OFFCURVE",
"352 38 OFFCURVE",
"342 26 QCURVE SMOOTH",
"326 5 OFFCURVE",
"294 -25 OFFCURVE",
"275 -35 QCURVE SMOOTH",
"250 -48 OFFCURVE",
"192 -57 OFFCURVE",
"138 -44 OFFCURVE",
"95 -8 OFFCURVE",
"85 24 QCURVE SMOOTH",
"77 49 OFFCURVE",
"84 117 OFFCURVE",
"94 146 QCURVE",
"107 147 OFFCURVE",
"144 158 OFFCURVE",
"180 173 OFFCURVE",
"213 190 OFFCURVE",
"224 198 QCURVE",
"224 198 LINE"
);
},
{
closed = 1;
nodes = (
"200 204 OFFCURVE",
"169 187 OFFCURVE",
"139 176 OFFCURVE",
"115 171 OFFCURVE",
"108 171 QCURVE",
"115 185 OFFCURVE",
"148 241 OFFCURVE",
"168 265 QCURVE SMOOTH",
"199 302 OFFCURVE",
"241 333 OFFCURVE",
"265 334 OFFCURVE",
"271 310 OFFCURVE",
"261 274 OFFCURVE",
"234 232 OFFCURVE",
"214 215 QCURVE",
"214 215 LINE"
);
}
);
width = 389;
}
);
note = e.001;
},
{
glyphname = f.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"44 394 OFFCURVE",
"52 375 OFFCURVE",
"59 367 QCURVE SMOOTH",
"73 350 OFFCURVE",
"112 341 OFFCURVE",
"134 343 QCURVE",
"112 301 OFFCURVE",
"69 216 OFFCURVE",
"30 141 OFFCURVE",
"-5 79 OFFCURVE",
"-20 59 QCURVE SMOOTH",
"-25 52 OFFCURVE",
"-18 41 OFFCURVE",
"-12 46 QCURVE SMOOTH",
"3 60 OFFCURVE",
"55 151 OFFCURVE",
"90 217 QCURVE",
"67 160 OFFCURVE",
"29 39 OFFCURVE",
"2 -78 OFFCURVE",
"-9 -183 OFFCURVE",
"0 -262 OFFCURVE",
"34 -308 OFFCURVE",
"65 -308 QCURVE SMOOTH",
"97 -308 OFFCURVE",
"154 -271 OFFCURVE",
"199 -211 OFFCURVE",
"233 -133 OFFCURVE",
"243 -92 QCURVE SMOOTH",
"250 -64 OFFCURVE",
"259 -5 OFFCURVE",
"260 53 OFFCURVE",
"252 107 OFFCURVE",
"242 130 QCURVE SMOOTH",
"236 145 OFFCURVE",
"214 176 OFFCURVE",
"182 199 OFFCURVE",
"140 212 OFFCURVE",
"113 210 QCURVE SMOOTH",
"99 209 OFFCURVE",
"88 195 OFFCURVE",
"97 197 QCURVE SMOOTH",
"145 207 OFFCURVE",
"204 158 OFFCURVE",
"213 107 QCURVE SMOOTH",
"221 65 OFFCURVE",
"212 -36 OFFCURVE",
"201 -84 QCURVE SMOOTH",
"193 -117 OFFCURVE",
"165 -189 OFFCURVE",
"130 -247 OFFCURVE",
"89 -283 OFFCURVE",
"68 -278 QCURVE SMOOTH",
"44 -273 OFFCURVE",
"36 -192 OFFCURVE",
"53 -70 OFFCURVE",
"90 74 OFFCURVE",
"133 210 OFFCURVE",
"176 321 OFFCURVE",
"191 348 QCURVE",
"267 376 OFFCURVE",
"395 434 OFFCURVE",
"503 506 OFFCURVE",
"592 596 OFFCURVE",
"629 656 QCURVE SMOOTH",
"669 721 OFFCURVE",
"667 804 OFFCURVE",
"613 839 OFFCURVE",
"521 826 OFFCURVE",
"472 794 QCURVE SMOOTH",
"420 760 OFFCURVE",
"325 653 OFFCURVE",
"242 533 OFFCURVE",
"174 413 OFFCURVE",
"149 367 QCURVE",
"135 365 OFFCURVE",
"108 367 OFFCURVE",
"85 375 OFFCURVE",
"69 390 OFFCURVE",
"67 403 QCURVE",
"68 417 OFFCURVE",
"49 418 OFFCURVE",
"46 404 QCURVE",
"46 404 LINE"
);
},
{
closed = 1;
nodes = (
"232 425 OFFCURVE",
"293 533 OFFCURVE",
"366 639 OFFCURVE",
"447 732 OFFCURVE",
"490 762 QCURVE SMOOTH",
"525 787 OFFCURVE",
"595 806 OFFCURVE",
"637 786 OFFCURVE",
"638 724 OFFCURVE",
"605 667 QCURVE SMOOTH",
"574 614 OFFCURVE",
"483 522 OFFCURVE",
"377 448 OFFCURVE",
"263 394 OFFCURVE",
"209 379 QCURVE",
"209 379 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 321;
}
);
note = f.alt;
},
{
glyphname = g.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"470 199 OFFCURVE",
"455 205 OFFCURVE",
"448 192 QCURVE SMOOTH",
"440 178 OFFCURVE",
"415 119 OFFCURVE",
"390 86 QCURVE SMOOTH",
"382 76 OFFCURVE",
"361 54 OFFCURVE",
"339 33 OFFCURVE",
"316 15 OFFCURVE",
"307 9 QCURVE",
"315 39 OFFCURVE",
"329 103 OFFCURVE",
"337 169 OFFCURVE",
"338 234 OFFCURVE",
"333 264 QCURVE",
"327 259 OFFCURVE",
"310 259 OFFCURVE",
"292 255 OFFCURVE",
"276 241 OFFCURVE",
"271 224 QCURVE SMOOTH",
"264 200 OFFCURVE",
"224 128 OFFCURVE",
"173 63 OFFCURVE",
"118 24 OFFCURVE",
"96 33 QCURVE SMOOTH",
"76 42 OFFCURVE",
"75 91 OFFCURVE",
"100 156 OFFCURVE",
"146 228 OFFCURVE",
"173 259 QCURVE SMOOTH",
"196 284 OFFCURVE",
"245 322 OFFCURVE",
"289 337 OFFCURVE",
"324 323 OFFCURVE",
"334 296 QCURVE SMOOTH",
"338 285 OFFCURVE",
"352 283 OFFCURVE",
"361 294 OFFCURVE",
"358 314 OFFCURVE",
"345 325 QCURVE SMOOTH",
"317 347 OFFCURVE",
"254 358 OFFCURVE",
"192 343 OFFCURVE",
"135 306 OFFCURVE",
"113 279 QCURVE SMOOTH",
"85 246 OFFCURVE",
"40 164 OFFCURVE",
"22 85 OFFCURVE",
"41 20 OFFCURVE",
"79 4 QCURVE",
"109 -5 OFFCURVE",
"167 29 OFFCURVE",
"218 87 OFFCURVE",
"259 154 OFFCURVE",
"271 177 QCURVE",
"273 162 OFFCURVE",
"272 111 OFFCURVE",
"267 55 OFFCURVE",
"257 2 OFFCURVE",
"251 -14 QCURVE",
"206 -26 OFFCURVE",
"106 -49 OFFCURVE",
"8 -77 OFFCURVE",
"-83 -111 OFFCURVE",
"-120 -134 QCURVE SMOOTH",
"-164 -160 OFFCURVE",
"-236 -234 OFFCURVE",
"-262 -282 QCURVE SMOOTH",
"-281 -318 OFFCURVE",
"-292 -393 OFFCURVE",
"-267 -454 OFFCURVE",
"-203 -490 OFFCURVE",
"-148 -487 QCURVE SMOOTH",
"-96 -484 OFFCURVE",
"5 -435 OFFCURVE",
"96 -359 OFFCURVE",
"176 -263 OFFCURVE",
"241 -162 OFFCURVE",
"287 -63 OFFCURVE",
"299 -23 QCURVE",
"327 -10 OFFCURVE",
"371 29 OFFCURVE",
"409 80 OFFCURVE",
"444 145 OFFCURVE",
"463 184 QCURVE",
"463 184 LINE"
);
},
{
closed = 1;
nodes = (
"223 -85 OFFCURVE",
"173 -180 OFFCURVE",
"110 -272 OFFCURVE",
"35 -355 OFFCURVE",
"-46 -417 OFFCURVE",
"-130 -454 OFFCURVE",
"-172 -454 QCURVE SMOOTH",
"-209 -454 OFFCURVE",
"-250 -421 OFFCURVE",
"-261 -367 OFFCURVE",
"-244 -300 OFFCURVE",
"-200 -231 OFFCURVE",
"-131 -168 OFFCURVE",
"-85 -145 QCURVE SMOOTH",
"-50 -128 OFFCURVE",
"36 -96 OFFCURVE",
"125 -69 OFFCURVE",
"207 -48 OFFCURVE",
"238 -41 QCURVE",
"238 -41 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
98 2 12 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 392;
}
);
note = g.001;
},
{
glyphname = h.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"44 394 OFFCURVE",
"52 375 OFFCURVE",
"59 367 QCURVE SMOOTH",
"73 350 OFFCURVE",
"112 341 OFFCURVE",
"134 343 QCURVE",
"112 301 OFFCURVE",
"71 219 OFFCURVE",
"33 145 OFFCURVE",
"-3 82 OFFCURVE",
"-20 59 QCURVE SMOOTH",
"-25 52 OFFCURVE",
"-17 40 OFFCURVE",
"-12 46 QCURVE SMOOTH",
"7 66 OFFCURVE",
"49 139 OFFCURVE",
"80 198 QCURVE",
"81 196 OFFCURVE",
"60 151 OFFCURVE",
"28 87 OFFCURVE",
"-8 18 OFFCURVE",
"-21 -7 QCURVE",
"-13 -2 OFFCURVE",
"2 -2 OFFCURVE",
"13 -1 QCURVE SMOOTH",
"29 -1 OFFCURVE",
"45 3 OFFCURVE",
"50 14 QCURVE SMOOTH",
"93 97 OFFCURVE",
"164 189 OFFCURVE",
"190 212 QCURVE SMOOTH",
"219 239 OFFCURVE",
"255 259 OFFCURVE",
"272 255 OFFCURVE",
"270 233 OFFCURVE",
"261 218 QCURVE SMOOTH",
"240 184 OFFCURVE",
"212 133 OFFCURVE",
"206 113 QCURVE SMOOTH",
"195 78 OFFCURVE",
"199 33 OFFCURVE",
"218 6 OFFCURVE",
"246 -4 OFFCURVE",
"259 -4 QCURVE SMOOTH",
"287 -4 OFFCURVE",
"335 35 OFFCURVE",
"376 92 OFFCURVE",
"409 157 OFFCURVE",
"421 183 QCURVE SMOOTH",
"429 199 OFFCURVE",
"414 207 OFFCURVE",
"407 193 QCURVE SMOOTH",
"399 177 OFFCURVE",
"368 117 OFFCURVE",
"330 58 OFFCURVE",
"289 16 OFFCURVE",
"272 17 QCURVE SMOOTH",
"262 18 OFFCURVE",
"251 39 OFFCURVE",
"257 70 QCURVE SMOOTH",
"259 83 OFFCURVE",
"272 119 OFFCURVE",
"290 160 OFFCURVE",
"311 204 OFFCURVE",
"322 225 QCURVE SMOOTH",
"347 274 OFFCURVE",
"377 328 QCURVE",
"364 332 OFFCURVE",
"317 316 OFFCURVE",
"263 287 OFFCURVE",
"210 250 OFFCURVE",
"192 234 QCURVE SMOOTH",
"182 225 OFFCURVE",
"155 200 OFFCURVE",
"127 171 OFFCURVE",
"100 141 OFFCURVE",
"90 128 QCURVE",
"93 136 LINE SMOOTH",
"100 155 OFFCURVE",
"115 193 OFFCURVE",
"123 212 QCURVE SMOOTH",
"130 227 OFFCURVE",
"145 260 OFFCURVE",
"156 280 QCURVE SMOOTH",
"164 297 OFFCURVE",
"185 335 OFFCURVE",
"196 356 QCURVE",
"315 394 OFFCURVE",
"482 482 OFFCURVE",
"547 547 QCURVE SMOOTH",
"577 577 OFFCURVE",
"627 645 OFFCURVE",
"660 710 OFFCURVE",
"674 769 OFFCURVE",
"663 813 OFFCURVE",
"623 837 OFFCURVE",
"586 835 QCURVE SMOOTH",
"548 833 OFFCURVE",
"478 799 OFFCURVE",
"411 744 OFFCURVE",
"345 671 OFFCURVE",
"312 631 QCURVE SMOOTH",
"261 568 OFFCURVE",
"185 439 OFFCURVE",
"149 367 QCURVE",
"122 364 OFFCURVE",
"75 375 OFFCURVE",
"71 399 QCURVE SMOOTH",
"71 401 LINE SMOOTH",
"71 408 OFFCURVE",
"65 415 OFFCURVE",
"56 417 OFFCURVE",
"47 411 OFFCURVE",
"46 404 QCURVE",
"46 404 LINE"
);
},
{
closed = 1;
nodes = (
"235 421 OFFCURVE",
"290 509 OFFCURVE",
"354 601 OFFCURVE",
"423 690 OFFCURVE",
"495 760 OFFCURVE",
"566 802 OFFCURVE",
"599 802 QCURVE SMOOTH",
"630 802 OFFCURVE",
"643 756 OFFCURVE",
"618 686 OFFCURVE",
"563 603 OFFCURVE",
"527 566 QCURVE SMOOTH",
"460 497 OFFCURVE",
"295 410 OFFCURVE",
"214 387 QCURVE",
"214 387 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
89 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
92 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 2 122 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 351;
}
);
note = h.alt;
},
{
glyphname = h.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"446 618 OFFCURVE",
"468 704 OFFCURVE",
"456 754 OFFCURVE",
"418 768 OFFCURVE",
"368 749 OFFCURVE",
"312 696 OFFCURVE",
"288 653 QCURVE SMOOTH",
"228 544 OFFCURVE",
"125 335 OFFCURVE",
"86 248 QCURVE",
"-40 -7 LINE",
"-32 -2 OFFCURVE",
"-17 -2 OFFCURVE",
"-6 -1 QCURVE SMOOTH",
"10 -1 OFFCURVE",
"26 3 OFFCURVE",
"31 14 QCURVE SMOOTH",
"74 97 OFFCURVE",
"145 189 OFFCURVE",
"171 212 QCURVE SMOOTH",
"200 239 OFFCURVE",
"236 259 OFFCURVE",
"253 255 OFFCURVE",
"251 233 OFFCURVE",
"242 218 QCURVE SMOOTH",
"221 184 OFFCURVE",
"193 133 OFFCURVE",
"187 113 QCURVE SMOOTH",
"176 78 OFFCURVE",
"180 33 OFFCURVE",
"199 6 OFFCURVE",
"227 -4 OFFCURVE",
"240 -4 QCURVE SMOOTH",
"268 -4 OFFCURVE",
"316 35 OFFCURVE",
"357 92 OFFCURVE",
"390 157 OFFCURVE",
"402 183 QCURVE SMOOTH",
"410 199 OFFCURVE",
"395 207 OFFCURVE",
"388 193 QCURVE SMOOTH",
"380 177 OFFCURVE",
"349 117 OFFCURVE",
"311 58 OFFCURVE",
"270 16 OFFCURVE",
"253 17 QCURVE SMOOTH",
"243 18 OFFCURVE",
"232 39 OFFCURVE",
"238 70 QCURVE SMOOTH",
"240 83 OFFCURVE",
"253 119 OFFCURVE",
"271 160 OFFCURVE",
"292 204 OFFCURVE",
"303 225 QCURVE SMOOTH",
"328 274 OFFCURVE",
"358 328 QCURVE",
"345 332 OFFCURVE",
"298 316 OFFCURVE",
"244 287 OFFCURVE",
"191 250 OFFCURVE",
"173 234 QCURVE SMOOTH",
"153 217 OFFCURVE",
"112 172 OFFCURVE",
"92 146 QCURVE",
"129 223 LINE",
"131 225 LINE SMOOTH",
"171 258 OFFCURVE",
"243 326 OFFCURVE",
"311 404 OFFCURVE",
"377 497 OFFCURVE",
"411 557 QCURVE",
"411 557 LINE"
);
},
{
closed = 1;
nodes = (
"335 480 OFFCURVE",
"206 317 OFFCURVE",
"146 260 QCURVE",
"191 354 OFFCURVE",
"255 483 OFFCURVE",
"305 576 OFFCURVE",
"347 642 OFFCURVE",
"371 672 QCURVE SMOOTH",
"395 703 OFFCURVE",
"422 723 OFFCURVE",
"433 714 OFFCURVE",
"430 683 OFFCURVE",
"419 642 OFFCURVE",
"401 598 OFFCURVE",
"391 580 QCURVE",
"391 580 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 332;
}
);
note = h.001;
},
{
glyphname = k.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"453 654 OFFCURVE",
"445 705 OFFCURVE",
"400 713 OFFCURVE",
"333 679 OFFCURVE",
"305 642 QCURVE SMOOTH",
"281 611 OFFCURVE",
"223 514 OFFCURVE",
"160 397 OFFCURVE",
"95 270 OFFCURVE",
"35 146 OFFCURVE",
"-18 35 OFFCURVE",
"-37 -7 QCURVE",
"-29 -2 OFFCURVE",
"-14 -2 OFFCURVE",
"-3 -1 QCURVE SMOOTH",
"13 -1 OFFCURVE",
"29 3 OFFCURVE",
"34 14 QCURVE SMOOTH",
"44 36 OFFCURVE",
"63 80 OFFCURVE",
"74 103 QCURVE SMOOTH",
"100 151 OFFCURVE",
"161 223 OFFCURVE",
"189 247 QCURVE SMOOTH",
"232 284 OFFCURVE",
"291 300 OFFCURVE",
"317 283 OFFCURVE",
"309 243 OFFCURVE",
"285 224 QCURVE SMOOTH",
"276 217 OFFCURVE",
"250 205 OFFCURVE",
"221 197 OFFCURVE",
"195 193 OFFCURVE",
"187 194 QCURVE",
"177 189 OFFCURVE",
"156 171 OFFCURVE",
"141 142 OFFCURVE",
"135 103 OFFCURVE",
"140 79 QCURVE SMOOTH",
"148 40 OFFCURVE",
"190 -3 OFFCURVE",
"217 -6 QCURVE SMOOTH",
"239 -8 OFFCURVE",
"284 0 OFFCURVE",
"333 39 OFFCURVE",
"386 118 OFFCURVE",
"416 186 QCURVE SMOOTH",
"421 198 OFFCURVE",
"409 207 OFFCURVE",
"403 195 QCURVE SMOOTH",
"382 151 OFFCURVE",
"341 78 OFFCURVE",
"322 58 QCURVE SMOOTH",
"287 21 OFFCURVE",
"231 23 OFFCURVE",
"197 69 OFFCURVE",
"190 143 OFFCURVE",
"204 178 QCURVE",
"237 181 OFFCURVE",
"301 201 OFFCURVE",
"324 217 QCURVE SMOOTH",
"352 237 OFFCURVE",
"383 293 OFFCURVE",
"378 336 OFFCURVE",
"331 353 OFFCURVE",
"283 335 QCURVE SMOOTH",
"260 326 OFFCURVE",
"214 293 OFFCURVE",
"170 253 OFFCURVE",
"131 209 OFFCURVE",
"115 189 QCURVE",
"149 262 LINE",
"185 291 OFFCURVE",
"260 375 OFFCURVE",
"332 468 OFFCURVE",
"397 564 OFFCURVE",
"423 605 QCURVE",
"423 605 LINE"
);
},
{
closed = 1;
nodes = (
"387 584 OFFCURVE",
"325 491 OFFCURVE",
"257 399 OFFCURVE",
"189 317 OFFCURVE",
"162 292 QCURVE",
"182 339 OFFCURVE",
"236 446 OFFCURVE",
"291 543 OFFCURVE",
"340 621 OFFCURVE",
"356 640 QCURVE SMOOTH",
"380 668 OFFCURVE",
"409 684 OFFCURVE",
"422 672 OFFCURVE",
"417 641 OFFCURVE",
"407 622 QCURVE",
"407 622 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 345;
}
);
note = k.001;
},
{
glyphname = k.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"40 387 OFFCURVE",
"48 368 OFFCURVE",
"55 360 QCURVE SMOOTH",
"69 343 OFFCURVE",
"108 334 OFFCURVE",
"130 336 QCURVE",
"108 294 OFFCURVE",
"67 212 OFFCURVE",
"29 138 OFFCURVE",
"-7 75 OFFCURVE",
"-24 52 QCURVE SMOOTH",
"-29 45 OFFCURVE",
"-21 33 OFFCURVE",
"-16 39 QCURVE SMOOTH",
"3 59 OFFCURVE",
"45 132 OFFCURVE",
"76 191 QCURVE SMOOTH",
"88 214 LINE",
"65 164 OFFCURVE",
"21 73 OFFCURVE",
"8 22 QCURVE SMOOTH",
"5 12 OFFCURVE",
"5 0 OFFCURVE",
"16 0 QCURVE SMOOTH",
"79 0 LINE",
"73 5 OFFCURVE",
"75 46 OFFCURVE",
"85 95 OFFCURVE",
"100 143 OFFCURVE",
"107 156 QCURVE",
"127 185 OFFCURVE",
"169 230 OFFCURVE",
"189 247 QCURVE SMOOTH",
"232 284 OFFCURVE",
"291 300 OFFCURVE",
"317 283 OFFCURVE",
"309 243 OFFCURVE",
"285 224 QCURVE SMOOTH",
"268 210 OFFCURVE",
"223 192 OFFCURVE",
"206 194 QCURVE",
"198 193 OFFCURVE",
"178 175 OFFCURVE",
"162 145 OFFCURVE",
"154 103 OFFCURVE",
"159 79 QCURVE SMOOTH",
"167 40 OFFCURVE",
"209 -3 OFFCURVE",
"236 -6 QCURVE SMOOTH",
"258 -8 OFFCURVE",
"303 0 OFFCURVE",
"352 39 OFFCURVE",
"405 118 OFFCURVE",
"435 186 QCURVE SMOOTH",
"440 198 OFFCURVE",
"428 207 OFFCURVE",
"422 195 QCURVE SMOOTH",
"401 151 OFFCURVE",
"360 78 OFFCURVE",
"341 58 QCURVE SMOOTH",
"306 21 OFFCURVE",
"250 23 OFFCURVE",
"216 69 OFFCURVE",
"209 143 OFFCURVE",
"223 178 QCURVE",
"256 181 OFFCURVE",
"301 201 OFFCURVE",
"324 217 QCURVE SMOOTH",
"352 237 OFFCURVE",
"383 293 OFFCURVE",
"378 336 OFFCURVE",
"331 353 OFFCURVE",
"283 335 QCURVE SMOOTH",
"261 327 OFFCURVE",
"217 296 OFFCURVE",
"174 257 OFFCURVE",
"136 214 OFFCURVE",
"120 195 QCURVE",
"124 206 OFFCURVE",
"144 250 OFFCURVE",
"167 297 OFFCURVE",
"188 339 OFFCURVE",
"193 349 QCURVE",
"311 387 OFFCURVE",
"478 475 OFFCURVE",
"543 540 QCURVE SMOOTH",
"573 570 OFFCURVE",
"623 638 OFFCURVE",
"656 703 OFFCURVE",
"670 762 OFFCURVE",
"659 806 OFFCURVE",
"619 830 OFFCURVE",
"582 828 QCURVE SMOOTH",
"544 826 OFFCURVE",
"474 792 OFFCURVE",
"407 737 OFFCURVE",
"341 664 OFFCURVE",
"308 624 QCURVE SMOOTH",
"257 561 OFFCURVE",
"181 432 OFFCURVE",
"145 360 QCURVE",
"118 357 OFFCURVE",
"71 368 OFFCURVE",
"67 392 QCURVE SMOOTH",
"67 394 LINE SMOOTH",
"67 401 OFFCURVE",
"61 408 OFFCURVE",
"52 410 OFFCURVE",
"43 404 OFFCURVE",
"42 397 QCURVE",
"42 397 LINE"
);
},
{
closed = 1;
nodes = (
"231 414 OFFCURVE",
"286 502 OFFCURVE",
"350 594 OFFCURVE",
"419 683 OFFCURVE",
"491 753 OFFCURVE",
"562 795 OFFCURVE",
"595 795 QCURVE SMOOTH",
"626 795 OFFCURVE",
"639 749 OFFCURVE",
"614 679 OFFCURVE",
"559 596 OFFCURVE",
"523 559 QCURVE SMOOTH",
"456 490 OFFCURVE",
"291 403 OFFCURVE",
"210 380 QCURVE",
"210 380 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
61 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
85 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 2 118 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 363;
}
);
note = k.alt;
},
{
glyphname = l.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"403 651 OFFCURVE",
"411 719 OFFCURVE",
"394 755 OFFCURVE",
"358 761 OFFCURVE",
"315 739 OFFCURVE",
"270 692 OFFCURVE",
"252 657 QCURVE SMOOTH",
"228 610 OFFCURVE",
"171 486 OFFCURVE",
"115 357 OFFCURVE",
"70 237 OFFCURVE",
"58 195 QCURVE SMOOTH",
"54 180 OFFCURVE",
"42 139 OFFCURVE",
"34 95 OFFCURVE",
"33 53 OFFCURVE",
"46 19 OFFCURVE",
"77 -2 OFFCURVE",
"105 -2 QCURVE SMOOTH",
"143 -2 OFFCURVE",
"201 42 OFFCURVE",
"244 102 OFFCURVE",
"274 166 OFFCURVE",
"283 186 QCURVE SMOOTH",
"290 201 OFFCURVE",
"275 204 OFFCURVE",
"268 191 QCURVE SMOOTH",
"263 181 OFFCURVE",
"248 152 OFFCURVE",
"229 118 OFFCURVE",
"206 82 OFFCURVE",
"194 64 QCURVE SMOOTH",
"174 36 OFFCURVE",
"129 15 OFFCURVE",
"94 30 OFFCURVE",
"80 82 OFFCURVE",
"91 127 QCURVE SMOOTH",
"96 146 OFFCURVE",
"108 180 OFFCURVE",
"112 193 QCURVE",
"149 226 OFFCURVE",
"225 324 OFFCURVE",
"297 435 OFFCURVE",
"358 549 OFFCURVE",
"380 599 QCURVE",
"380 599 LINE"
);
},
{
closed = 1;
nodes = (
"343 573 OFFCURVE",
"283 459 OFFCURVE",
"215 348 OFFCURVE",
"147 252 OFFCURVE",
"120 225 QCURVE",
"139 277 OFFCURVE",
"190 406 OFFCURVE",
"244 532 OFFCURVE",
"299 641 OFFCURVE",
"322 675 QCURVE SMOOTH",
"347 712 OFFCURVE",
"373 720 OFFCURVE",
"380 692 OFFCURVE",
"370 640 OFFCURVE",
"361 618 QCURVE",
"361 618 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 212;
}
);
note = l.001;
},
{
glyphname = p.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"297 357 OFFCURVE",
"235 315 OFFCURVE",
"172 239 OFFCURVE",
"114 140 OFFCURVE",
"94 90 QCURVE SMOOTH",
"99 103 OFFCURVE",
"119 163 OFFCURVE",
"140 229 OFFCURVE",
"156 289 OFFCURVE",
"156 301 QCURVE SMOOTH",
"156 319 OFFCURVE",
"150 338 OFFCURVE",
"138 345 OFFCURVE",
"121 344 OFFCURVE",
"111 343 QCURVE",
"108 342 OFFCURVE",
"100 341 OFFCURVE",
"96 339 QCURVE SMOOTH",
"92 337 OFFCURVE",
"87 335 QCURVE",
"97 332 OFFCURVE",
"88 279 OFFCURVE",
"67 211 OFFCURVE",
"40 146 OFFCURVE",
"33 131 QCURVE SMOOTH",
"26 117 LINE",
"-6 81 OFFCURVE",
"-68 -8 OFFCURVE",
"-125 -103 OFFCURVE",
"-175 -197 OFFCURVE",
"-194 -239 QCURVE SMOOTH",
"-217 -291 OFFCURVE",
"-225 -359 OFFCURVE",
"-208 -395 OFFCURVE",
"-172 -401 OFFCURVE",
"-129 -379 OFFCURVE",
"-83 -332 OFFCURVE",
"-66 -297 QCURVE SMOOTH",
"-50 -266 OFFCURVE",
"-14 -191 OFFCURVE",
"23 -108 OFFCURVE",
"59 -23 OFFCURVE",
"75 17 QCURVE",
"102 2 OFFCURVE",
"160 -2 OFFCURVE",
"216 15 OFFCURVE",
"268 51 OFFCURVE",
"289 76 QCURVE SMOOTH",
"316 109 OFFCURVE",
"361 196 OFFCURVE",
"377 277 OFFCURVE",
"359 340 OFFCURVE",
"323 350 QCURVE",
"323 350 LINE"
);
},
{
closed = 1;
nodes = (
"276 157 OFFCURVE",
"218 83 OFFCURVE",
"157 32 OFFCURVE",
"101 15 OFFCURVE",
"83 33 QCURVE",
"118 99 OFFCURVE",
"188 221 OFFCURVE",
"217 260 QCURVE SMOOTH",
"249 305 OFFCURVE",
"300 330 OFFCURVE",
"326 306 OFFCURVE",
"321 240 OFFCURVE",
"296 194 QCURVE",
"296 194 LINE"
);
},
{
closed = 1;
nodes = (
"-157 -213 OFFCURVE",
"-97 -99 OFFCURVE",
"-29 12 OFFCURVE",
"39 108 OFFCURVE",
"66 135 QCURVE",
"47 82 OFFCURVE",
"-4 -46 OFFCURVE",
"-58 -172 OFFCURVE",
"-113 -281 OFFCURVE",
"-136 -315 QCURVE SMOOTH",
"-162 -352 OFFCURVE",
"-187 -360 OFFCURVE",
"-194 -332 OFFCURVE",
"-184 -281 OFFCURVE",
"-175 -258 QCURVE",
"-175 -258 LINE"
);
}
);
width = 346;
}
);
note = p.001;
},
{
glyphname = s.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"333 197 OFFCURVE",
"318 203 OFFCURVE",
"314 195 QCURVE SMOOTH",
"306 180 OFFCURVE",
"287 143 OFFCURVE",
"267 107 OFFCURVE",
"248 74 OFFCURVE",
"239 64 QCURVE SMOOTH",
"219 40 OFFCURVE",
"157 8 OFFCURVE",
"128 11 QCURVE",
"147 14 OFFCURVE",
"178 41 OFFCURVE",
"200 77 OFFCURVE",
"212 115 OFFCURVE",
"213 130 QCURVE SMOOTH",
"215 163 OFFCURVE",
"189 219 OFFCURVE",
"177 248 QCURVE SMOOTH",
"170 265 OFFCURVE",
"160 327 OFFCURVE",
"164 353 QCURVE SMOOTH",
"165 364 OFFCURVE",
"175 383 OFFCURVE",
"189 395 OFFCURVE",
"208 397 OFFCURVE",
"219 391 QCURVE SMOOTH",
"227 386 OFFCURVE",
"245 379 OFFCURVE",
"255 381 QCURVE SMOOTH",
"271 384 OFFCURVE",
"284 403 OFFCURVE",
"281 422 OFFCURVE",
"264 438 OFFCURVE",
"251 439 QCURVE SMOOTH",
"236 440 OFFCURVE",
"199 426 OFFCURVE",
"180 407 QCURVE SMOOTH",
"162 389 OFFCURVE",
"128 338 OFFCURVE",
"114 310 QCURVE SMOOTH",
"92 268 OFFCURVE",
"48 175 OFFCURVE",
"28 137 QCURVE",
"16 137 OFFCURVE",
"-2 115 OFFCURVE",
"-10 82 OFFCURVE",
"-7 44 OFFCURVE",
"1 27 QCURVE SMOOTH",
"6 16 OFFCURVE",
"27 1 OFFCURVE",
"53 -8 OFFCURVE",
"83 -12 OFFCURVE",
"98 -12 QCURVE SMOOTH",
"144 -12 OFFCURVE",
"222 17 OFFCURVE",
"253 54 QCURVE SMOOTH",
"279 84 OFFCURVE",
"315 158 OFFCURVE",
"329 189 QCURVE",
"329 189 LINE"
);
},
{
closed = 1;
nodes = (
"50 13 OFFCURVE",
"29 43 OFFCURVE",
"34 63 QCURVE SMOOTH",
"35 67 OFFCURVE",
"41 81 OFFCURVE",
"50 92 OFFCURVE",
"61 98 OFFCURVE",
"66 95 QCURVE",
"68 103 OFFCURVE",
"66 118 OFFCURVE",
"64 121 QCURVE SMOOTH",
"60 130 OFFCURVE",
"52 134 QCURVE SMOOTH",
"48 136 OFFCURVE",
"45 135 QCURVE",
"54 151 OFFCURVE",
"78 198 OFFCURVE",
"104 249 OFFCURVE",
"129 300 OFFCURVE",
"139 320 QCURVE",
"136 303 OFFCURVE",
"140 257 OFFCURVE",
"147 206 OFFCURVE",
"153 154 OFFCURVE",
"152 130 QCURVE SMOOTH",
"150 98 OFFCURVE",
"133 53 OFFCURVE",
"121 39 QCURVE SMOOTH",
"111 28 OFFCURVE",
"88 13 OFFCURVE",
"71 13 QCURVE",
"71 13 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
44 3 66 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 66 26 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
60 2 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 256;
}
);
note = s.alt;
},
{
glyphname = t.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"193 520 OFFCURVE",
"161 457 OFFCURVE",
"144 422 QCURVE",
"96 420 OFFCURVE",
"23 383 OFFCURVE",
"6 343 QCURVE",
"4 336 OFFCURVE",
"15 331 OFFCURVE",
"19 336 QCURVE",
"22 342 LINE SMOOTH",
"30 356 OFFCURVE",
"43 374 OFFCURVE",
"54 379 QCURVE SMOOTH",
"71 387 OFFCURVE",
"112 395 OFFCURVE",
"132 397 QCURVE",
"109 346 OFFCURVE",
"71 242 OFFCURVE",
"58 195 QCURVE SMOOTH",
"54 180 OFFCURVE",
"42 139 OFFCURVE",
"34 95 OFFCURVE",
"33 53 OFFCURVE",
"46 19 OFFCURVE",
"77 -2 OFFCURVE",
"105 -2 QCURVE SMOOTH",
"143 -2 OFFCURVE",
"201 42 OFFCURVE",
"244 102 OFFCURVE",
"274 166 OFFCURVE",
"283 186 QCURVE SMOOTH",
"290 201 OFFCURVE",
"275 204 OFFCURVE",
"268 191 QCURVE SMOOTH",
"263 181 OFFCURVE",
"248 152 OFFCURVE",
"229 118 OFFCURVE",
"206 82 OFFCURVE",
"194 64 QCURVE SMOOTH",
"174 36 OFFCURVE",
"128 16 OFFCURVE",
"93 31 OFFCURVE",
"79 82 OFFCURVE",
"91 127 QCURVE SMOOTH",
"112 205 OFFCURVE",
"160 338 OFFCURVE",
"189 398 QCURVE",
"214 399 OFFCURVE",
"297 389 OFFCURVE",
"392 384 OFFCURVE",
"489 395 OFFCURVE",
"530 417 QCURVE SMOOTH",
"541 423 OFFCURVE",
"559 442 OFFCURVE",
"564 457 QCURVE SMOOTH",
"566 464 OFFCURVE",
"555 465 OFFCURVE",
"551 460 QCURVE",
"541 440 OFFCURVE",
"521 431 QCURVE SMOOTH",
"492 419 OFFCURVE",
"405 413 OFFCURVE",
"313 416 OFFCURVE",
"228 422 OFFCURVE",
"201 423 QCURVE",
"218 458 OFFCURVE",
"257 522 OFFCURVE",
"278 553 QCURVE SMOOTH",
"294 576 OFFCURVE",
"324 598 OFFCURVE",
"338 601 QCURVE",
"333 619 OFFCURVE",
"305 629 OFFCURVE",
"269 616 OFFCURVE",
"228 578 OFFCURVE",
"210 548 QCURVE",
"210 548 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 212;
}
);
note = t.001;
},
{
glyphname = y.001;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"476 197 OFFCURVE",
"462 204 OFFCURVE",
"455 191 QCURVE SMOOTH",
"447 177 OFFCURVE",
"415 115 OFFCURVE",
"392 81 QCURVE SMOOTH",
"377 60 OFFCURVE",
"341 27 OFFCURVE",
"303 3 OFFCURVE",
"264 -13 OFFCURVE",
"248 -18 QCURVE",
"270 42 OFFCURVE",
"309 160 OFFCURVE",
"328 211 QCURVE SMOOTH",
"337 236 OFFCURVE",
"353 277 OFFCURVE",
"371 309 OFFCURVE",
"392 334 OFFCURVE",
"406 344 QCURVE",
"352 344 LINE SMOOTH",
"338 344 OFFCURVE",
"319 335 OFFCURVE",
"313 323 QCURVE SMOOTH",
"299 293 OFFCURVE",
"262 223 OFFCURVE",
"221 152 OFFCURVE",
"177 86 OFFCURVE",
"156 62 QCURVE SMOOTH",
"132 34 OFFCURVE",
"94 19 OFFCURVE",
"75 40 OFFCURVE",
"79 92 OFFCURVE",
"97 131 QCURVE SMOOTH",
"118 176 OFFCURVE",
"161 264 OFFCURVE",
"187 308 QCURVE SMOOTH",
"196 324 OFFCURVE",
"217 338 OFFCURVE",
"224 344 QCURVE",
"163 344 LINE SMOOTH",
"149 344 OFFCURVE",
"130 335 OFFCURVE",
"124 323 QCURVE SMOOTH",
"113 300 OFFCURVE",
"83 242 OFFCURVE",
"68 213 QCURVE SMOOTH",
"63 204 OFFCURVE",
"55 186 OFFCURVE",
"50 178 QCURVE SMOOTH",
"45 168 OFFCURVE",
"54 162 OFFCURVE",
"59 162 QCURVE",
"52 148 OFFCURVE",
"37 121 OFFCURVE",
"26 92 OFFCURVE",
"22 62 OFFCURVE",
"25 46 QCURVE SMOOTH",
"28 32 OFFCURVE",
"43 14 OFFCURVE",
"61 4 OFFCURVE",
"80 1 OFFCURVE",
"88 1 QCURVE SMOOTH",
"117 1 OFFCURVE",
"170 42 OFFCURVE",
"215 99 OFFCURVE",
"251 162 OFFCURVE",
"264 185 QCURVE",
"258 165 OFFCURVE",
"241 109 OFFCURVE",
"220 48 OFFCURVE",
"197 -13 OFFCURVE",
"185 -38 QCURVE",
"138 -50 OFFCURVE",
"37 -77 OFFCURVE",
"-63 -109 OFFCURVE",
"-157 -148 OFFCURVE",
"-197 -173 QCURVE SMOOTH",
"-241 -199 OFFCURVE",
"-316 -271 OFFCURVE",
"-339 -321 QCURVE SMOOTH",
"-356 -358 OFFCURVE",
"-366 -433 OFFCURVE",
"-342 -493 OFFCURVE",
"-280 -529 OFFCURVE",
"-225 -526 QCURVE SMOOTH",
"-155 -522 OFFCURVE",
"-31 -445 OFFCURVE",
"76 -330 OFFCURVE",
"164 -193 OFFCURVE",
"198 -128 QCURVE SMOOTH",
"209 -107 OFFCURVE",
"224 -62 OFFCURVE",
"231 -50 QCURVE",
"285 -31 OFFCURVE",
"354 8 OFFCURVE",
"403 59 OFFCURVE",
"443 130 OFFCURVE",
"469 182 QCURVE",
"469 182 LINE"
);
},
{
closed = 1;
nodes = (
"155 -103 OFFCURVE",
"103 -195 OFFCURVE",
"38 -290 OFFCURVE",
"-39 -380 OFFCURVE",
"-122 -450 OFFCURVE",
"-207 -493 OFFCURVE",
"-249 -493 QCURVE SMOOTH",
"-286 -493 OFFCURVE",
"-327 -460 OFFCURVE",
"-338 -406 OFFCURVE",
"-321 -339 OFFCURVE",
"-277 -270 OFFCURVE",
"-208 -207 OFFCURVE",
"-162 -184 QCURVE SMOOTH",
"-127 -167 OFFCURVE",
"-44 -135 OFFCURVE",
"45 -105 OFFCURVE",
"133 -78 OFFCURVE",
"172 -66 QCURVE",
"172 -66 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
110 2 13 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 399;
}
);
note = y.001;
},
{
glyphname = C.alt;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"665 549 OFFCURVE",
"596 554 OFFCURVE",
"519 540 OFFCURVE",
"437 505 OFFCURVE",
"399 474 QCURVE SMOOTH",
"361 443 OFFCURVE",
"319 378 OFFCURVE",
"304 318 OFFCURVE",
"312 267 OFFCURVE",
"323 249 QCURVE SMOOTH",
"336 229 OFFCURVE",
"391 203 OFFCURVE",
"464 198 OFFCURVE",
"552 217 OFFCURVE",
"597 241 QCURVE SMOOTH",
"645 266 OFFCURVE",
"735 342 OFFCURVE",
"806 432 OFFCURVE",
"849 534 OFFCURVE",
"849 586 QCURVE SMOOTH",
"849 689 OFFCURVE",
"731 783 OFFCURVE",
"621 783 QCURVE SMOOTH",
"537 783 OFFCURVE",
"382 727 OFFCURVE",
"250 633 OFFCURVE",
"144 508 OFFCURVE",
"108 439 QCURVE SMOOTH",
"63 353 OFFCURVE",
"33 173 OFFCURVE",
"65 14 OFFCURVE",
"162 -108 OFFCURVE",
"245 -136 QCURVE SMOOTH",
"301 -154 OFFCURVE",
"413 -155 OFFCURVE",
"517 -129 OFFCURVE",
"609 -80 OFFCURVE",
"644 -48 QCURVE SMOOTH",
"668 -26 OFFCURVE",
"717 35 OFFCURVE",
"762 105 OFFCURVE",
"802 180 OFFCURVE",
"816 216 QCURVE SMOOTH",
"822 231 OFFCURVE",
"810 239 OFFCURVE",
"805 226 QCURVE SMOOTH",
"787 184 OFFCURVE",
"750 117 OFFCURVE",
"710 60 OFFCURVE",
"664 9 OFFCURVE",
"637 -16 QCURVE SMOOTH",
"602 -50 OFFCURVE",
"508 -103 OFFCURVE",
"406 -132 OFFCURVE",
"302 -132 OFFCURVE",
"256 -114 QCURVE SMOOTH",
"190 -87 OFFCURVE",
"122 30 OFFCURVE",
"107 179 OFFCURVE",
"140 344 OFFCURVE",
"173 420 QCURVE SMOOTH",
"201 485 OFFCURVE",
"286 608 OFFCURVE",
"397 703 OFFCURVE",
"532 761 OFFCURVE",
"610 761 QCURVE SMOOTH",
"673 761 OFFCURVE",
"762 731 OFFCURVE",
"785 695 QCURVE SMOOTH",
"799 674 OFFCURVE",
"809 615 OFFCURVE",
"804 583 QCURVE SMOOTH",
"798 537 OFFCURVE",
"761 453 OFFCURVE",
"706 378 OFFCURVE",
"635 313 OFFCURVE",
"595 288 QCURVE SMOOTH",
"544 255 OFFCURVE",
"451 228 OFFCURVE",
"379 232 OFFCURVE",
"336 266 OFFCURVE",
"333 322 OFFCURVE",
"377 399 OFFCURVE",
"429 445 QCURVE SMOOTH",
"457 468 OFFCURVE",
"527 505 OFFCURVE",
"598 528 OFFCURVE",
"664 536 OFFCURVE",
"688 530 QCURVE",
"695 532 OFFCURVE",
"698 538 OFFCURVE",
"691 540 QCURVE",
"691 540 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
69 1 26 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 731;
}
);
note = C.alt;
},
{
glyphname = apostrophe;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"134 657 OFFCURVE",
"115 657 QCURVE SMOOTH",
"102 657 OFFCURVE",
"84 637 OFFCURVE",
"85 624 QCURVE SMOOTH",
"94 459 LINE",
"104 459 LINE",
"107 471 OFFCURVE",
"120 521 OFFCURVE",
"132 577 OFFCURVE",
"139 627 OFFCURVE",
"137 638 QCURVE",
"137 638 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 193;
}
);
note = apostrophe;
unicode = 02BC;
},
{
glyphname = t_h;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"635 199 OFFCURVE",
"620 207 OFFCURVE",
"613 193 QCURVE SMOOTH",
"605 177 OFFCURVE",
"574 117 OFFCURVE",
"536 58 OFFCURVE",
"495 16 OFFCURVE",
"478 17 QCURVE SMOOTH",
"468 18 OFFCURVE",
"457 39 OFFCURVE",
"463 70 QCURVE SMOOTH",
"465 83 OFFCURVE",
"478 119 OFFCURVE",
"496 160 OFFCURVE",
"517 204 OFFCURVE",
"528 225 QCURVE SMOOTH",
"553 274 OFFCURVE",
"583 328 QCURVE",
"570 332 OFFCURVE",
"523 316 OFFCURVE",
"469 287 OFFCURVE",
"416 250 OFFCURVE",
"398 234 QCURVE SMOOTH",
"378 217 OFFCURVE",
"337 172 OFFCURVE",
"317 146 QCURVE",
"342 197 OFFCURVE",
"396 305 OFFCURVE",
"427 361 QCURVE",
"490 374 OFFCURVE",
"602 449 OFFCURVE",
"689 547 OFFCURVE",
"746 656 OFFCURVE",
"753 703 QCURVE SMOOTH",
"760 748 OFFCURVE",
"728 789 OFFCURVE",
"675 791 OFFCURVE",
"613 761 OFFCURVE",
"591 736 QCURVE SMOOTH",
"560 701 OFFCURVE",
"496 602 OFFCURVE",
"438 500 OFFCURVE",
"390 408 OFFCURVE",
"375 381 QCURVE",
"358 380 OFFCURVE",
"332 379 OFFCURVE",
"305 379 OFFCURVE",
"275 380 OFFCURVE",
"256 380 QCURVE",
"320 485 OFFCURVE",
"333 591 OFFCURVE",
"293 601 QCURVE",
"273 601 OFFCURVE",
"219 564 OFFCURVE",
"195 522 QCURVE SMOOTH",
"176 490 OFFCURVE",
"139 418 OFFCURVE",
"122 380 QCURVE",
"62 380 LINE SMOOTH",
"58 380 OFFCURVE",
"53 373 OFFCURVE",
"52 365 OFFCURVE",
"56 358 OFFCURVE",
"60 358 QCURVE SMOOTH",
"112 358 LINE",
"100 329 OFFCURVE",
"75 261 OFFCURVE",
"54 193 OFFCURVE",
"38 128 OFFCURVE",
"34 103 QCURVE SMOOTH",
"25 41 OFFCURVE",
"41 -43 OFFCURVE",
"81 -85 OFFCURVE",
"139 -85 OFFCURVE",
"173 -62 QCURVE SMOOTH",
"186 -53 OFFCURVE",
"175 -41 OFFCURVE",
"165 -50 QCURVE SMOOTH",
"144 -68 OFFCURVE",
"110 -58 OFFCURVE",
"88 -16 OFFCURVE",
"81 52 OFFCURVE",
"87 91 QCURVE SMOOTH",
"88 95 OFFCURVE",
"93 123 OFFCURVE",
"100 155 OFFCURVE",
"107 185 OFFCURVE",
"110 193 QCURVE",
"155 234 OFFCURVE",
"217 314 OFFCURVE",
"243 358 QCURVE",
"278 357 OFFCURVE",
"336 359 OFFCURVE",
"365 361 QCURVE",
"317 266 OFFCURVE",
"226 78 OFFCURVE",
"185 -7 QCURVE",
"193 -2 OFFCURVE",
"208 -2 OFFCURVE",
"219 -1 QCURVE SMOOTH",
"235 -1 OFFCURVE",
"251 3 OFFCURVE",
"256 14 QCURVE SMOOTH",
"299 97 OFFCURVE",
"370 189 OFFCURVE",
"396 212 QCURVE SMOOTH",
"425 239 OFFCURVE",
"461 259 OFFCURVE",
"478 255 OFFCURVE",
"476 233 OFFCURVE",
"467 218 QCURVE SMOOTH",
"446 184 OFFCURVE",
"418 133 OFFCURVE",
"412 113 QCURVE SMOOTH",
"401 78 OFFCURVE",
"405 33 OFFCURVE",
"424 6 OFFCURVE",
"452 -4 OFFCURVE",
"465 -4 QCURVE SMOOTH",
"495 -4 OFFCURVE",
"545 38 OFFCURVE",
"586 98 OFFCURVE",
"617 162 OFFCURVE",
"627 183 QCURVE",
"627 183 LINE"
);
},
{
closed = 1;
nodes = (
"465 434 OFFCURVE",
"517 529 OFFCURVE",
"574 619 OFFCURVE",
"633 699 OFFCURVE",
"662 729 QCURVE SMOOTH",
"675 742 OFFCURVE",
"702 753 OFFCURVE",
"721 745 OFFCURVE",
"728 717 OFFCURVE",
"721 691 QCURVE SMOOTH",
"709 647 OFFCURVE",
"657 551 OFFCURVE",
"583 466 OFFCURVE",
"493 403 OFFCURVE",
"444 391 QCURVE",
"444 391 LINE"
);
},
{
closed = 1;
nodes = (
"261 430 OFFCURVE",
"233 380 QCURVE",
"183 380 LINE",
"202 423 OFFCURVE",
"236 500 OFFCURVE",
"254 526 QCURVE SMOOTH",
"277 559 OFFCURVE",
"297 565 OFFCURVE",
"300 540 OFFCURVE",
"290 498 OFFCURVE",
"283 482 QCURVE",
"283 482 LINE"
);
},
{
closed = 1;
nodes = (
"220 358 LINE",
"198 322 OFFCURVE",
"148 254 OFFCURVE",
"119 225 QCURVE",
"130 251 OFFCURVE",
"157 321 OFFCURVE",
"173 358 QCURVE",
"173 358 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
80 2 33 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
116 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
147 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
147 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
150 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 557;
}
);
note = t_h;
},
{
glyphname = e_n;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"698 199 OFFCURVE",
"683 206 OFFCURVE",
"677 193 QCURVE SMOOTH",
"669 177 OFFCURVE",
"639 119 OFFCURVE",
"601 62 OFFCURVE",
"559 20 OFFCURVE",
"540 20 QCURVE SMOOTH",
"530 20 OFFCURVE",
"518 39 OFFCURVE",
"524 70 QCURVE SMOOTH",
"526 83 OFFCURVE",
"539 119 OFFCURVE",
"557 160 OFFCURVE",
"578 204 OFFCURVE",
"589 225 QCURVE SMOOTH",
"614 274 OFFCURVE",
"644 328 QCURVE",
"631 332 OFFCURVE",
"584 316 OFFCURVE",
"530 287 OFFCURVE",
"477 250 OFFCURVE",
"459 234 QCURVE SMOOTH",
"436 214 OFFCURVE",
"391 163 OFFCURVE",
"376 144 QCURVE",
"389 171 OFFCURVE",
"422 232 OFFCURVE",
"455 286 OFFCURVE",
"486 326 OFFCURVE",
"497 332 QCURVE",
"486 330 OFFCURVE",
"465 335 OFFCURVE",
"455 336 QCURVE SMOOTH",
"431 337 OFFCURVE",
"403 309 OFFCURVE",
"384 273 QCURVE SMOOTH",
"373 254 OFFCURVE",
"354 217 OFFCURVE",
"345 197 QCURVE",
"343 195 OFFCURVE",
"341 191 QCURVE SMOOTH",
"332 171 OFFCURVE",
"291 112 OFFCURVE",
"234 56 OFFCURVE",
"168 17 OFFCURVE",
"135 17 QCURVE SMOOTH",
"110 17 OFFCURVE",
"89 50 OFFCURVE",
"86 94 OFFCURVE",
"95 140 OFFCURVE",
"101 154 QCURVE",
"111 154 OFFCURVE",
"143 161 OFFCURVE",
"179 173 OFFCURVE",
"212 189 OFFCURVE",
"224 198 QCURVE SMOOTH",
"248 216 OFFCURVE",
"282 258 OFFCURVE",
"298 299 OFFCURVE",
"293 333 OFFCURVE",
"279 344 QCURVE SMOOTH",
"262 356 OFFCURVE",
"219 356 OFFCURVE",
"173 337 OFFCURVE",
"127 301 OFFCURVE",
"108 279 QCURVE SMOOTH",
"91 259 OFFCURVE",
"63 213 OFFCURVE",
"42 164 OFFCURVE",
"31 114 OFFCURVE",
"31 92 QCURVE SMOOTH",
"32 44 OFFCURVE",
"89 -4 OFFCURVE",
"127 -4 QCURVE SMOOTH",
"176 -4 OFFCURVE",
"258 47 OFFCURVE",
"290 83 QCURVE",
"279 60 OFFCURVE",
"257 16 OFFCURVE",
"246 -7 QCURVE",
"254 -2 OFFCURVE",
"269 -2 OFFCURVE",
"280 -1 QCURVE SMOOTH",
"296 -1 OFFCURVE",
"312 3 OFFCURVE",
"318 14 QCURVE SMOOTH",
"360 97 OFFCURVE",
"431 189 OFFCURVE",
"457 212 QCURVE SMOOTH",
"486 239 OFFCURVE",
"522 259 OFFCURVE",
"539 255 OFFCURVE",
"537 233 OFFCURVE",
"528 218 QCURVE SMOOTH",
"507 184 OFFCURVE",
"479 133 OFFCURVE",
"473 113 QCURVE SMOOTH",
"462 78 OFFCURVE",
"466 33 OFFCURVE",
"485 6 OFFCURVE",
"513 -4 OFFCURVE",
"526 -4 QCURVE SMOOTH",
"553 -4 OFFCURVE",
"600 33 OFFCURVE",
"620 59 QCURVE SMOOTH",
"643 90 OFFCURVE",
"679 159 OFFCURVE",
"691 184 QCURVE",
"691 184 LINE"
);
},
{
closed = 1;
nodes = (
"200 204 OFFCURVE",
"169 187 OFFCURVE",
"139 176 OFFCURVE",
"115 171 OFFCURVE",
"108 171 QCURVE",
"115 185 OFFCURVE",
"148 241 OFFCURVE",
"168 265 QCURVE SMOOTH",
"199 302 OFFCURVE",
"241 333 OFFCURVE",
"265 334 OFFCURVE",
"271 310 OFFCURVE",
"261 274 OFFCURVE",
"234 232 OFFCURVE",
"214 215 QCURVE",
"214 215 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
62 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 62 23 62 39 62 55 62 71 62 87 62 103 62 119 62 135 62 151 62 167 62 183 62 199 62 215 62 231 62 247 62 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 62 23 62 39 62 55 62 71 62 87 62 103 62 119 62 135 62 151 62 167 62 183 62 199 62 215 62 231 62 247 62 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 62 23 62 39 62 55 62 71 62 87 62 103 62 119 62 135 62 151 62 167 62 183 62 199 62 215 62 231 62 247 62 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 620;
}
);
note = e_n;
},
{
glyphname = e_m;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"870 199 OFFCURVE",
"855 206 OFFCURVE",
"849 193 QCURVE SMOOTH",
"841 176 OFFCURVE",
"811 117 OFFCURVE",
"773 61 OFFCURVE",
"731 20 OFFCURVE",
"712 20 QCURVE SMOOTH",
"702 20 OFFCURVE",
"690 39 OFFCURVE",
"695 70 QCURVE SMOOTH",
"698 83 OFFCURVE",
"711 119 OFFCURVE",
"729 160 OFFCURVE",
"749 204 OFFCURVE",
"760 225 QCURVE SMOOTH",
"785 274 OFFCURVE",
"815 328 QCURVE",
"803 332 OFFCURVE",
"755 316 OFFCURVE",
"701 287 OFFCURVE",
"648 250 OFFCURVE",
"630 234 QCURVE SMOOTH",
"607 214 OFFCURVE",
"562 163 OFFCURVE",
"547 144 QCURVE",
"565 181 OFFCURVE",
"606 252 OFFCURVE",
"620 284 QCURVE SMOOTH",
"627 299 OFFCURVE",
"619 323 OFFCURVE",
"605 328 QCURVE SMOOTH",
"592 332 OFFCURVE",
"557 316 OFFCURVE",
"518 287 OFFCURVE",
"477 250 OFFCURVE",
"459 234 QCURVE SMOOTH",
"436 214 OFFCURVE",
"391 163 OFFCURVE",
"376 144 QCURVE",
"389 171 OFFCURVE",
"422 232 OFFCURVE",
"455 286 OFFCURVE",
"486 326 OFFCURVE",
"497 332 QCURVE",
"486 330 OFFCURVE",
"465 335 OFFCURVE",
"455 336 QCURVE SMOOTH",
"431 337 OFFCURVE",
"403 309 OFFCURVE",
"384 273 QCURVE SMOOTH",
"363 235 OFFCURVE",
"345 198 QCURVE",
"343 196 OFFCURVE",
"342 193 OFFCURVE",
"341 191 QCURVE SMOOTH",
"332 171 OFFCURVE",
"291 112 OFFCURVE",
"234 56 OFFCURVE",
"168 17 OFFCURVE",
"135 17 QCURVE SMOOTH",
"110 17 OFFCURVE",
"89 50 OFFCURVE",
"86 94 OFFCURVE",
"95 140 OFFCURVE",
"101 154 QCURVE",
"111 154 OFFCURVE",
"143 161 OFFCURVE",
"179 173 OFFCURVE",
"212 189 OFFCURVE",
"224 198 QCURVE SMOOTH",
"248 216 OFFCURVE",
"282 258 OFFCURVE",
"298 299 OFFCURVE",
"293 333 OFFCURVE",
"279 344 QCURVE SMOOTH",
"262 356 OFFCURVE",
"219 356 OFFCURVE",
"173 337 OFFCURVE",
"127 301 OFFCURVE",
"108 279 QCURVE SMOOTH",
"91 259 OFFCURVE",
"63 213 OFFCURVE",
"42 164 OFFCURVE",
"31 114 OFFCURVE",
"31 92 QCURVE SMOOTH",
"32 44 OFFCURVE",
"89 -4 OFFCURVE",
"127 -4 QCURVE SMOOTH",
"177 -4 OFFCURVE",
"260 48 OFFCURVE",
"292 85 QCURVE",
"281 62 OFFCURVE",
"259 18 OFFCURVE",
"248 -5 QCURVE",
"256 0 OFFCURVE",
"270 0 OFFCURVE",
"281 1 QCURVE SMOOTH",
"298 1 OFFCURVE",
"314 6 OFFCURVE",
"319 17 QCURVE SMOOTH",
"362 99 OFFCURVE",
"431 189 OFFCURVE",
"457 212 QCURVE SMOOTH",
"496 249 OFFCURVE",
"528 264 OFFCURVE",
"529 242 OFFCURVE",
"509 194 OFFCURVE",
"497 169 QCURVE SMOOTH",
"484 141 OFFCURVE",
"460 88 OFFCURVE",
"455 55 QCURVE SMOOTH",
"451 33 OFFCURVE",
"470 0 OFFCURVE",
"487 0 QCURVE",
"492 22 OFFCURVE",
"525 83 OFFCURVE",
"567 144 OFFCURVE",
"612 197 OFFCURVE",
"628 212 QCURVE SMOOTH",
"657 239 OFFCURVE",
"693 259 OFFCURVE",
"710 255 OFFCURVE",
"708 233 OFFCURVE",
"699 218 QCURVE SMOOTH",
"678 184 OFFCURVE",
"650 133 OFFCURVE",
"644 113 QCURVE SMOOTH",
"633 78 OFFCURVE",
"637 33 OFFCURVE",
"656 6 OFFCURVE",
"684 -4 OFFCURVE",
"698 -4 QCURVE SMOOTH",
"724 -4 OFFCURVE",
"772 32 OFFCURVE",
"792 59 QCURVE SMOOTH",
"815 90 OFFCURVE",
"851 159 OFFCURVE",
"863 184 QCURVE",
"863 184 LINE"
);
},
{
closed = 1;
nodes = (
"200 204 OFFCURVE",
"169 187 OFFCURVE",
"139 176 OFFCURVE",
"115 171 OFFCURVE",
"108 171 QCURVE",
"115 185 OFFCURVE",
"148 241 OFFCURVE",
"168 265 QCURVE SMOOTH",
"199 302 OFFCURVE",
"241 333 OFFCURVE",
"265 334 OFFCURVE",
"271 310 OFFCURVE",
"261 274 OFFCURVE",
"234 232 OFFCURVE",
"214 215 QCURVE",
"214 215 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
44 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
78 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 78 23 78 39 78 55 78 71 78 87 78 103 78 119 78 135 78 151 78 167 78 183 78 199 78 215 78 231 78 247 78 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 78 23 78 39 78 55 78 71 78 87 78 103 78 119 78 135 78 151 78 167 78 183 78 199 78 215 78 231 78 247 78 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 78 23 78 39 78 55 78 71 78 87 78 103 78 119 78 135 78 151 78 167 78 183 78 199 78 215 78 231 78 247 78 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
131 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
131 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 792;
}
);
note = e_m;
},
{
glyphname = z.stroke.acute;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"315 156 OFFCURVE",
"311 175 OFFCURVE",
"298 175 QCURVE SMOOTH",
"284 175 OFFCURVE",
"258 176 OFFCURVE",
"247 176 QCURVE",
"272 212 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"106 239 OFFCURVE",
"143 276 OFFCURVE",
"181 289 OFFCURVE",
"205 289 QCURVE SMOOTH",
"225 289 OFFCURVE",
"271 280 OFFCURVE",
"289 275 QCURVE",
"272 258 OFFCURVE",
"233 206 OFFCURVE",
"213 177 QCURVE",
"187 178 OFFCURVE",
"151 178 OFFCURVE",
"137 178 QCURVE SMOOTH",
"129 178 OFFCURVE",
"124 167 OFFCURVE",
"126 154 OFFCURVE",
"133 143 OFFCURVE",
"137 144 QCURVE",
"194 150 LINE",
"171 119 OFFCURVE",
"127 68 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE SMOOTH",
"270 -7 OFFCURVE",
"322 29 OFFCURVE",
"367 90 OFFCURVE",
"407 169 OFFCURVE",
"424 210 QCURVE SMOOTH",
"430 224 OFFCURVE",
"413 225 OFFCURVE",
"410 218 QCURVE SMOOTH",
"401 200 OFFCURVE",
"372 142 OFFCURVE",
"336 83 OFFCURVE",
"294 37 OFFCURVE",
"271 31 QCURVE SMOOTH",
"260 28 OFFCURVE",
"228 30 OFFCURVE",
"194 36 OFFCURVE",
"162 45 OFFCURVE",
"150 49 QCURVE",
"170 67 OFFCURVE",
"210 122 OFFCURVE",
"231 153 QCURVE",
"264 156 OFFCURVE",
"301 156 QCURVE",
"301 156 LINE"
);
},
{
closed = 1;
nodes = (
"407 510 OFFCURVE",
"402 525 OFFCURVE",
"394 529 QCURVE SMOOTH",
"379 537 OFFCURVE",
"348 526 OFFCURVE",
"336 517 QCURVE SMOOTH",
"330 512 OFFCURVE",
"291 485 OFFCURVE",
"249 455 OFFCURVE",
"214 429 OFFCURVE",
"213 426 QCURVE",
"207 418 OFFCURVE",
"216 413 QCURVE SMOOTH",
"218 412 OFFCURVE",
"246 422 OFFCURVE",
"286 439 OFFCURVE",
"332 461 OFFCURVE",
"373 481 OFFCURVE",
"401 498 OFFCURVE",
"403 502 QCURVE",
"403 502 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
109 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
109 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = z.stroke.acute;
},
{
glyphname = z.stroke.caron;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"315 156 OFFCURVE",
"311 175 OFFCURVE",
"298 175 QCURVE SMOOTH",
"284 175 OFFCURVE",
"258 176 OFFCURVE",
"247 176 QCURVE",
"272 212 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"106 239 OFFCURVE",
"143 276 OFFCURVE",
"181 289 OFFCURVE",
"205 289 QCURVE SMOOTH",
"225 289 OFFCURVE",
"271 280 OFFCURVE",
"289 275 QCURVE",
"272 258 OFFCURVE",
"233 206 OFFCURVE",
"213 177 QCURVE",
"187 178 OFFCURVE",
"151 178 OFFCURVE",
"137 178 QCURVE SMOOTH",
"129 178 OFFCURVE",
"124 167 OFFCURVE",
"126 154 OFFCURVE",
"133 143 OFFCURVE",
"137 144 QCURVE",
"194 150 LINE",
"171 119 OFFCURVE",
"127 68 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE SMOOTH",
"270 -7 OFFCURVE",
"322 29 OFFCURVE",
"367 90 OFFCURVE",
"407 169 OFFCURVE",
"424 210 QCURVE SMOOTH",
"430 224 OFFCURVE",
"413 225 OFFCURVE",
"410 218 QCURVE SMOOTH",
"401 200 OFFCURVE",
"372 142 OFFCURVE",
"336 83 OFFCURVE",
"294 37 OFFCURVE",
"271 31 QCURVE SMOOTH",
"260 28 OFFCURVE",
"228 30 OFFCURVE",
"194 36 OFFCURVE",
"162 45 OFFCURVE",
"150 49 QCURVE",
"170 67 OFFCURVE",
"210 122 OFFCURVE",
"231 153 QCURVE",
"264 156 OFFCURVE",
"301 156 QCURVE",
"301 156 LINE"
);
},
{
closed = 1;
nodes = (
"216 413 LINE",
"216 411 OFFCURVE",
"228 410 OFFCURVE",
"235 411 QCURVE SMOOTH",
"243 412 OFFCURVE",
"254 413 QCURVE",
"403 519 LINE SMOOTH",
"406 521 OFFCURVE",
"402 524 OFFCURVE",
"393 525 OFFCURVE",
"382 522 OFFCURVE",
"378 519 QCURVE SMOOTH",
"373 516 OFFCURVE",
"330 494 OFFCURVE",
"307 481 QCURVE SMOOTH",
"280 466 OFFCURVE",
"246 448 QCURVE",
"200 519 LINE SMOOTH",
"197 524 OFFCURVE",
"177 526 OFFCURVE",
"180 519 QCURVE",
"180 519 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
48 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
96 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
99 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
77 57 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
217 23 233 23 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
8 23 24 23 40 23 56 23 72 23 88 23 104 23 120 23 136 23 152 23 168 23 184 23 200 23 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
5 96 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
42 96 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
82 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = z.stroke.caron;
},
{
glyphname = z.stroke_dotaccent;
layers = (
{
components = (
{
name = z.stroke;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 116, -105}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 341;
}
);
note = z.stroke_dotaccent;
},
{
glyphname = Z.stroke_acute;
layers = (
{
components = (
{
name = Z.stroke;
},
{
name = acute;
transform = "{1, 0, 0, 1, 657, 382}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 944;
}
);
note = Z.stroke_acute;
},
{
glyphname = Z.stroke_caron;
layers = (
{
components = (
{
name = Z.stroke;
},
{
name = caron;
transform = "{1, 0, 0, 1, 653, 290}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1044;
}
);
note = Z.stroke_caron;
},
{
glyphname = Z.stroke_dotaccent;
layers = (
{
components = (
{
name = Z.stroke;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 687, 289}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 949;
}
);
note = Z.stroke_dotaccent;
},
{
glyphname = T_h;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"1307 199 OFFCURVE",
"1292 207 OFFCURVE",
"1285 193 QCURVE SMOOTH",
"1277 177 OFFCURVE",
"1246 117 OFFCURVE",
"1208 58 OFFCURVE",
"1167 16 OFFCURVE",
"1150 17 QCURVE SMOOTH",
"1140 18 OFFCURVE",
"1129 39 OFFCURVE",
"1135 70 QCURVE SMOOTH",
"1137 83 OFFCURVE",
"1150 119 OFFCURVE",
"1168 160 OFFCURVE",
"1189 204 OFFCURVE",
"1200 225 QCURVE SMOOTH",
"1225 274 OFFCURVE",
"1255 328 QCURVE",
"1242 332 OFFCURVE",
"1195 316 OFFCURVE",
"1141 287 OFFCURVE",
"1088 250 OFFCURVE",
"1070 234 QCURVE SMOOTH",
"1050 217 OFFCURVE",
"1009 172 OFFCURVE",
"989 146 QCURVE",
"1009 187 OFFCURVE",
"1059 288 OFFCURVE",
"1116 398 OFFCURVE",
"1176 511 OFFCURVE",
"1206 563 QCURVE",
"1221 562 OFFCURVE",
"1237 563 QCURVE SMOOTH",
"1279 565 OFFCURVE",
"1372 590 OFFCURVE",
"1454 637 OFFCURVE",
"1516 706 OFFCURVE",
"1527 752 QCURVE SMOOTH",
"1536 789 OFFCURVE",
"1510 834 OFFCURVE",
"1462 854 OFFCURVE",
"1401 852 OFFCURVE",
"1374 841 QCURVE SMOOTH",
"1343 828 OFFCURVE",
"1285 777 OFFCURVE",
"1232 711 OFFCURVE",
"1184 635 OFFCURVE",
"1163 598 QCURVE",
"1149 599 OFFCURVE",
"1115 608 OFFCURVE",
"1079 620 OFFCURVE",
"1045 634 OFFCURVE",
"1030 639 QCURVE",
"1041 653 OFFCURVE",
"1070 685 OFFCURVE",
"1084 688 QCURVE SMOOTH",
"1091 689 OFFCURVE",
"1101 697 OFFCURVE",
"1103 705 OFFCURVE",
"1096 710 OFFCURVE",
"1086 710 QCURVE SMOOTH",
"1074 710 OFFCURVE",
"1047 693 OFFCURVE",
"1025 672 OFFCURVE",
"1007 651 OFFCURVE",
"1004 647 QCURVE",
"987 653 OFFCURVE",
"915 678 OFFCURVE",
"824 706 OFFCURVE",
"723 730 OFFCURVE",
"678 734 QCURVE SMOOTH",
"584 742 OFFCURVE",
"446 699 OFFCURVE",
"358 621 OFFCURVE",
"317 521 OFFCURVE",
"325 425 OFFCURVE",
"380 347 OFFCURVE",
"431 329 QCURVE SMOOTH",
"466 317 OFFCURVE",
"540 325 OFFCURVE",
"603 361 OFFCURVE",
"647 421 OFFCURVE",
"652 461 QCURVE",
"652 471 OFFCURVE",
"640 476 OFFCURVE",
"632 469 QCURVE",
"632 467 LINE SMOOTH",
"633 456 OFFCURVE",
"609 408 OFFCURVE",
"559 363 OFFCURVE",
"487 339 OFFCURVE",
"441 354 QCURVE SMOOTH",
"402 366 OFFCURVE",
"368 427 OFFCURVE",
"374 502 OFFCURVE",
"420 583 OFFCURVE",
"500 647 OFFCURVE",
"613 686 OFFCURVE",
"685 683 QCURVE SMOOTH",
"765 679 OFFCURVE",
"909 653 OFFCURVE",
"988 628 QCURVE",
"977 614 OFFCURVE",
"943 541 OFFCURVE",
"897 443 OFFCURVE",
"844 329 OFFCURVE",
"786 218 OFFCURVE",
"724 121 OFFCURVE",
"694 88 QCURVE SMOOTH",
"665 57 OFFCURVE",
"596 3 OFFCURVE",
"512 -37 OFFCURVE",
"413 -61 OFFCURVE",
"354 -62 QCURVE SMOOTH",
"315 -63 OFFCURVE",
"236 -46 OFFCURVE",
"162 -10 OFFCURVE",
"100 42 OFFCURVE",
"59 112 OFFCURVE",
"42 199 OFFCURVE",
"51 250 QCURVE SMOOTH",
"57 286 OFFCURVE",
"86 332 OFFCURVE",
"119 362 OFFCURVE",
"148 380 OFFCURVE",
"154 388 QCURVE",
"156 404 OFFCURVE",
"127 405 OFFCURVE",
"85 380 OFFCURVE",
"42 331 OFFCURVE",
"31 296 QCURVE SMOOTH",
"6 216 OFFCURVE",
"23 89 OFFCURVE",
"88 -5 OFFCURVE",
"193 -67 OFFCURVE",
"319 -98 OFFCURVE",
"457 -97 OFFCURVE",
"588 -66 OFFCURVE",
"702 -5 OFFCURVE",
"742 40 QCURVE SMOOTH",
"796 102 OFFCURVE",
"863 244 OFFCURVE",
"917 394 OFFCURVE",
"972 545 OFFCURVE",
"1016 616 QCURVE",
"1032 610 OFFCURVE",
"1070 596 OFFCURVE",
"1106 584 OFFCURVE",
"1139 575 OFFCURVE",
"1150 574 QCURVE",
"1110 499 OFFCURVE",
"1030 342 OFFCURVE",
"954 192 OFFCURVE",
"885 52 OFFCURVE",
"857 -7 QCURVE",
"865 -2 OFFCURVE",
"880 -2 OFFCURVE",
"891 -1 QCURVE SMOOTH",
"907 -1 OFFCURVE",
"923 3 OFFCURVE",
"928 14 QCURVE SMOOTH",
"971 97 OFFCURVE",
"1042 189 OFFCURVE",
"1068 212 QCURVE SMOOTH",
"1097 239 OFFCURVE",
"1133 259 OFFCURVE",
"1150 255 OFFCURVE",
"1148 233 OFFCURVE",
"1139 218 QCURVE SMOOTH",
"1118 184 OFFCURVE",
"1090 133 OFFCURVE",
"1084 113 QCURVE SMOOTH",
"1073 78 OFFCURVE",
"1077 33 OFFCURVE",
"1096 6 OFFCURVE",
"1124 -4 OFFCURVE",
"1137 -4 QCURVE SMOOTH",
"1163 -4 OFFCURVE",
"1209 32 OFFCURVE",
"1229 58 QCURVE SMOOTH",
"1251 87 OFFCURVE",
"1286 156 OFFCURVE",
"1299 183 QCURVE",
"1299 183 LINE"
);
},
{
closed = 1;
nodes = (
"1425 825 OFFCURVE",
"1467 827 OFFCURVE",
"1497 808 OFFCURVE",
"1509 771 OFFCURVE",
"1500 745 QCURVE SMOOTH",
"1494 727 OFFCURVE",
"1472 693 OFFCURVE",
"1445 664 OFFCURVE",
"1416 641 OFFCURVE",
"1404 634 QCURVE SMOOTH",
"1363 611 OFFCURVE",
"1268 593 OFFCURVE",
"1223 594 QCURVE",
"1279 690 OFFCURVE",
"1370 792 OFFCURVE",
"1403 812 QCURVE",
"1403 812 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
186 2 150 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
33 150 186 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
186 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
135 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
135 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
150 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
152 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = T_h;
},
{
glyphname = z_z;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"611 -7 OFFCURVE",
"663 29 OFFCURVE",
"708 90 OFFCURVE",
"748 169 OFFCURVE",
"765 210 QCURVE SMOOTH",
"771 224 OFFCURVE",
"754 225 OFFCURVE",
"751 218 QCURVE SMOOTH",
"742 200 OFFCURVE",
"716 144 OFFCURVE",
"682 90 OFFCURVE",
"642 46 OFFCURVE",
"619 40 QCURVE SMOOTH",
"608 37 OFFCURVE",
"576 39 OFFCURVE",
"542 45 OFFCURVE",
"510 54 OFFCURVE",
"498 58 QCURVE",
"521 79 OFFCURVE",
"567 145 OFFCURVE",
"615 214 OFFCURVE",
"663 273 OFFCURVE",
"689 287 QCURVE SMOOTH",
"696 291 OFFCURVE",
"713 298 OFFCURVE",
"714 312 QCURVE SMOOTH",
"714 321 OFFCURVE",
"704 334 OFFCURVE",
"697 334 QCURVE SMOOTH",
"693 334 OFFCURVE",
"686 328 OFFCURVE",
"676 320 OFFCURVE",
"662 314 OFFCURVE",
"653 314 QCURVE SMOOTH",
"642 314 OFFCURVE",
"619 323 OFFCURVE",
"597 334 OFFCURVE",
"573 343 OFFCURVE",
"561 343 QCURVE SMOOTH",
"546 343 OFFCURVE",
"513 337 OFFCURVE",
"479 317 OFFCURVE",
"443 278 OFFCURVE",
"425 245 QCURVE SMOOTH",
"407 213 OFFCURVE",
"385 165 OFFCURVE",
"372 142 QCURVE SMOOTH",
"352 105 OFFCURVE",
"307 48 OFFCURVE",
"278 40 QCURVE SMOOTH",
"267 37 OFFCURVE",
"235 39 OFFCURVE",
"201 45 OFFCURVE",
"169 54 OFFCURVE",
"157 58 QCURVE",
"180 79 OFFCURVE",
"226 145 OFFCURVE",
"274 214 OFFCURVE",
"322 273 OFFCURVE",
"348 287 QCURVE SMOOTH",
"355 291 OFFCURVE",
"372 298 OFFCURVE",
"373 312 QCURVE SMOOTH",
"373 321 OFFCURVE",
"363 334 OFFCURVE",
"356 334 QCURVE SMOOTH",
"352 334 OFFCURVE",
"345 328 OFFCURVE",
"335 320 OFFCURVE",
"321 314 OFFCURVE",
"312 314 QCURVE SMOOTH",
"301 314 OFFCURVE",
"278 323 OFFCURVE",
"256 334 OFFCURVE",
"232 343 OFFCURVE",
"220 343 QCURVE SMOOTH",
"205 343 OFFCURVE",
"172 337 OFFCURVE",
"138 317 OFFCURVE",
"102 278 OFFCURVE",
"84 245 QCURVE SMOOTH",
"80 238 OFFCURVE",
"63 204 OFFCURVE",
"44 166 OFFCURVE",
"28 133 OFFCURVE",
"25 128 QCURVE SMOOTH",
"21 120 OFFCURVE",
"22 113 OFFCURVE",
"28 111 OFFCURVE",
"35 115 OFFCURVE",
"38 120 QCURVE SMOOTH",
"65 173 OFFCURVE",
"104 237 OFFCURVE",
"138 270 OFFCURVE",
"174 280 OFFCURVE",
"198 280 QCURVE SMOOTH",
"218 280 OFFCURVE",
"264 271 OFFCURVE",
"282 266 QCURVE",
"262 245 OFFCURVE",
"217 183 OFFCURVE",
"172 120 OFFCURVE",
"128 69 OFFCURVE",
"109 60 QCURVE SMOOTH",
"104 57 OFFCURVE",
"79 47 OFFCURVE",
"51 36 OFFCURVE",
"28 24 OFFCURVE",
"25 20 QCURVE SMOOTH",
"20 11 OFFCURVE",
"20 -12 OFFCURVE",
"37 -12 QCURVE SMOOTH",
"54 -12 OFFCURVE",
"83 4 OFFCURVE",
"99 8 QCURVE SMOOTH",
"109 10 OFFCURVE",
"139 7 OFFCURVE",
"176 1 OFFCURVE",
"219 -5 OFFCURVE",
"242 -6 QCURVE SMOOTH",
"263 -7 OFFCURVE",
"301 13 OFFCURVE",
"337 48 OFFCURVE",
"369 96 OFFCURVE",
"384 124 QCURVE SMOOTH",
"398 149 OFFCURVE",
"427 209 OFFCURVE",
"443 232 QCURVE SMOOTH",
"456 249 OFFCURVE",
"477 269 OFFCURVE",
"499 278 OFFCURVE",
"524 280 OFFCURVE",
"539 280 QCURVE SMOOTH",
"559 280 OFFCURVE",
"605 271 OFFCURVE",
"623 266 QCURVE",
"603 245 OFFCURVE",
"558 183 OFFCURVE",
"513 120 OFFCURVE",
"469 69 OFFCURVE",
"450 60 QCURVE SMOOTH",
"445 57 OFFCURVE",
"420 47 OFFCURVE",
"392 36 OFFCURVE",
"369 24 OFFCURVE",
"366 20 QCURVE SMOOTH",
"361 11 OFFCURVE",
"361 -12 OFFCURVE",
"378 -12 QCURVE SMOOTH",
"395 -12 OFFCURVE",
"424 4 OFFCURVE",
"440 8 QCURVE SMOOTH",
"450 10 OFFCURVE",
"480 7 OFFCURVE",
"517 1 OFFCURVE",
"560 -5 OFFCURVE",
"583 -6 QCURVE",
"583 -6 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
118 24 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
118 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
123 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 682;
}
);
note = z_z;
},
{
glyphname = zero.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"328 581 OFFCURVE",
"299 624 OFFCURVE",
"261 624 QCURVE SMOOTH",
"233 624 OFFCURVE",
"177 594 OFFCURVE",
"125 545 OFFCURVE",
"80 482 OFFCURVE",
"46 417 OFFCURVE",
"27 355 OFFCURVE",
"27 331 QCURVE SMOOTH",
"27 296 OFFCURVE",
"64 243 OFFCURVE",
"104 243 QCURVE SMOOTH",
"148 243 OFFCURVE",
"229 310 OFFCURVE",
"291 406 OFFCURVE",
"328 511 OFFCURVE",
"328 549 QCURVE",
"328 549 LINE"
);
},
{
closed = 1;
nodes = (
"286 542 OFFCURVE",
"271 485 OFFCURVE",
"246 420 OFFCURVE",
"212 354 OFFCURVE",
"173 301 OFFCURVE",
"132 268 OFFCURVE",
"112 268 QCURVE SMOOTH",
"95 268 OFFCURVE",
"83 291 OFFCURVE",
"83 308 QCURVE SMOOTH",
"83 325 OFFCURVE",
"99 382 OFFCURVE",
"125 447 OFFCURVE",
"161 513 OFFCURVE",
"200 566 OFFCURVE",
"242 600 OFFCURVE",
"261 600 QCURVE SMOOTH",
"276 600 OFFCURVE",
"286 576 OFFCURVE",
"286 561 QCURVE",
"286 561 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 18 26 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
28 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 28 21 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
31 2 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 2 21 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 326;
}
);
note = zero.superior;
unicode = 2070;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"234 615 OFFCURVE",
"216 600 OFFCURVE",
"211 594 QCURVE SMOOTH",
"189 572 OFFCURVE",
"133 517 OFFCURVE",
"109 499 QCURVE SMOOTH",
"93 487 LINE",
"85 479 OFFCURVE",
"83 472 OFFCURVE",
"89 471 OFFCURVE",
"99 475 OFFCURVE",
"104 478 QCURVE SMOOTH",
"122 492 OFFCURVE",
"166 515 OFFCURVE",
"181 527 QCURVE",
"32 250 LINE",
"32 246 OFFCURVE",
"46 244 OFFCURVE",
"65 245 OFFCURVE",
"84 251 OFFCURVE",
"87 256 QCURVE SMOOTH",
"135 343 OFFCURVE",
"217 515 OFFCURVE",
"265 601 QCURVE",
"270 615 OFFCURVE",
"260 618 OFFCURVE",
"245 616 QCURVE",
"245 616 LINE"
);
}
);
width = 246;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"327 593 OFFCURVE",
"289 622 OFFCURVE",
"261 622 QCURVE SMOOTH",
"235 622 OFFCURVE",
"190 601 OFFCURVE",
"154 566 OFFCURVE",
"127 523 OFFCURVE",
"120 502 QCURVE SMOOTH",
"116 491 OFFCURVE",
"136 487 OFFCURVE",
"141 498 QCURVE SMOOTH",
"159 536 OFFCURVE",
"179 559 QCURVE SMOOTH",
"187 568 OFFCURVE",
"216 587 OFFCURVE",
"244 593 OFFCURVE",
"265 581 OFFCURVE",
"265 560 QCURVE SMOOTH",
"265 535 OFFCURVE",
"230 475 OFFCURVE",
"181 415 OFFCURVE",
"126 362 OFFCURVE",
"106 344 QCURVE SMOOTH",
"98 336 OFFCURVE",
"70 312 OFFCURVE",
"38 287 OFFCURVE",
"9 263 OFFCURVE",
"-1 255 QCURVE",
"-6 244 OFFCURVE",
"-3 238 OFFCURVE",
"13 243 QCURVE",
"57 277 LINE",
"74 266 OFFCURVE",
"130 245 OFFCURVE",
"162 246 QCURVE SMOOTH",
"176 246 OFFCURVE",
"205 263 OFFCURVE",
"231 286 OFFCURVE",
"253 312 OFFCURVE",
"261 322 QCURVE SMOOTH",
"268 333 OFFCURVE",
"269 342 OFFCURVE",
"263 343 OFFCURVE",
"253 337 OFFCURVE",
"249 332 QCURVE SMOOTH",
"243 325 OFFCURVE",
"225 310 OFFCURVE",
"204 298 OFFCURVE",
"184 290 OFFCURVE",
"177 290 QCURVE SMOOTH",
"158 290 OFFCURVE",
"115 310 OFFCURVE",
"105 320 QCURVE",
"114 328 LINE SMOOTH",
"130 341 OFFCURVE",
"174 378 OFFCURVE",
"221 420 OFFCURVE",
"268 465 OFFCURVE",
"304 509 OFFCURVE",
"327 549 OFFCURVE",
"327 565 QCURVE",
"327 565 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 3 43 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
11 2 26 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 317;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"316 603 OFFCURVE",
"282 624 OFFCURVE",
"259 624 QCURVE SMOOTH",
"221 624 OFFCURVE",
"159 578 OFFCURVE",
"136 550 QCURVE",
"134 537 OFFCURVE",
"144 538 OFFCURVE",
"149 543 QCURVE SMOOTH",
"164 560 OFFCURVE",
"207 591 OFFCURVE",
"228 591 QCURVE SMOOTH",
"236 591 OFFCURVE",
"254 583 OFFCURVE",
"254 575 QCURVE SMOOTH",
"254 550 OFFCURVE",
"226 506 OFFCURVE",
"184 472 OFFCURVE",
"136 450 OFFCURVE",
"117 446 QCURVE",
"114 444 OFFCURVE",
"110 439 OFFCURVE",
"112 434 OFFCURVE",
"122 432 OFFCURVE",
"131 434 QCURVE SMOOTH",
"140 436 OFFCURVE",
"170 447 OFFCURVE",
"177 447 QCURVE SMOOTH",
"191 447 OFFCURVE",
"208 426 OFFCURVE",
"208 410 QCURVE SMOOTH",
"208 386 OFFCURVE",
"185 333 OFFCURVE",
"145 288 OFFCURVE",
"93 259 OFFCURVE",
"64 259 QCURVE SMOOTH",
"48 259 OFFCURVE",
"22 279 OFFCURVE",
"17 293 QCURVE",
"5 299 OFFCURVE",
"4 288 OFFCURVE",
"7 280 QCURVE SMOOTH",
"15 260 OFFCURVE",
"46 243 OFFCURVE",
"68 243 QCURVE SMOOTH",
"102 243 OFFCURVE",
"172 270 OFFCURVE",
"227 315 OFFCURVE",
"262 373 OFFCURVE",
"262 403 QCURVE SMOOTH",
"262 432 OFFCURVE",
"222 460 OFFCURVE",
"197 464 QCURVE",
"216 472 OFFCURVE",
"258 494 OFFCURVE",
"293 523 OFFCURVE",
"316 558 OFFCURVE",
"316 579 QCURVE",
"316 579 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 3 27 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 27 26 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
43 27 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
55 2 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
5 55 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 298;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = four.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"212 563 OFFCURVE",
"168 512 OFFCURVE",
"146 487 QCURVE SMOOTH",
"136 476 OFFCURVE",
"116 455 OFFCURVE",
"105 444 QCURVE SMOOTH",
"89 429 OFFCURVE",
"60 398 OFFCURVE",
"48 383 QCURVE",
"44 364 LINE",
"191 367 LINE",
"186 358 OFFCURVE",
"166 320 OFFCURVE",
"145 281 OFFCURVE",
"129 250 OFFCURVE",
"129 249 QCURVE",
"136 245 OFFCURVE",
"156 246 OFFCURVE",
"175 250 OFFCURVE",
"190 255 OFFCURVE",
"192 257 QCURVE",
"250 370 LINE",
"265 370 LINE",
"288 379 OFFCURVE",
"288 392 OFFCURVE",
"269 395 QCURVE",
"264 395 LINE",
"268 403 OFFCURVE",
"281 429 OFFCURVE",
"293 453 OFFCURVE",
"302 471 OFFCURVE",
"302 472 QCURVE",
"308 481 OFFCURVE",
"295 487 OFFCURVE",
"273 484 OFFCURVE",
"250 474 OFFCURVE",
"244 468 QCURVE",
"237 454 OFFCURVE",
"227 434 OFFCURVE",
"218 417 OFFCURVE",
"210 402 OFFCURVE",
"206 393 QCURVE",
"85 390 LINE",
"96 404 OFFCURVE",
"116 423 OFFCURVE",
"128 433 QCURVE SMOOTH",
"154 455 OFFCURVE",
"219 511 OFFCURVE",
"276 562 OFFCURVE",
"316 601 OFFCURVE",
"316 607 QCURVE",
"311 610 OFFCURVE",
"288 614 OFFCURVE",
"262 611 OFFCURVE",
"238 600 OFFCURVE",
"232 590 QCURVE",
"232 590 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
13 2 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 302;
}
);
note = four.superior;
unicode = 2074;
},
{
glyphname = five.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"304 614 OFFCURVE",
"279 610 OFFCURVE",
"266 610 QCURVE SMOOTH",
"258 610 OFFCURVE",
"244 611 OFFCURVE",
"236 612 QCURVE SMOOTH",
"228 613 OFFCURVE",
"212 614 OFFCURVE",
"204 614 QCURVE SMOOTH",
"183 614 OFFCURVE",
"166 607 QCURVE",
"164 605 OFFCURVE",
"148 580 OFFCURVE",
"126 543 OFFCURVE",
"102 500 OFFCURVE",
"81 462 OFFCURVE",
"65 433 OFFCURVE",
"64 429 QCURVE SMOOTH",
"61 421 OFFCURVE",
"69 406 OFFCURVE",
"81 418 QCURVE SMOOTH",
"101 438 OFFCURVE",
"146 453 OFFCURVE",
"160 453 QCURVE SMOOTH",
"191 453 OFFCURVE",
"191 419 QCURVE SMOOTH",
"191 401 OFFCURVE",
"177 364 OFFCURVE",
"153 330 OFFCURVE",
"122 299 OFFCURVE",
"105 288 QCURVE SMOOTH",
"79 271 OFFCURVE",
"17 263 OFFCURVE",
"3 272 QCURVE SMOOTH",
"-8 279 OFFCURVE",
"-7 265 OFFCURVE",
"0 260 QCURVE SMOOTH",
"12 252 OFFCURVE",
"43 246 OFFCURVE",
"77 249 OFFCURVE",
"110 258 OFFCURVE",
"123 264 QCURVE SMOOTH",
"148 276 OFFCURVE",
"194 310 OFFCURVE",
"230 351 OFFCURVE",
"252 397 OFFCURVE",
"252 420 QCURVE SMOOTH",
"252 452 OFFCURVE",
"209 481 OFFCURVE",
"180 481 QCURVE SMOOTH",
"164 481 OFFCURVE",
"119 464 OFFCURVE",
"104 456 QCURVE",
"120 485 OFFCURVE",
"156 552 OFFCURVE",
"171 579 QCURVE",
"182 578 OFFCURVE",
"200 577 OFFCURVE",
"213 577 QCURVE SMOOTH",
"249 577 OFFCURVE",
"304 589 OFFCURVE",
"321 615 QCURVE SMOOTH",
"328 625 OFFCURVE",
"322 632 OFFCURVE",
"314 624 QCURVE",
"314 624 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
18 3 39 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 39 26 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
62 2 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 2 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
12 41 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 289;
}
);
note = five.superior;
unicode = 2075;
},
{
glyphname = six.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"253 626 OFFCURVE",
"203 600 OFFCURVE",
"153 560 OFFCURVE",
"106 510 OFFCURVE",
"87 485 QCURVE SMOOTH",
"56 443 OFFCURVE",
"17 355 OFFCURVE",
"17 316 QCURVE SMOOTH",
"17 282 OFFCURVE",
"59 243 OFFCURVE",
"94 243 QCURVE SMOOTH",
"122 243 OFFCURVE",
"182 277 OFFCURVE",
"232 329 OFFCURVE",
"263 390 OFFCURVE",
"263 418 QCURVE SMOOTH",
"263 441 OFFCURVE",
"235 473 OFFCURVE",
"209 473 QCURVE SMOOTH",
"186 473 OFFCURVE",
"150 450 OFFCURVE",
"136 432 QCURVE SMOOTH",
"121 413 OFFCURVE",
"102 368 OFFCURVE",
"97 348 QCURVE SMOOTH",
"96 343 OFFCURVE",
"106 337 OFFCURVE",
"109 344 QCURVE SMOOTH",
"117 367 OFFCURVE",
"136 405 OFFCURVE",
"148 418 QCURVE SMOOTH",
"153 424 OFFCURVE",
"172 437 OFFCURVE",
"191 443 OFFCURVE",
"205 436 OFFCURVE",
"205 422 QCURVE SMOOTH",
"205 403 OFFCURVE",
"186 347 OFFCURVE",
"155 295 OFFCURVE",
"115 258 OFFCURVE",
"95 258 QCURVE SMOOTH",
"83 258 OFFCURVE",
"70 277 OFFCURVE",
"70 291 QCURVE SMOOTH",
"70 327 OFFCURVE",
"88 394 OFFCURVE",
"115 451 OFFCURVE",
"146 497 OFFCURVE",
"159 514 QCURVE SMOOTH",
"194 559 OFFCURVE",
"258 610 OFFCURVE",
"275 618 QCURVE",
"279 618 OFFCURVE",
"286 623 OFFCURVE",
"288 628 OFFCURVE",
"283 631 OFFCURVE",
"275 629 QCURVE",
"275 629 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
13 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 13 21 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 21 26 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
38 46 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 274;
}
);
note = six.superior;
unicode = 2076;
},
{
glyphname = seven.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"363 615 OFFCURVE",
"351 612 OFFCURVE",
"347 612 QCURVE SMOOTH",
"326 614 OFFCURVE",
"282 615 OFFCURVE",
"261 615 QCURVE SMOOTH",
"231 615 OFFCURVE",
"191 609 OFFCURVE",
"162 591 OFFCURVE",
"141 557 OFFCURVE",
"131 529 QCURVE SMOOTH",
"128 520 OFFCURVE",
"132 516 OFFCURVE",
"140 519 OFFCURVE",
"149 526 OFFCURVE",
"151 530 QCURVE SMOOTH",
"159 549 OFFCURVE",
"208 574 OFFCURVE",
"230 574 QCURVE SMOOTH",
"254 574 OFFCURVE",
"284 573 OFFCURVE",
"302 572 OFFCURVE",
"310 571 OFFCURVE",
"312 571 QCURVE",
"295 555 OFFCURVE",
"237 498 OFFCURVE",
"167 430 OFFCURVE",
"95 358 OFFCURVE",
"36 296 OFFCURVE",
"-3 253 OFFCURVE",
"-4 247 QCURVE",
"15 239 OFFCURVE",
"52 248 OFFCURVE",
"62 253 QCURVE",
"111 318 OFFCURVE",
"214 438 OFFCURVE",
"302 533 OFFCURVE",
"364 595 OFFCURVE",
"373 602 QCURVE SMOOTH",
"379 607 OFFCURVE",
"374 619 OFFCURVE",
"369 617 QCURVE",
"369 617 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
36 2 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 317;
}
);
note = seven.superior;
unicode = 2077;
},
{
glyphname = eight.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"300 597 OFFCURVE",
"261 623 OFFCURVE",
"233 623 QCURVE SMOOTH",
"211 623 OFFCURVE",
"170 606 OFFCURVE",
"138 576 OFFCURVE",
"119 537 OFFCURVE",
"119 515 QCURVE SMOOTH",
"119 489 OFFCURVE",
"129 466 QCURVE",
"112 454 OFFCURVE",
"68 419 OFFCURVE",
"29 378 OFFCURVE",
"3 332 OFFCURVE",
"3 310 QCURVE SMOOTH",
"3 277 OFFCURVE",
"52 243 OFFCURVE",
"83 243 QCURVE SMOOTH",
"107 243 OFFCURVE",
"156 262 OFFCURVE",
"194 295 OFFCURVE",
"218 339 OFFCURVE",
"218 364 QCURVE SMOOTH",
"218 400 OFFCURVE",
"207 433 QCURVE",
"221 445 OFFCURVE",
"254 476 OFFCURVE",
"282 511 OFFCURVE",
"300 549 OFFCURVE",
"300 568 QCURVE",
"300 568 LINE"
);
},
{
closed = 1;
nodes = (
"269 534 OFFCURVE",
"226 474 OFFCURVE",
"201 454 QCURVE",
"193 471 OFFCURVE",
"181 513 OFFCURVE",
"181 530 QCURVE SMOOTH",
"181 555 OFFCURVE",
"216 594 OFFCURVE",
"241 594 QCURVE SMOOTH",
"269 594 OFFCURVE",
"269 565 QCURVE",
"269 565 LINE"
);
},
{
closed = 1;
nodes = (
"158 335 OFFCURVE",
"145 304 OFFCURVE",
"123 280 OFFCURVE",
"93 265 OFFCURVE",
"76 265 QCURVE SMOOTH",
"58 265 OFFCURVE",
"39 286 OFFCURVE",
"39 304 QCURVE SMOOTH",
"39 324 OFFCURVE",
"57 362 OFFCURVE",
"84 397 OFFCURVE",
"118 427 OFFCURVE",
"135 439 QCURVE",
"144 419 OFFCURVE",
"158 372 OFFCURVE",
"158 352 QCURVE",
"158 352 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
49 3 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 3 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 30 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 35 21 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
41 22 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 41 26 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
7 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
218 30 234 30 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 49 21 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
52 1 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 2 32 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 273;
}
);
note = eight.superior;
unicode = 2078;
},
{
glyphname = nine.superior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"49 237 OFFCURVE",
"99 263 OFFCURVE",
"149 303 OFFCURVE",
"196 352 OFFCURVE",
"215 378 QCURVE SMOOTH",
"246 420 OFFCURVE",
"285 508 OFFCURVE",
"285 547 QCURVE SMOOTH",
"285 581 OFFCURVE",
"243 620 OFFCURVE",
"208 620 QCURVE SMOOTH",
"179 620 OFFCURVE",
"120 586 OFFCURVE",
"70 534 OFFCURVE",
"39 473 OFFCURVE",
"39 445 QCURVE SMOOTH",
"39 422 OFFCURVE",
"67 390 OFFCURVE",
"93 390 QCURVE SMOOTH",
"116 390 OFFCURVE",
"152 413 OFFCURVE",
"166 431 QCURVE SMOOTH",
"181 450 OFFCURVE",
"200 495 OFFCURVE",
"205 515 QCURVE SMOOTH",
"206 520 OFFCURVE",
"196 526 OFFCURVE",
"193 519 QCURVE SMOOTH",
"185 496 OFFCURVE",
"166 458 OFFCURVE",
"154 445 QCURVE SMOOTH",
"149 439 OFFCURVE",
"130 426 OFFCURVE",
"111 420 OFFCURVE",
"97 427 OFFCURVE",
"97 441 QCURVE SMOOTH",
"97 460 OFFCURVE",
"116 516 OFFCURVE",
"147 568 OFFCURVE",
"187 605 OFFCURVE",
"207 605 QCURVE SMOOTH",
"219 605 OFFCURVE",
"232 586 OFFCURVE",
"232 572 QCURVE SMOOTH",
"232 536 OFFCURVE",
"214 469 OFFCURVE",
"187 412 OFFCURVE",
"156 365 OFFCURVE",
"143 349 QCURVE SMOOTH",
"108 304 OFFCURVE",
"44 253 OFFCURVE",
"27 245 QCURVE",
"23 245 OFFCURVE",
"16 240 OFFCURVE",
"14 235 OFFCURVE",
"19 232 OFFCURVE",
"27 234 QCURVE",
"27 234 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 13 26 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
21 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 21 21 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
46 38 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 283;
}
);
note = nine.superior;
unicode = 2079;
},
{
glyphname = zero.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"328 331 OFFCURVE",
"299 374 OFFCURVE",
"261 374 QCURVE SMOOTH",
"233 374 OFFCURVE",
"177 344 OFFCURVE",
"125 295 OFFCURVE",
"80 232 OFFCURVE",
"46 167 OFFCURVE",
"27 105 OFFCURVE",
"27 81 QCURVE SMOOTH",
"27 46 OFFCURVE",
"64 -7 OFFCURVE",
"104 -7 QCURVE SMOOTH",
"148 -7 OFFCURVE",
"229 60 OFFCURVE",
"291 156 OFFCURVE",
"328 261 OFFCURVE",
"328 299 QCURVE",
"328 299 LINE"
);
},
{
closed = 1;
nodes = (
"286 292 OFFCURVE",
"271 235 OFFCURVE",
"246 170 OFFCURVE",
"212 104 OFFCURVE",
"173 51 OFFCURVE",
"132 18 OFFCURVE",
"112 18 QCURVE SMOOTH",
"95 18 OFFCURVE",
"83 41 OFFCURVE",
"83 58 QCURVE SMOOTH",
"83 75 OFFCURVE",
"99 132 OFFCURVE",
"125 197 OFFCURVE",
"161 263 OFFCURVE",
"200 316 OFFCURVE",
"242 350 OFFCURVE",
"261 350 QCURVE SMOOTH",
"276 350 OFFCURVE",
"286 326 OFFCURVE",
"286 311 QCURVE",
"286 311 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 18 26 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
28 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 7 values pushed */
214 28 230 28 246 28 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
6 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 28 21 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 2 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 326;
}
);
note = zero.inferior;
unicode = 2080;
},
{
glyphname = one.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"234 365 OFFCURVE",
"216 350 OFFCURVE",
"211 344 QCURVE SMOOTH",
"189 322 OFFCURVE",
"133 267 OFFCURVE",
"109 249 QCURVE SMOOTH",
"93 237 LINE",
"85 229 OFFCURVE",
"83 222 OFFCURVE",
"89 221 OFFCURVE",
"99 225 OFFCURVE",
"104 228 QCURVE SMOOTH",
"122 242 OFFCURVE",
"166 265 OFFCURVE",
"181 277 QCURVE",
"32 0 LINE",
"32 -4 OFFCURVE",
"46 -6 OFFCURVE",
"65 -5 OFFCURVE",
"84 1 OFFCURVE",
"87 6 QCURVE SMOOTH",
"135 93 OFFCURVE",
"217 265 OFFCURVE",
"265 351 QCURVE",
"270 365 OFFCURVE",
"260 368 OFFCURVE",
"245 366 QCURVE",
"245 366 LINE"
);
}
);
width = 246;
}
);
note = one.inferior;
unicode = 2081;
},
{
glyphname = two.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"327 343 OFFCURVE",
"289 372 OFFCURVE",
"261 372 QCURVE SMOOTH",
"235 372 OFFCURVE",
"190 351 OFFCURVE",
"154 316 OFFCURVE",
"127 273 OFFCURVE",
"120 252 QCURVE SMOOTH",
"116 241 OFFCURVE",
"136 237 OFFCURVE",
"141 248 QCURVE SMOOTH",
"159 286 OFFCURVE",
"179 309 QCURVE SMOOTH",
"187 318 OFFCURVE",
"216 337 OFFCURVE",
"244 343 OFFCURVE",
"265 331 OFFCURVE",
"265 310 QCURVE SMOOTH",
"265 285 OFFCURVE",
"230 225 OFFCURVE",
"181 165 OFFCURVE",
"126 112 OFFCURVE",
"106 94 QCURVE SMOOTH",
"98 86 OFFCURVE",
"70 62 OFFCURVE",
"38 37 OFFCURVE",
"9 13 OFFCURVE",
"-1 5 QCURVE",
"-6 -6 OFFCURVE",
"-3 -12 OFFCURVE",
"13 -7 QCURVE",
"57 27 LINE",
"74 16 OFFCURVE",
"130 -5 OFFCURVE",
"162 -4 QCURVE SMOOTH",
"176 -4 OFFCURVE",
"205 13 OFFCURVE",
"231 36 OFFCURVE",
"253 62 OFFCURVE",
"261 72 QCURVE SMOOTH",
"268 83 OFFCURVE",
"269 92 OFFCURVE",
"263 93 OFFCURVE",
"253 87 OFFCURVE",
"249 82 QCURVE SMOOTH",
"243 75 OFFCURVE",
"225 60 OFFCURVE",
"204 48 OFFCURVE",
"184 40 OFFCURVE",
"177 40 QCURVE SMOOTH",
"158 40 OFFCURVE",
"115 60 OFFCURVE",
"105 70 QCURVE",
"114 78 LINE SMOOTH",
"130 91 OFFCURVE",
"174 128 OFFCURVE",
"221 170 OFFCURVE",
"268 215 OFFCURVE",
"304 259 OFFCURVE",
"327 299 OFFCURVE",
"327 315 QCURVE",
"327 315 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 3 43 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 317;
}
);
note = two.inferior;
unicode = 2082;
},
{
glyphname = three.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"316 353 OFFCURVE",
"282 374 OFFCURVE",
"259 374 QCURVE SMOOTH",
"221 374 OFFCURVE",
"159 328 OFFCURVE",
"136 300 QCURVE",
"134 287 OFFCURVE",
"144 288 OFFCURVE",
"149 293 QCURVE SMOOTH",
"164 310 OFFCURVE",
"207 341 OFFCURVE",
"228 341 QCURVE SMOOTH",
"236 341 OFFCURVE",
"254 333 OFFCURVE",
"254 325 QCURVE SMOOTH",
"254 300 OFFCURVE",
"226 256 OFFCURVE",
"184 222 OFFCURVE",
"136 200 OFFCURVE",
"117 196 QCURVE",
"114 194 OFFCURVE",
"110 189 OFFCURVE",
"112 184 OFFCURVE",
"122 182 OFFCURVE",
"131 184 QCURVE SMOOTH",
"140 186 OFFCURVE",
"170 197 OFFCURVE",
"177 197 QCURVE SMOOTH",
"191 197 OFFCURVE",
"208 176 OFFCURVE",
"208 160 QCURVE SMOOTH",
"208 136 OFFCURVE",
"185 83 OFFCURVE",
"145 38 OFFCURVE",
"93 9 OFFCURVE",
"64 9 QCURVE SMOOTH",
"48 9 OFFCURVE",
"22 29 OFFCURVE",
"17 43 QCURVE",
"5 49 OFFCURVE",
"4 38 OFFCURVE",
"7 30 QCURVE SMOOTH",
"15 10 OFFCURVE",
"46 -7 OFFCURVE",
"68 -7 QCURVE SMOOTH",
"102 -7 OFFCURVE",
"172 20 OFFCURVE",
"227 65 OFFCURVE",
"262 123 OFFCURVE",
"262 153 QCURVE SMOOTH",
"262 182 OFFCURVE",
"222 210 OFFCURVE",
"197 214 QCURVE",
"216 222 OFFCURVE",
"258 244 OFFCURVE",
"293 273 OFFCURVE",
"316 308 OFFCURVE",
"316 329 QCURVE",
"316 329 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 3 27 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 27 26 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
43 27 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
55 2 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
5 55 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 298;
}
);
note = three.inferior;
unicode = 2083;
},
{
glyphname = four.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"212 313 OFFCURVE",
"168 262 OFFCURVE",
"146 237 QCURVE SMOOTH",
"136 226 OFFCURVE",
"116 205 OFFCURVE",
"105 194 QCURVE SMOOTH",
"89 179 OFFCURVE",
"60 148 OFFCURVE",
"48 133 QCURVE",
"44 114 LINE",
"191 117 LINE",
"186 108 OFFCURVE",
"166 70 OFFCURVE",
"145 31 OFFCURVE",
"129 0 OFFCURVE",
"129 -1 QCURVE",
"136 -5 OFFCURVE",
"156 -4 OFFCURVE",
"175 0 OFFCURVE",
"190 5 OFFCURVE",
"192 7 QCURVE",
"250 120 LINE",
"265 120 LINE",
"288 129 OFFCURVE",
"288 142 OFFCURVE",
"269 145 QCURVE",
"264 145 LINE",
"268 153 OFFCURVE",
"281 179 OFFCURVE",
"293 203 OFFCURVE",
"302 221 OFFCURVE",
"302 222 QCURVE",
"308 231 OFFCURVE",
"295 237 OFFCURVE",
"273 234 OFFCURVE",
"250 224 OFFCURVE",
"244 218 QCURVE",
"237 204 OFFCURVE",
"227 184 OFFCURVE",
"218 167 OFFCURVE",
"210 152 OFFCURVE",
"206 143 QCURVE",
"85 140 LINE",
"96 154 OFFCURVE",
"116 173 OFFCURVE",
"128 183 QCURVE SMOOTH",
"154 205 OFFCURVE",
"219 261 OFFCURVE",
"276 312 OFFCURVE",
"316 351 OFFCURVE",
"316 357 QCURVE",
"311 360 OFFCURVE",
"288 364 OFFCURVE",
"262 361 OFFCURVE",
"238 350 OFFCURVE",
"232 340 QCURVE",
"232 340 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
13 2 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 302;
}
);
note = four.inferior;
unicode = 2084;
},
{
glyphname = five.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"304 364 OFFCURVE",
"279 360 OFFCURVE",
"266 360 QCURVE SMOOTH",
"258 360 OFFCURVE",
"244 361 OFFCURVE",
"236 362 QCURVE SMOOTH",
"228 363 OFFCURVE",
"212 364 OFFCURVE",
"204 364 QCURVE SMOOTH",
"183 364 OFFCURVE",
"166 357 QCURVE",
"164 355 OFFCURVE",
"148 330 OFFCURVE",
"126 293 OFFCURVE",
"102 250 OFFCURVE",
"81 212 OFFCURVE",
"65 183 OFFCURVE",
"64 179 QCURVE SMOOTH",
"61 171 OFFCURVE",
"69 156 OFFCURVE",
"81 168 QCURVE SMOOTH",
"101 188 OFFCURVE",
"146 203 OFFCURVE",
"160 203 QCURVE SMOOTH",
"191 203 OFFCURVE",
"191 169 QCURVE SMOOTH",
"191 151 OFFCURVE",
"177 114 OFFCURVE",
"153 80 OFFCURVE",
"122 49 OFFCURVE",
"105 38 QCURVE SMOOTH",
"79 21 OFFCURVE",
"17 13 OFFCURVE",
"3 22 QCURVE SMOOTH",
"-8 29 OFFCURVE",
"-7 15 OFFCURVE",
"0 10 QCURVE SMOOTH",
"12 2 OFFCURVE",
"43 -4 OFFCURVE",
"77 -1 OFFCURVE",
"110 8 OFFCURVE",
"123 14 QCURVE SMOOTH",
"148 26 OFFCURVE",
"194 60 OFFCURVE",
"230 101 OFFCURVE",
"252 147 OFFCURVE",
"252 170 QCURVE SMOOTH",
"252 202 OFFCURVE",
"209 231 OFFCURVE",
"180 231 QCURVE SMOOTH",
"164 231 OFFCURVE",
"119 214 OFFCURVE",
"104 206 QCURVE",
"120 235 OFFCURVE",
"156 302 OFFCURVE",
"171 329 QCURVE",
"182 328 OFFCURVE",
"200 327 OFFCURVE",
"213 327 QCURVE SMOOTH",
"249 327 OFFCURVE",
"304 339 OFFCURVE",
"321 365 QCURVE SMOOTH",
"328 375 OFFCURVE",
"322 382 OFFCURVE",
"314 374 QCURVE",
"314 374 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
18 3 39 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 39 26 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
62 2 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 2 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
12 41 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 289;
}
);
note = five.inferior;
unicode = 2085;
},
{
glyphname = six.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"253 376 OFFCURVE",
"203 350 OFFCURVE",
"153 310 OFFCURVE",
"106 260 OFFCURVE",
"87 235 QCURVE SMOOTH",
"56 193 OFFCURVE",
"17 105 OFFCURVE",
"17 66 QCURVE SMOOTH",
"17 32 OFFCURVE",
"59 -7 OFFCURVE",
"94 -7 QCURVE SMOOTH",
"122 -7 OFFCURVE",
"182 27 OFFCURVE",
"232 79 OFFCURVE",
"263 140 OFFCURVE",
"263 168 QCURVE SMOOTH",
"263 191 OFFCURVE",
"235 223 OFFCURVE",
"209 223 QCURVE SMOOTH",
"186 223 OFFCURVE",
"150 200 OFFCURVE",
"136 182 QCURVE SMOOTH",
"121 163 OFFCURVE",
"102 118 OFFCURVE",
"97 98 QCURVE SMOOTH",
"96 93 OFFCURVE",
"106 87 OFFCURVE",
"109 94 QCURVE SMOOTH",
"117 117 OFFCURVE",
"136 155 OFFCURVE",
"148 168 QCURVE SMOOTH",
"153 174 OFFCURVE",
"172 187 OFFCURVE",
"191 193 OFFCURVE",
"205 186 OFFCURVE",
"205 172 QCURVE SMOOTH",
"205 153 OFFCURVE",
"186 97 OFFCURVE",
"155 45 OFFCURVE",
"115 8 OFFCURVE",
"95 8 QCURVE SMOOTH",
"83 8 OFFCURVE",
"70 27 OFFCURVE",
"70 41 QCURVE SMOOTH",
"70 77 OFFCURVE",
"88 144 OFFCURVE",
"115 201 OFFCURVE",
"146 247 OFFCURVE",
"159 264 QCURVE SMOOTH",
"194 309 OFFCURVE",
"258 360 OFFCURVE",
"275 368 QCURVE",
"279 368 OFFCURVE",
"286 373 OFFCURVE",
"288 378 OFFCURVE",
"283 381 OFFCURVE",
"275 379 QCURVE",
"275 379 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
13 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 13 21 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 21 26 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 27 values pushed */
7 38 23 38 39 38 55 38 71 38 87 38 103 38 119 38 135 38 151 38 167 38 183 38 199 38 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
214 38 230 38 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 274;
}
);
note = six.inferior;
unicode = 2086;
},
{
glyphname = seven.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"363 365 OFFCURVE",
"351 362 OFFCURVE",
"347 362 QCURVE SMOOTH",
"326 364 OFFCURVE",
"282 365 OFFCURVE",
"261 365 QCURVE SMOOTH",
"231 365 OFFCURVE",
"191 359 OFFCURVE",
"162 341 OFFCURVE",
"141 307 OFFCURVE",
"131 279 QCURVE SMOOTH",
"128 270 OFFCURVE",
"132 266 OFFCURVE",
"140 269 OFFCURVE",
"149 276 OFFCURVE",
"151 280 QCURVE SMOOTH",
"159 299 OFFCURVE",
"208 324 OFFCURVE",
"230 324 QCURVE SMOOTH",
"254 324 OFFCURVE",
"284 323 OFFCURVE",
"302 322 OFFCURVE",
"310 321 OFFCURVE",
"312 321 QCURVE",
"295 305 OFFCURVE",
"237 248 OFFCURVE",
"167 180 OFFCURVE",
"95 108 OFFCURVE",
"36 46 OFFCURVE",
"-3 3 OFFCURVE",
"-4 -3 QCURVE",
"15 -11 OFFCURVE",
"52 -2 OFFCURVE",
"62 3 QCURVE",
"111 68 OFFCURVE",
"214 188 OFFCURVE",
"302 283 OFFCURVE",
"364 345 OFFCURVE",
"373 352 QCURVE SMOOTH",
"379 357 OFFCURVE",
"374 369 OFFCURVE",
"369 367 QCURVE",
"369 367 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
36 2 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 317;
}
);
note = seven.inferior;
unicode = 2087;
},
{
glyphname = eight.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"300 347 OFFCURVE",
"261 373 OFFCURVE",
"233 373 QCURVE SMOOTH",
"211 373 OFFCURVE",
"170 356 OFFCURVE",
"138 326 OFFCURVE",
"119 287 OFFCURVE",
"119 265 QCURVE SMOOTH",
"119 239 OFFCURVE",
"129 216 QCURVE",
"112 204 OFFCURVE",
"68 169 OFFCURVE",
"29 128 OFFCURVE",
"3 82 OFFCURVE",
"3 60 QCURVE SMOOTH",
"3 27 OFFCURVE",
"52 -7 OFFCURVE",
"83 -7 QCURVE SMOOTH",
"107 -7 OFFCURVE",
"156 12 OFFCURVE",
"194 45 OFFCURVE",
"218 89 OFFCURVE",
"218 114 QCURVE SMOOTH",
"218 150 OFFCURVE",
"207 183 QCURVE",
"221 195 OFFCURVE",
"254 226 OFFCURVE",
"282 261 OFFCURVE",
"300 299 OFFCURVE",
"300 318 QCURVE",
"300 318 LINE"
);
},
{
closed = 1;
nodes = (
"269 284 OFFCURVE",
"226 224 OFFCURVE",
"201 204 QCURVE",
"193 221 OFFCURVE",
"181 263 OFFCURVE",
"181 280 QCURVE SMOOTH",
"181 305 OFFCURVE",
"216 344 OFFCURVE",
"241 344 QCURVE SMOOTH",
"269 344 OFFCURVE",
"269 315 QCURVE",
"269 315 LINE"
);
},
{
closed = 1;
nodes = (
"158 85 OFFCURVE",
"145 54 OFFCURVE",
"123 30 OFFCURVE",
"93 15 OFFCURVE",
"76 15 QCURVE SMOOTH",
"58 15 OFFCURVE",
"39 36 OFFCURVE",
"39 54 QCURVE SMOOTH",
"39 74 OFFCURVE",
"57 112 OFFCURVE",
"84 147 OFFCURVE",
"118 177 OFFCURVE",
"135 189 QCURVE",
"144 169 OFFCURVE",
"158 122 OFFCURVE",
"158 102 QCURVE",
"158 102 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
49 3 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 3 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 30 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 7 values pushed */
214 35 230 35 246 35 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 35 21 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
41 22 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 41 26 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
7 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
218 30 234 30 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 49 21 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 2 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 273;
}
);
note = eight.inferior;
unicode = 2088;
},
{
glyphname = nine.inferior;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"49 -13 OFFCURVE",
"99 13 OFFCURVE",
"149 53 OFFCURVE",
"196 102 OFFCURVE",
"215 128 QCURVE SMOOTH",
"246 170 OFFCURVE",
"285 258 OFFCURVE",
"285 297 QCURVE SMOOTH",
"285 331 OFFCURVE",
"243 370 OFFCURVE",
"208 370 QCURVE SMOOTH",
"179 370 OFFCURVE",
"120 336 OFFCURVE",
"70 284 OFFCURVE",
"39 223 OFFCURVE",
"39 195 QCURVE SMOOTH",
"39 172 OFFCURVE",
"67 140 OFFCURVE",
"93 140 QCURVE SMOOTH",
"116 140 OFFCURVE",
"152 163 OFFCURVE",
"166 181 QCURVE SMOOTH",
"181 200 OFFCURVE",
"200 245 OFFCURVE",
"205 265 QCURVE SMOOTH",
"206 270 OFFCURVE",
"196 276 OFFCURVE",
"193 269 QCURVE SMOOTH",
"185 246 OFFCURVE",
"166 208 OFFCURVE",
"154 195 QCURVE SMOOTH",
"149 189 OFFCURVE",
"130 176 OFFCURVE",
"111 170 OFFCURVE",
"97 177 OFFCURVE",
"97 191 QCURVE SMOOTH",
"97 210 OFFCURVE",
"116 266 OFFCURVE",
"147 318 OFFCURVE",
"187 355 OFFCURVE",
"207 355 QCURVE SMOOTH",
"219 355 OFFCURVE",
"232 336 OFFCURVE",
"232 322 QCURVE SMOOTH",
"232 286 OFFCURVE",
"214 219 OFFCURVE",
"187 162 OFFCURVE",
"156 115 OFFCURVE",
"143 99 QCURVE SMOOTH",
"108 54 OFFCURVE",
"44 3 OFFCURVE",
"27 -5 QCURVE",
"23 -5 OFFCURVE",
"16 -10 OFFCURVE",
"14 -15 OFFCURVE",
"19 -18 OFFCURVE",
"27 -16 QCURVE",
"27 -16 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 13 26 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
21 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 21 21 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
46 38 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 283;
}
);
note = nine.inferior;
unicode = 2089;
},
{
glyphname = threeeighths;
layers = (
{
components = (
{
name = fraction;
},
{
name = threesuperior;
},
{
name = eight.inferior;
transform = "{1, 0, 0, 1, 370, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 683;
}
);
note = threeeighths;
unicode = 215C;
},
{
glyphname = zero.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"367 291 OFFCURVE",
"366 232 OFFCURVE",
"349 166 OFFCURVE",
"317 100 OFFCURVE",
"271 46 OFFCURVE",
"211 13 OFFCURVE",
"175 13 QCURVE SMOOTH",
"137 13 OFFCURVE",
"98 40 OFFCURVE",
"89 60 QCURVE SMOOTH",
"81 77 OFFCURVE",
"85 134 OFFCURVE",
"104 200 OFFCURVE",
"139 267 OFFCURVE",
"187 321 OFFCURVE",
"247 355 OFFCURVE",
"282 355 QCURVE SMOOTH",
"316 355 OFFCURVE",
"351 327 OFFCURVE",
"359 310 QCURVE",
"359 310 LINE"
);
},
{
closed = 1;
nodes = (
"21 136 OFFCURVE",
"32 68 OFFCURVE",
"70 17 OFFCURVE",
"131 -11 OFFCURVE",
"171 -11 QCURVE SMOOTH",
"211 -10 OFFCURVE",
"289 21 OFFCURVE",
"356 73 OFFCURVE",
"405 143 OFFCURVE",
"416 183 QCURVE SMOOTH",
"427 223 OFFCURVE",
"416 292 OFFCURVE",
"379 344 OFFCURVE",
"317 373 OFFCURVE",
"277 372 QCURVE SMOOTH",
"237 371 OFFCURVE",
"159 340 OFFCURVE",
"92 287 OFFCURVE",
"43 216 OFFCURVE",
"32 176 QCURVE",
"32 176 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
13 2 35 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 436;
}
);
note = zero.onum;
},
{
glyphname = one.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"201 22 LINE",
"134 22 LINE",
"176 100 OFFCURVE",
"251 255 OFFCURVE",
"293 333 QCURVE",
"356 336 LINE SMOOTH",
"359 336 OFFCURVE",
"366 343 OFFCURVE",
"371 351 OFFCURVE",
"370 358 OFFCURVE",
"366 358 QCURVE SMOOTH",
"305 358 LINE",
"307 366 OFFCURVE",
"296 367 OFFCURVE",
"283 366 QCURVE SMOOTH",
"270 364 OFFCURVE",
"262 359 QCURVE",
"239 359 OFFCURVE",
"200 360 OFFCURVE",
"183 360 QCURVE SMOOTH",
"181 360 OFFCURVE",
"169 347 OFFCURVE",
"158 332 OFFCURVE",
"152 319 OFFCURVE",
"157 321 QCURVE",
"193 326 OFFCURVE",
"242 330 QCURVE",
"82 23 LINE",
"64 24 OFFCURVE",
"32 24 OFFCURVE",
"18 24 QCURVE SMOOTH",
"16 24 OFFCURVE",
"4 11 OFFCURVE",
"-7 -4 OFFCURVE",
"-13 -17 OFFCURVE",
"-8 -15 QCURVE",
"10 -13 OFFCURVE",
"53 -7 OFFCURVE",
"80 -5 QCURVE",
"93 -7 OFFCURVE",
"106 -4 QCURVE",
"125 -2 OFFCURVE",
"167 -1 OFFCURVE",
"191 0 QCURVE SMOOTH",
"194 0 OFFCURVE",
"201 7 OFFCURVE",
"206 15 OFFCURVE",
"205 22 OFFCURVE",
"201 22 QCURVE",
"201 22 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 386;
}
);
note = one.onum;
},
{
glyphname = two.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"346 343 OFFCURVE",
"293 372 OFFCURVE",
"259 372 QCURVE SMOOTH",
"227 372 OFFCURVE",
"175 351 OFFCURVE",
"138 316 OFFCURVE",
"114 273 OFFCURVE",
"109 252 QCURVE SMOOTH",
"108 246 OFFCURVE",
"115 239 OFFCURVE",
"124 238 OFFCURVE",
"134 242 OFFCURVE",
"136 248 QCURVE SMOOTH",
"152 288 OFFCURVE",
"170 309 QCURVE SMOOTH",
"178 318 OFFCURVE",
"210 337 OFFCURVE",
"243 343 OFFCURVE",
"271 331 OFFCURVE",
"276 310 QCURVE SMOOTH",
"281 285 OFFCURVE",
"251 225 OFFCURVE",
"203 165 OFFCURVE",
"146 112 OFFCURVE",
"125 94 QCURVE SMOOTH",
"116 86 OFFCURVE",
"86 62 OFFCURVE",
"53 37 OFFCURVE",
"21 13 OFFCURVE",
"11 5 QCURVE",
"8 -6 OFFCURVE",
"13 -12 OFFCURVE",
"31 -7 QCURVE",
"78 27 LINE",
"101 16 OFFCURVE",
"175 -5 OFFCURVE",
"214 -4 QCURVE SMOOTH",
"232 -4 OFFCURVE",
"264 13 OFFCURVE",
"291 36 OFFCURVE",
"313 62 OFFCURVE",
"321 72 QCURVE",
"327 83 OFFCURVE",
"326 92 OFFCURVE",
"318 93 OFFCURVE",
"308 87 OFFCURVE",
"304 82 QCURVE SMOOTH",
"298 75 OFFCURVE",
"278 60 OFFCURVE",
"255 48 OFFCURVE",
"232 40 OFFCURVE",
"224 40 QCURVE SMOOTH",
"212 40 OFFCURVE",
"185 46 OFFCURVE",
"158 55 OFFCURVE",
"136 65 OFFCURVE",
"129 70 QCURVE",
"138 78 LINE SMOOTH",
"155 91 OFFCURVE",
"202 128 OFFCURVE",
"251 170 OFFCURVE",
"299 215 OFFCURVE",
"336 259 OFFCURVE",
"355 299 OFFCURVE",
"352 315 QCURVE",
"352 315 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 360;
}
);
note = two.onum;
},
{
glyphname = three.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"363 343 OFFCURVE",
"317 371 OFFCURVE",
"287 371 QCURVE SMOOTH",
"259 371 OFFCURVE",
"208 352 OFFCURVE",
"162 321 OFFCURVE",
"122 282 OFFCURVE",
"105 261 QCURVE",
"105 256 LINE",
"112 250 LINE",
"117 250 LINE",
"129 263 OFFCURVE",
"160 295 OFFCURVE",
"196 321 OFFCURVE",
"235 339 OFFCURVE",
"255 339 QCURVE SMOOTH",
"273 339 OFFCURVE",
"294 322 OFFCURVE",
"294 303 QCURVE SMOOTH",
"294 267 OFFCURVE",
"243 203 OFFCURVE",
"170 150 OFFCURVE",
"91 112 OFFCURVE",
"64 101 QCURVE",
"60 96 LINE",
"61 87 LINE",
"68 84 LINE",
"85 89 OFFCURVE",
"121 98 OFFCURVE",
"138 98 QCURVE SMOOTH",
"167 98 OFFCURVE",
"208 67 OFFCURVE",
"208 36 QCURVE SMOOTH",
"208 -4 OFFCURVE",
"162 -86 OFFCURVE",
"92 -153 OFFCURVE",
"8 -196 OFFCURVE",
"-31 -196 QCURVE SMOOTH",
"-47 -196 OFFCURVE",
"-87 -188 OFFCURVE",
"-101 -181 QCURVE",
"-106 -183 LINE",
"-113 -189 LINE",
"-113 -194 LINE",
"-93 -208 OFFCURVE",
"-43 -218 OFFCURVE",
"-20 -218 QCURVE SMOOTH",
"23 -218 OFFCURVE",
"126 -176 OFFCURVE",
"216 -107 OFFCURVE",
"276 -18 OFFCURVE",
"276 28 QCURVE SMOOTH",
"276 55 OFFCURVE",
"250 90 OFFCURVE",
"211 111 OFFCURVE",
"163 120 OFFCURVE",
"141 120 QCURVE",
"170 130 OFFCURVE",
"247 164 OFFCURVE",
"316 211 OFFCURVE",
"363 271 OFFCURVE",
"363 309 QCURVE",
"363 309 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 43 26 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 10 21 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
24 1 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 2 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 1 32 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 362;
}
);
note = three.onum;
},
{
glyphname = four.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"410 355 LINE",
"409 362 LINE",
"402 365 LINE",
"382 361 OFFCURVE",
"354 358 OFFCURVE",
"332 351 OFFCURVE",
"311 335 OFFCURVE",
"299 319 QCURVE SMOOTH",
"267 276 OFFCURVE",
"199 196 OFFCURVE",
"164 156 QCURVE SMOOTH",
"128 115 OFFCURVE",
"41 32 OFFCURVE",
"8 -10 QCURVE SMOOTH",
"6 -12 OFFCURVE",
"5 -15 OFFCURVE",
"4 -17 QCURVE",
"4 -25 LINE",
"247 -19 LINE",
"245 -23 OFFCURVE",
"228 -53 OFFCURVE",
"206 -94 OFFCURVE",
"181 -140 OFFCURVE",
"161 -180 OFFCURVE",
"147 -207 OFFCURVE",
"147 -209 QCURVE SMOOTH",
"147 -213 LINE",
"152 -214 LINE SMOOTH",
"155 -214 OFFCURVE",
"174 -211 OFFCURVE",
"196 -206 OFFCURVE",
"214 -201 OFFCURVE",
"216 -199 QCURVE SMOOTH",
"220 -195 OFFCURVE",
"247 -143 OFFCURVE",
"278 -81 OFFCURVE",
"305 -25 OFFCURVE",
"310 -16 QCURVE",
"339 -15 LINE",
"346 -10 LINE",
"351 1 LINE",
"345 5 LINE",
"321 5 LINE",
"324 9 OFFCURVE",
"345 51 OFFCURVE",
"369 97 OFFCURVE",
"388 136 OFFCURVE",
"388 138 QCURVE SMOOTH",
"387 144 LINE",
"381 147 LINE",
"367 146 OFFCURVE",
"331 142 OFFCURVE",
"324 128 QCURVE SMOOTH",
"259 2 LINE",
"42 -2 LINE",
"50 5 OFFCURVE",
"111 59 OFFCURVE",
"193 133 OFFCURVE",
"284 217 OFFCURVE",
"361 292 OFFCURVE",
"410 347 OFFCURVE",
"410 355 QCURVE",
"410 355 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
21 1 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 393;
}
);
note = four.onum;
},
{
glyphname = five.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"446 369 LINE",
"442 371 LINE",
"419 354 OFFCURVE",
"359 349 OFFCURVE",
"296 353 OFFCURVE",
"235 356 OFFCURVE",
"212 347 QCURVE",
"209 344 OFFCURVE",
"184 305 OFFCURVE",
"150 247 OFFCURVE",
"111 181 OFFCURVE",
"78 121 OFFCURVE",
"54 76 OFFCURVE",
"52 69 QCURVE",
"52 63 LINE",
"58 61 LINE",
"74 69 OFFCURVE",
"105 88 OFFCURVE",
"138 105 OFFCURVE",
"172 117 OFFCURVE",
"190 117 QCURVE SMOOTH",
"221 117 OFFCURVE",
"255 84 OFFCURVE",
"255 53 QCURVE SMOOTH",
"255 11 OFFCURVE",
"206 -79 OFFCURVE",
"131 -153 OFFCURVE",
"41 -201 OFFCURVE",
"-1 -201 QCURVE SMOOTH",
"-16 -201 OFFCURVE",
"-49 -197 OFFCURVE",
"-63 -192 QCURVE",
"-67 -194 LINE",
"-73 -201 LINE",
"-73 -208 LINE",
"-61 -216 OFFCURVE",
"-16 -220 OFFCURVE",
"-2 -220 QCURVE SMOOTH",
"30 -220 OFFCURVE",
"102 -198 OFFCURVE",
"174 -160 OFFCURVE",
"241 -108 OFFCURVE",
"292 -46 OFFCURVE",
"322 22 OFFCURVE",
"322 56 QCURVE SMOOTH",
"322 101 OFFCURVE",
"264 143 OFFCURVE",
"222 143 QCURVE SMOOTH",
"188 143 OFFCURVE",
"116 117 OFFCURVE",
"88 98 QCURVE",
"198 289 LINE",
"229 287 OFFCURVE",
"305 284 OFFCURVE",
"375 297 OFFCURVE",
"432 333 OFFCURVE",
"446 369 QCURVE",
"446 369 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
12 3 33 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
10 33 26 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 9 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 425;
}
);
note = five.onum;
},
{
glyphname = six.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"402 577 LINE",
"395 588 LINE",
"389 587 LINE",
"354 563 OFFCURVE",
"270 497 OFFCURVE",
"185 418 OFFCURVE",
"105 329 OFFCURVE",
"43 236 OFFCURVE",
"6 141 OFFCURVE",
"6 96 QCURVE SMOOTH",
"6 45 OFFCURVE",
"64 -11 OFFCURVE",
"114 -11 QCURVE SMOOTH",
"157 -11 OFFCURVE",
"248 41 OFFCURVE",
"322 121 OFFCURVE",
"369 216 OFFCURVE",
"369 258 QCURVE SMOOTH",
"369 291 OFFCURVE",
"333 337 OFFCURVE",
"298 337 QCURVE SMOOTH",
"265 337 OFFCURVE",
"204 300 OFFCURVE",
"155 243 OFFCURVE",
"120 176 OFFCURVE",
"113 147 QCURVE",
"115 141 LINE",
"125 142 LINE",
"129 147 LINE",
"137 168 OFFCURVE",
"165 222 OFFCURVE",
"203 272 OFFCURVE",
"249 306 OFFCURVE",
"274 306 QCURVE SMOOTH",
"293 306 OFFCURVE",
"308 283 OFFCURVE",
"308 266 QCURVE SMOOTH",
"308 234 OFFCURVE",
"276 147 OFFCURVE",
"223 68 OFFCURVE",
"155 12 OFFCURVE",
"120 12 QCURVE SMOOTH",
"93 12 OFFCURVE",
"65 48 OFFCURVE",
"65 74 QCURVE SMOOTH",
"65 109 OFFCURVE",
"92 190 OFFCURVE",
"132 270 OFFCURVE",
"179 343 OFFCURVE",
"200 370 QCURVE SMOOTH",
"258 446 OFFCURVE",
"329 511 QCURVE SMOOTH",
"345 525 OFFCURVE",
"383 554 OFFCURVE",
"397 569 QCURVE SMOOTH",
"399 571 OFFCURVE",
"400 575 OFFCURVE",
"402 577 QCURVE",
"402 577 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
13 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 13 21 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
10 21 26 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
16 2 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 2 24 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 394;
}
);
note = six.onum;
},
{
glyphname = seven.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"411 364 LINE",
"407 370 LINE",
"403 370 OFFCURVE",
"390 362 OFFCURVE",
"387 360 QCURVE",
"352 365 OFFCURVE",
"280 367 OFFCURVE",
"245 367 QCURVE SMOOTH",
"200 367 OFFCURVE",
"144 356 OFFCURVE",
"103 327 OFFCURVE",
"71 277 OFFCURVE",
"51 237 QCURVE",
"51 231 LINE",
"54 229 LINE",
"65 230 OFFCURVE",
"80 252 OFFCURVE",
"103 279 OFFCURVE",
"140 301 OFFCURVE",
"173 301 QCURVE SMOOTH",
"213 301 OFFCURVE",
"292 298 OFFCURVE",
"332 297 QCURVE",
"320 285 OFFCURVE",
"239 209 OFFCURVE",
"132 106 OFFCURVE",
"14 -10 OFFCURVE",
"-87 -112 OFFCURVE",
"-154 -186 OFFCURVE",
"-157 -196 QCURVE",
"-156 -200 LINE",
"-150 -203 LINE",
"-135 -201 OFFCURVE",
"-91 -199 OFFCURVE",
"-78 -193 QCURVE SMOOTH",
"-76 -192 OFFCURVE",
"-56 -169 OFFCURVE",
"-34 -141 OFFCURVE",
"-14 -115 OFFCURVE",
"-11 -112 QCURVE SMOOTH",
"43 -44 OFFCURVE",
"153 86 OFFCURVE",
"213 149 QCURVE SMOOTH",
"263 201 OFFCURVE",
"362 303 OFFCURVE",
"409 357 QCURVE",
"409 357 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 400;
}
);
note = seven.onum;
},
{
glyphname = eight.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"461 541 OFFCURVE",
"407 577 OFFCURVE",
"369 577 QCURVE SMOOTH",
"337 577 OFFCURVE",
"276 551 OFFCURVE",
"229 506 OFFCURVE",
"201 447 OFFCURVE",
"201 414 QCURVE SMOOTH",
"201 373 OFFCURVE",
"218 334 QCURVE",
"192 314 OFFCURVE",
"121 259 OFFCURVE",
"58 193 OFFCURVE",
"14 121 OFFCURVE",
"14 86 QCURVE SMOOTH",
"14 62 OFFCURVE",
"33 26 OFFCURVE",
"65 1 OFFCURVE",
"106 -11 OFFCURVE",
"128 -11 QCURVE SMOOTH",
"164 -11 OFFCURVE",
"236 18 OFFCURVE",
"293 68 OFFCURVE",
"329 134 OFFCURVE",
"329 172 QCURVE SMOOTH",
"329 205 OFFCURVE",
"324 254 OFFCURVE",
"310 284 QCURVE",
"332 303 OFFCURVE",
"384 352 OFFCURVE",
"430 408 OFFCURVE",
"461 469 OFFCURVE",
"461 500 QCURVE",
"461 500 LINE"
);
},
{
closed = 1;
nodes = (
"425 473 OFFCURVE",
"402 417 OFFCURVE",
"366 366 OFFCURVE",
"323 321 OFFCURVE",
"303 305 QCURVE",
"297 320 OFFCURVE",
"284 356 OFFCURVE",
"273 393 OFFCURVE",
"266 430 OFFCURVE",
"266 447 QCURVE SMOOTH",
"266 468 OFFCURVE",
"282 507 OFFCURVE",
"311 538 OFFCURVE",
"349 557 OFFCURVE",
"370 557 QCURVE SMOOTH",
"396 557 OFFCURVE",
"425 527 OFFCURVE",
"425 501 QCURVE",
"425 501 LINE"
);
},
{
closed = 1;
nodes = (
"265 130 OFFCURVE",
"244 77 OFFCURVE",
"207 36 OFFCURVE",
"158 10 OFFCURVE",
"130 10 QCURVE SMOOTH",
"95 10 OFFCURVE",
"60 50 OFFCURVE",
"60 83 QCURVE SMOOTH",
"60 119 OFFCURVE",
"91 186 OFFCURVE",
"139 245 OFFCURVE",
"197 295 OFFCURVE",
"223 315 QCURVE",
"237 280 OFFCURVE",
"265 194 OFFCURVE",
"265 157 QCURVE",
"265 157 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
59 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 3 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 3 33 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 41 21 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
10 33 26 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
46 41 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
54 25 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 33 values pushed */
6 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 59 21 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
62 1 13 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 1 36 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 420;
}
);
note = eight.onum;
},
{
glyphname = nine.onum;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"389 229 OFFCURVE",
"378 272 OFFCURVE",
"354 306 OFFCURVE",
"317 327 OFFCURVE",
"291 327 QCURVE SMOOTH",
"248 327 OFFCURVE",
"154 268 OFFCURVE",
"76 180 OFFCURVE",
"25 78 OFFCURVE",
"25 36 QCURVE SMOOTH",
"25 3 OFFCURVE",
"61 -42 OFFCURVE",
"96 -42 QCURVE SMOOTH",
"129 -42 OFFCURVE",
"188 -2 OFFCURVE",
"238 58 OFFCURVE",
"274 125 OFFCURVE",
"285 152 QCURVE",
"284 157 LINE",
"273 158 LINE",
"269 155 LINE",
"260 134 OFFCURVE",
"235 86 OFFCURVE",
"201 44 OFFCURVE",
"158 16 OFFCURVE",
"132 16 QCURVE SMOOTH",
"106 16 OFFCURVE",
"82 48 OFFCURVE",
"82 72 QCURVE SMOOTH",
"82 105 OFFCURVE",
"115 186 OFFCURVE",
"169 258 OFFCURVE",
"238 306 OFFCURVE",
"274 306 QCURVE SMOOTH",
"306 306 OFFCURVE",
"329 265 OFFCURVE",
"329 237 QCURVE SMOOTH",
"329 219 OFFCURVE",
"324 182 OFFCURVE",
"319 165 QCURVE SMOOTH",
"284 29 OFFCURVE",
"125 -178 OFFCURVE",
"13 -257 QCURVE",
"9 -263 LINE",
"14 -272 LINE",
"20 -272 LINE",
"74 -237 OFFCURVE",
"202 -131 OFFCURVE",
"314 -4 OFFCURVE",
"389 136 OFFCURVE",
"389 206 QCURVE",
"389 206 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
10 14 26 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
5 22 21 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
46 1 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
25 38 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 400;
}
);
note = nine.onum;
},
{
glyphname = onehalf;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, -29, 0}";
},
{
name = onesuperior;
},
{
name = two.inferior;
transform = "{1, 0, 0, 1, 291, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 622;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = twothirds;
layers = (
{
components = (
{
name = fraction;
},
{
name = twosuperior;
},
{
name = three.inferior;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 675;
}
);
note = twothirds;
unicode = 2154;
},
{
glyphname = product;
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"592 635 LINE",
"592 637 LINE SMOOTH",
"592 639 OFFCURVE",
"587 639 QCURVE SMOOTH",
"581 639 OFFCURVE",
"571 623 OFFCURVE",
"552 605 OFFCURVE",
"519 589 OFFCURVE",
"491 589 QCURVE SMOOTH",
"459 589 OFFCURVE",
"394 606 OFFCURVE",
"331 625 OFFCURVE",
"268 642 OFFCURVE",
"237 642 QCURVE SMOOTH",
"221 642 OFFCURVE",
"208 638 QCURVE SMOOTH",
"196 634 OFFCURVE",
"166 615 OFFCURVE",
"139 591 OFFCURVE",
"121 565 OFFCURVE",
"121 555 QCURVE SMOOTH",
"121 550 OFFCURVE",
"128 550 QCURVE SMOOTH",
"134 550 OFFCURVE",
"141 563 OFFCURVE",
"153 579 OFFCURVE",
"174 594 OFFCURVE",
"195 596 QCURVE",
"199 597 OFFCURVE",
"207 597 OFFCURVE",
"211 597 QCURVE SMOOTH",
"219 597 OFFCURVE",
"232 596 OFFCURVE",
"240 595 QCURVE",
"103 0 LINE",
"128 0 LINE",
"263 591 LINE",
"306 582 OFFCURVE",
"389 554 OFFCURVE",
"433 547 QCURVE",
"311 3 LINE",
"335 3 LINE",
"456 545 LINE",
"478 545 OFFCURVE",
"495 549 QCURVE",
"493 549 LINE",
"505 553 OFFCURVE",
"540 573 OFFCURVE",
"571 598 OFFCURVE",
"593 624 OFFCURVE",
"592 635 QCURVE",
"592 635 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 5 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
42 2 28 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 612;
}
);
note = product;
unicode = 220F;
},
{
glyphname = fi;
layers = (
{
components = (
{
name = f;
},
{
name = i;
transform = "{1, 0, 0, 1, 198, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 372;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = Abreveacute;
lastChange = "2020-07-16 16:00:01 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 604, 375}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2020-07-16 16:00:12 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 613, 378}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2020-07-16 16:00:16 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 596, 371}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2020-07-16 16:00:29 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 603, 365}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2020-07-16 16:00:38 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 591, 370}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EB4;
},
{
glyphname = Acircumflexacute;
lastChange = "2020-07-16 16:00:42 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 418, 416}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2020-07-16 16:00:50 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -69, -89}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 438, 422}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2020-07-16 16:01:12 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 426, 420}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2020-07-16 16:01:22 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 433, 419}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2020-07-16 16:01:36 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 452, 426}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EAA;
},
{
glyphname = Adotbelow;
lastChange = "2020-07-16 16:01:41 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 0, -77}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EA0;
},
{
glyphname = Ahookabove;
lastChange = "2020-07-16 16:01:49 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 616, 315}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 712;
}
);
unicode = 1EA2;
},
{
glyphname = Ecircumflexacute;
lastChange = "2020-07-16 16:01:54 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 422, 454}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2020-07-16 16:02:07 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 102, -75}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 414, 452}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2020-07-16 16:02:17 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 417, 454}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2020-07-16 16:38:41 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 419, 448}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2020-07-16 16:02:27 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 427, 428}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EC4;
},
{
glyphname = Edotbelow;
lastChange = "2020-07-16 16:02:33 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 136, -72}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EB8;
},
{
glyphname = Ehookabove;
lastChange = "2020-07-16 16:02:39 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 615, 350}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EBA;
},
{
glyphname = Etilde;
lastChange = "2020-07-16 16:03:01 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 489, 437}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 815;
}
);
unicode = 1EBC;
},
{
glyphname = Idotbelow;
lastChange = "2020-07-16 16:03:13 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 67, -158}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 912;
}
);
unicode = 1ECA;
},
{
glyphname = Ihookabove;
lastChange = "2020-07-16 16:03:22 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 1055, 359}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 912;
}
);
unicode = 1EC8;
},
{
glyphname = Ocircumflexacute;
lastChange = "2020-07-16 16:03:29 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 251, 419}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2020-07-16 16:03:42 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 120, -99}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 251, 431}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2020-07-16 16:03:46 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 299, 421}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2020-07-16 16:03:52 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 294, 419}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2020-07-16 16:03:57 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 285, 409}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ED6;
},
{
glyphname = Odotbelow;
lastChange = "2020-07-16 16:04:01 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 124, -94}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ECC;
},
{
glyphname = Ohookabove;
lastChange = "2020-07-16 16:04:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 424, 327}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2020-07-16 16:04:12 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 344, 378}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2020-07-16 16:04:36 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 407, 404}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 726;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2020-07-16 16:05:32 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 154, -82}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2020-07-16 16:05:42 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, 420, 402}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2020-07-16 16:05:53 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 432, 314}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2020-07-16 16:06:12 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 223, 413}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EE0;
},
{
glyphname = Germandbls;
lastChange = "2020-07-16 16:23:44 +0000";
layers = (
{
components = (
{
name = S;
transform = "{1, 0, 0, 1, 636, 0}";
},
{
name = S;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 1537;
}
);
unicode = 1E9E;
},
{
glyphname = Tcedilla;
lastChange = "2020-07-16 16:35:57 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 163, -78}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 918;
}
);
unicode = 0162;
},
{
glyphname = Udotbelow;
lastChange = "2020-07-16 16:06:19 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 434, -62}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
unicode = 1EE4;
},
{
glyphname = Uhookabove;
lastChange = "2020-07-16 16:06:23 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 742, 111}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 942;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2020-07-16 16:07:38 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 715, 145}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 966;
}
);
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2020-07-16 16:07:56 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 778, 206}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 966;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2020-07-16 16:08:23 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 440, -80}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2020-07-16 16:09:12 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, 779, 205}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2020-07-16 16:09:18 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 748, 89}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2020-07-16 16:09:29 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 586, 192}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 600;
}
);
unicode = 1EEE;
},
{
glyphname = Ydotbelow;
lastChange = "2020-07-16 16:09:34 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 676, -228}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 959;
}
);
unicode = 1EF4;
},
{
glyphname = Yhookabove;
lastChange = "2020-07-16 16:38:14 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 789, 132}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 0;
nodes = (
"1020 -267 LINE"
);
}
);
width = 959;
}
);
unicode = 1EF6;
},
{
glyphname = Ytilde;
lastChange = "2020-07-16 16:09:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 629, 197}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 959;
}
);
unicode = 1EF8;
},
{
glyphname = abreveacute;
lastChange = "2020-07-16 16:13:09 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 162, -38}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2020-07-16 16:13:15 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 138, -36}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2020-07-16 16:13:21 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 134, -34}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2020-07-16 16:13:23 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 129, -30}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2020-07-16 16:13:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 135, -35}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EB5;
},
{
glyphname = acircumflexacute;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EAB;
},
{
glyphname = adotbelow;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EA1;
},
{
glyphname = ahookabove;
lastChange = "2020-07-16 16:13:38 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 176, -82}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 350;
}
);
unicode = 1EA3;
},
{
glyphname = ecircumflexacute;
lastChange = "2020-07-16 16:13:46 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -25, -13}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2020-07-16 16:13:53 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -22, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2020-07-16 16:13:58 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -27, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2020-07-16 16:14:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -17, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2020-07-16 16:14:09 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EC5;
},
{
glyphname = edotbelow;
lastChange = "2020-07-16 16:14:15 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -42, -13}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EB9;
},
{
glyphname = ehookabove;
lastChange = "2020-07-16 16:14:19 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 130, -96}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EBB;
},
{
glyphname = etilde;
lastChange = "2020-07-16 16:14:22 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -39, -15}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 246;
}
);
unicode = 1EBD;
},
{
glyphname = idotaccent;
lastChange = "2020-07-16 16:37:31 +0000";
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"71 87 OFFCURVE",
"75 97 OFFCURVE",
"77 102 QCURVE SMOOTH",
"80 107 OFFCURVE",
"82 114 QCURVE",
"162 301 LINE SMOOTH",
"170 319 OFFCURVE",
"165 336 OFFCURVE",
"141 336 QCURVE SMOOTH",
"86 335 LINE",
"89 331 OFFCURVE",
"102 307 OFFCURVE",
"96 293 QCURVE SMOOTH",
"32 130 LINE SMOOTH",
"24 110 OFFCURVE",
"18 65 OFFCURVE",
"28 26 OFFCURVE",
"58 0 OFFCURVE",
"86 0 QCURVE SMOOTH",
"114 0 OFFCURVE",
"162 41 OFFCURVE",
"203 100 OFFCURVE",
"233 162 OFFCURVE",
"243 183 QCURVE SMOOTH",
"250 198 OFFCURVE",
"236 206 OFFCURVE",
"230 192 QCURVE SMOOTH",
"209 150 OFFCURVE",
"161 66 OFFCURVE",
"136 41 QCURVE SMOOTH",
"128 33 OFFCURVE",
"102 20 OFFCURVE",
"91 22 QCURVE SMOOTH",
"70 24 OFFCURVE",
"63 60 OFFCURVE",
"70 85 QCURVE",
"70 85 LINE"
);
},
{
closed = 1;
nodes = (
"230 571 OFFCURVE",
"217 587 OFFCURVE",
"206 587 QCURVE SMOOTH",
"198 587 OFFCURVE",
"181 575 OFFCURVE",
"167 558 OFFCURVE",
"159 539 OFFCURVE",
"159 531 QCURVE SMOOTH",
"159 521 OFFCURVE",
"172 511 OFFCURVE",
"181 511 QCURVE SMOOTH",
"200 511 OFFCURVE",
"230 541 OFFCURVE",
"230 561 QCURVE",
"230 561 LINE"
);
}
);
width = 174;
}
);
},
{
glyphname = idotbelow;
lastChange = "2020-07-16 16:14:26 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -84, -12}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 174;
}
);
unicode = 1ECB;
},
{
glyphname = ihookabove;
lastChange = "2020-07-16 16:14:42 +0000";
layers = (
{
components = (
{
name = dotlessi;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 67, -94}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 174;
}
);
unicode = 1EC9;
},
{
glyphname = ocircumflexacute;
lastChange = "2020-07-16 16:14:47 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -26, -13}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2020-07-16 16:14:53 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -29, -13}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2020-07-16 16:14:57 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -28, -12}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2020-07-16 16:15:01 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -19, -11}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2020-07-16 16:15:06 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -21, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ED7;
},
{
glyphname = odotbelow;
lastChange = "2020-07-16 16:15:09 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -49, -17}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ECD;
},
{
glyphname = ohookabove;
lastChange = "2020-07-16 16:15:13 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 136, -99}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2020-07-16 16:16:24 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 177, -12}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2020-07-16 16:16:38 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -53, -19}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2020-07-16 16:16:49 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 135, -296}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2020-07-16 16:17:02 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 150, -91}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2020-07-16 16:17:11 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 59}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 335;
}
);
unicode = 1EE1;
},
{
glyphname = tcedilla;
lastChange = "2020-07-16 16:36:06 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -124, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 200;
}
);
unicode = 0163;
},
{
glyphname = udotbelow;
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EE5;
},
{
glyphname = uhookabove;
lastChange = "2020-07-16 16:17:21 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 145, -106}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2020-07-16 16:17:44 +0000";
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"340 268 OFFCURVE",
"354 296 OFFCURVE",
"367 317 CURVE",
"383 312 OFFCURVE",
"402 309 OFFCURVE",
"415 309 CURVE SMOOTH",
"459 309 OFFCURVE",
"478 326 OFFCURVE",
"478 370 CURVE SMOOTH",
"478 400 OFFCURVE",
"461 464 OFFCURVE",
"440 459 CURVE SMOOTH",
"435 458 OFFCURVE",
"432 455 OFFCURVE",
"431 449 CURVE SMOOTH",
"430 442 OFFCURVE",
"452 405 OFFCURVE",
"452 384 CURVE SMOOTH",
"452 362 OFFCURVE",
"443 337 OFFCURVE",
"420 337 CURVE SMOOTH",
"409 337 OFFCURVE",
"397 338 OFFCURVE",
"385 339 CURVE SMOOTH",
"344 344 LINE SMOOTH",
"325 347 OFFCURVE",
"313 339 OFFCURVE",
"305 323 CURVE SMOOTH",
"273 255 OFFCURVE",
"205 118 OFFCURVE",
"156 62 CURVE SMOOTH",
"91 -14 OFFCURVE",
"50 29 OFFCURVE",
"97 131 CURVE SMOOTH",
"102 140 OFFCURVE",
"107 152 OFFCURVE",
"114 167 CURVE SMOOTH",
"135 210 LINE SMOOTH",
"142 226 OFFCURVE",
"151 243 OFFCURVE",
"160 260 CURVE SMOOTH",
"181 303 OFFCURVE",
"201 329 OFFCURVE",
"224 344 CURVE",
"163 344 LINE SMOOTH",
"144 344 OFFCURVE",
"132 339 OFFCURVE",
"124 323 CURVE SMOOTH",
"109 292 OFFCURVE",
"88 252 OFFCURVE",
"68 213 CURVE SMOOTH",
"59 195 LINE SMOOTH",
"56 189 OFFCURVE",
"53 183 OFFCURVE",
"50 178 CURVE SMOOTH",
"43 165 OFFCURVE",
"52 162 OFFCURVE",
"59 162 CURVE",
"38 120 OFFCURVE",
"17 89 OFFCURVE",
"25 46 CURVE SMOOTH",
"33 11 OFFCURVE",
"63 1 OFFCURVE",
"88 1 CURVE SMOOTH",
"138 1 OFFCURVE",
"191 73 OFFCURVE",
"223 129 CURVE",
"200 60 OFFCURVE",
"217 1 OFFCURVE",
"269 1 CURVE SMOOTH",
"340 1 OFFCURVE",
"396 114 OFFCURVE",
"428 184 CURVE SMOOTH",
"437 204 OFFCURVE",
"422 210 OFFCURVE",
"414 193 CURVE SMOOTH",
"382 127 OFFCURVE",
"331 26 OFFCURVE",
"281 26 CURVE",
"274 27 OFFCURVE",
"268 32 OFFCURVE",
"263 41 CURVE SMOOTH",
"258 50 OFFCURVE",
"257 65 OFFCURVE",
"262 86 CURVE SMOOTH",
"267 119 OFFCURVE",
"305 200 OFFCURVE",
"329 245 CURVE SMOOTH"
);
}
);
width = 357;
}
);
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2020-07-16 16:19:45 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 177, -12}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2020-07-16 16:18:51 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -52, 0}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2020-07-16 16:19:35 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 135, -296}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2020-07-16 16:19:58 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 159, -103}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2020-07-16 16:20:33 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -15, -20}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 357;
}
);
unicode = 1EEF;
},
{
glyphname = ydotbelow;
lastChange = "2020-07-16 16:20:36 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 57, -169}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
unicode = 1EF5;
},
{
glyphname = yhookabove;
lastChange = "2020-07-16 16:20:39 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 145, -92}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
unicode = 1EF7;
},
{
glyphname = ytilde;
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 399;
}
);
unicode = 1EF9;
},
{
glyphname = dieresiscomb;
lastChange = "2020-07-16 16:23:58 +0000";
layers = (
{
components = (
{
name = dieresis;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 278;
}
);
unicode = 0308;
},
{
glyphname = dotaccentcomb;
lastChange = "2020-11-10 21:35:24 +0000";
layers = (
{
components = (
{
name = dotaccent;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 272;
}
);
unicode = 0307;
},
{
glyphname = gravecomb;
lastChange = "2020-07-16 15:51:33 +0000";
layers = (
{
components = (
{
name = grave;
transform = "{0.80387, 0, 0, 0.80387, 35, 362}";
}
);
hints = (
{
horizontal = 1;
place = "{569, 81}";
type = Stem;
},
{
place = "{36, 102}";
type = Stem;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 170;
}
);
note = gravecomb;
unicode = 0300;
},
{
glyphname = acutecomb;
lastChange = "2020-07-16 15:52:50 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{0.82424, 0, 0, 0.88863, 26, 70}";
}
);
hints = (
{
horizontal = 1;
place = "{248, 81}";
type = Stem;
},
{
place = "{41, 101}";
type = Stem;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 267;
}
);
note = acutecomb;
unicode = 0301;
},
{
glyphname = hungarumlautcomb;
lastChange = "2020-11-10 21:26:35 +0000";
layers = (
{
components = (
{
name = hungarumlaut;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 267;
}
);
unicode = 030B;
},
{
glyphname = circumflexcomb;
lastChange = "2020-07-16 15:51:33 +0000";
layers = (
{
components = (
{
name = circumflex;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 239;
}
);
unicode = 0302;
},
{
glyphname = caroncomb;
lastChange = "2020-11-10 21:26:43 +0000";
layers = (
{
components = (
{
name = caron;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 367;
}
);
unicode = 030C;
},
{
glyphname = brevecomb;
lastChange = "2020-07-16 15:51:33 +0000";
layers = (
{
components = (
{
name = breve;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 174;
}
);
unicode = 0306;
},
{
glyphname = ringcomb;
lastChange = "2020-07-16 16:24:20 +0000";
layers = (
{
components = (
{
name = ring;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 312;
}
);
unicode = 030A;
},
{
glyphname = tildecomb;
lastChange = "2020-07-16 16:20:25 +0000";
layers = (
{
components = (
{
name = tilde;
transform = "{0.87477, 0, 0, 0.87477, 40, 56}";
}
);
hints = (
{
horizontal = 1;
place = "{212, 41}";
type = Stem;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 310;
}
);
note = tildecomb;
unicode = 0303;
},
{
glyphname = macroncomb;
lastChange = "2020-11-10 21:27:35 +0000";
layers = (
{
components = (
{
name = macron;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 485;
}
);
unicode = 0304;
},
{
glyphname = hookabovecomb;
lastChange = "2020-07-16 15:55:59 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{-98, 21}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
place = "{5, -20}";
target = down;
type = TopGhost;
},
{
place = "{25, 20}";
type = Stem;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"66 614 OFFCURVE",
"84 627 OFFCURVE",
"113 627 CURVE SMOOTH",
"176 627 OFFCURVE",
"157 557 OFFCURVE",
"117 495 CURVE",
"113 487 OFFCURVE",
"122 478 OFFCURVE",
"133 489 CURVE SMOOTH",
"184 538 OFFCURVE",
"215 655 OFFCURVE",
"139 655 CURVE SMOOTH",
"121 655 OFFCURVE",
"101 650 OFFCURVE",
"79 639 CURVE SMOOTH",
"66 633 OFFCURVE",
"56 626 OFFCURVE",
"56 620 CURVE SMOOTH",
"56 616 OFFCURVE",
"57 614 OFFCURVE",
"61 614 CURVE SMOOTH"
);
}
);
width = 251;
}
);
note = hookabovecomb;
unicode = 0309;
},
{
glyphname = commaturnedabovecomb;
lastChange = "2020-11-10 21:28:01 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-0.99615, -0.08763, 0.08763, -0.99615, 157, 564}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 153;
}
);
unicode = 0312;
},
{
glyphname = horncomb;
lastChange = "2020-07-16 16:07:27 +0000";
layers = (
{
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"260 346 OFFCURVE",
"263 328 OFFCURVE",
"268 325 CURVE SMOOTH",
"278 318 OFFCURVE",
"317 309 OFFCURVE",
"338 309 CURVE SMOOTH",
"382 309 OFFCURVE",
"401 326 OFFCURVE",
"401 370 CURVE SMOOTH",
"401 400 OFFCURVE",
"384 464 OFFCURVE",
"363 459 CURVE SMOOTH",
"358 458 OFFCURVE",
"355 455 OFFCURVE",
"354 449 CURVE SMOOTH",
"353 442 OFFCURVE",
"375 405 OFFCURVE",
"375 384 CURVE SMOOTH",
"375 362 OFFCURVE",
"366 337 OFFCURVE",
"343 337 CURVE SMOOTH",
"317 337 OFFCURVE",
"281 342 OFFCURVE",
"273 343 CURVE"
);
}
);
width = 451;
}
);
unicode = 031B;
},
{
glyphname = dotbelowcomb;
lastChange = "2020-07-16 16:01:02 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{-106, 58}";
type = Stem;
},
{
place = "{114, 52}";
type = Stem;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
paths = (
{
closed = 1;
nodes = (
"108 -39 OFFCURVE",
"89 -52 OFFCURVE",
"90 -68 CURVE SMOOTH",
"91 -85 OFFCURVE",
"108 -104 OFFCURVE",
"118 -99 CURVE SMOOTH",
"138 -89 OFFCURVE",
"145 -77 OFFCURVE",
"148 -64 CURVE SMOOTH",
"156 -31 OFFCURVE",
"135 -30 OFFCURVE",
"111 -38 CURVE SMOOTH"
);
}
);
width = 211;
}
);
note = dotbelowcomb;
unicode = 0323;
},
{
glyphname = commaaccentcomb;
lastChange = "2020-11-10 21:48:32 +0000";
layers = (
{
components = (
{
name = comma;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 153;
}
);
unicode = 0326;
},
{
glyphname = cedillacomb;
lastChange = "2020-07-16 16:24:27 +0000";
layers = (
{
components = (
{
name = cedilla;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 379;
}
);
unicode = 0327;
},
{
glyphname = ogonekcomb;
lastChange = "2020-11-10 21:28:09 +0000";
layers = (
{
components = (
{
name = ogonek;
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 333;
}
);
unicode = 0328;
},
{
glyphname = brevecomb_acutecomb;
lastChange = "2020-07-16 15:57:15 +0000";
layers = (
{
components = (
{
name = breve;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 53, 92}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 336;
}
);
},
{
glyphname = brevecomb_gravecomb;
lastChange = "2020-07-16 15:57:19 +0000";
layers = (
{
components = (
{
name = breve;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 9, -157}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 336;
}
);
},
{
glyphname = brevecomb_hookabovecomb;
lastChange = "2020-07-16 15:56:34 +0000";
layers = (
{
components = (
{
name = breve;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 44, 27}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 336;
}
);
},
{
glyphname = brevecomb_tildecomb;
lastChange = "2020-07-16 15:57:29 +0000";
layers = (
{
components = (
{
name = breve;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -127, 151}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 355;
}
);
},
{
glyphname = circumflexcomb_acutecomb;
lastChange = "2020-07-16 15:57:37 +0000";
layers = (
{
components = (
{
name = circumflex;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 300, 39}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 582;
}
);
},
{
glyphname = circumflexcomb_gravecomb;
lastChange = "2020-07-16 15:56:49 +0000";
layers = (
{
components = (
{
name = circumflex;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 281, -226}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 239;
}
);
},
{
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2020-07-16 15:57:40 +0000";
layers = (
{
components = (
{
name = circumflex;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 269, -39}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 504;
}
);
},
{
glyphname = circumflexcomb_tildecomb;
lastChange = "2020-07-16 15:57:53 +0000";
layers = (
{
components = (
{
name = circumflex;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 31, 107}";
}
);
layerId = "8CCE14AF-3337-4F2C-A14C-E3F14A892F52";
width = 436;
}
);
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = GoodVibrationsPro;
},
{
name = postscriptFontName;
value = GoodVibrationsPro;
}
);
instanceInterpolations = {
"8CCE14AF-3337-4F2C-A14C-E3F14A892F52" = 1;
};
name = Script;
weightClass = Normal;
}
);
kerning = {
"8CCE14AF-3337-4F2C-A14C-E3F14A892F52" = {
"@MMK_L_T" = {
"@MMK_R_U" = 205;
"@MMK_R_i" = 75;
};
"@MMK_L_u" = {
"@MMK_R_s" = -1;
};
F = {
i = 75;
iogonek = 75;
};
P = {
a = -54;
aogonek = -54;
e = -54;
eogonek = -54;
i = 42;
iogonek = 42;
l = 21;
lcommaaccent = 21;
o = -61;
r = 28;
rcommaaccent = 28;
s = -34;
scedilla = -34;
scommaaccent = -34;
u = -61;
uogonek = -61;
y = -54;
y.001 = -61;
};
eight.onum = {
nine.onum = -44;
};
five.onum = {
seven.onum = 56;
};
four.onum = {
six.onum = 63;
};
one.onum = {
five.onum = -93;
nine.onum = -75;
seven.onum = -18;
three.onum = -62;
two.onum = -56;
};
seven.onum = {
eight.onum = -50;
nine.onum = -63;
};
three.onum = {
four.onum = -25;
};
};
};
manufacturer = "TypeSETit, LLC";
unitsPerEm = 1000;
versionMajor = 2;
versionMinor = 0;
}
